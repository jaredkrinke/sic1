{
  "achievementDescriptionAVOISION": {
    "defaultMessage": "Score at least 250 points in Avoision.",
    "description": "Description of the AVOISION achievement"
  },
  "achievementDescriptionERASE": {
    "defaultMessage": "Write a program that reads a single input and then deletes itself (sets all memory to zero), without producing output.",
    "description": "Description of the ERASE achievement"
  },
  "achievementDescriptionJOB_TITLE_1": {
    "defaultMessage": "Get promoted to Engineer.",
    "description": "Description of the JOB_TITLE_1 achievement"
  },
  "achievementDescriptionJOB_TITLE_2": {
    "defaultMessage": "Get promoted to Engineer II.",
    "description": "Description of the JOB_TITLE_2 achievement"
  },
  "achievementDescriptionJOB_TITLE_3": {
    "defaultMessage": "Get promoted to Senior Engineer.",
    "description": "Description of the JOB_TITLE_3 achievement"
  },
  "achievementDescriptionJOB_TITLE_4": {
    "defaultMessage": "Get promoted to Principal Engineer.",
    "description": "Description of the JOB_TITLE_4 achievement"
  },
  "achievementDescriptionJOB_TITLE_5": {
    "defaultMessage": "Get promoted to Partner Engineer.",
    "description": "Description of the JOB_TITLE_5 achievement"
  },
  "achievementDescriptionJOB_TITLE_6": {
    "defaultMessage": "Get promoted to Distinguished Engineer.",
    "description": "Description of the JOB_TITLE_6 achievement"
  },
  "achievementDescriptionJOB_TITLE_7": {
    "defaultMessage": "Get a new job title made just for you.",
    "description": "Description of the JOB_TITLE_7 achievement"
  },
  "achievementDescriptionJOB_TITLE_8": {
    "defaultMessage": "Obtain the final promotion.",
    "description": "Description of the JOB_TITLE_8 achievement"
  },
  "achievementDescriptionNEW_END": {
    "defaultMessage": "Share a true self-hosting program with an old friend.",
    "description": "Description of the NEW_END achievement"
  },
  "achievementDescriptionOMIT_SUBLEQ": {
    "defaultMessage": "Solve \"Addition\" without typing \"subleq\".",
    "description": "Description of the OMIT_SUBLEQ achievement"
  },
  "achievementDescriptionTIME_EARLY": {
    "defaultMessage": "Complete a task before 6am (06:00) local time.",
    "description": "Description of the TIME_EARLY achievement"
  },
  "achievementDescriptionTIME_LATE": {
    "defaultMessage": "Complete a task after 9pm (21:00) local time.",
    "description": "Description of the TIME_LATE achievement"
  },
  "achievementNameAVOISION": {
    "defaultMessage": "Master Avoider",
    "description": "Display name for the AVOISION achievement"
  },
  "achievementNameERASE": {
    "defaultMessage": "Self-Destruct",
    "description": "Display name for the ERASE achievement"
  },
  "achievementNameJOB_TITLE_1": {
    "defaultMessage": "Engineer",
    "description": "Display name for the JOB_TITLE_1 achievement"
  },
  "achievementNameJOB_TITLE_2": {
    "defaultMessage": "Engineer II",
    "description": "Display name for the JOB_TITLE_2 achievement"
  },
  "achievementNameJOB_TITLE_3": {
    "defaultMessage": "Senior Engineer",
    "description": "Display name for the JOB_TITLE_3 achievement"
  },
  "achievementNameJOB_TITLE_4": {
    "defaultMessage": "Principal Engineer",
    "description": "Display name for the JOB_TITLE_4 achievement"
  },
  "achievementNameJOB_TITLE_5": {
    "defaultMessage": "Partner Engineer",
    "description": "Display name for the JOB_TITLE_5 achievement"
  },
  "achievementNameJOB_TITLE_6": {
    "defaultMessage": "Distinguished Engineer",
    "description": "Display name for the JOB_TITLE_6 achievement"
  },
  "achievementNameJOB_TITLE_7": {
    "defaultMessage": "Special Promotion",
    "description": "Display name for the JOB_TITLE_7 achievement"
  },
  "achievementNameJOB_TITLE_8": {
    "defaultMessage": "Terminal Promotion",
    "description": "Display name for the JOB_TITLE_8 achievement"
  },
  "achievementNameNEW_END": {
    "defaultMessage": "To Be Continued",
    "description": "Display name for the NEW_END achievement"
  },
  "achievementNameOMIT_SUBLEQ": {
    "defaultMessage": "Zero Instruction Computer",
    "description": "Display name for the OMIT_SUBLEQ achievement"
  },
  "achievementNameTIME_EARLY": {
    "defaultMessage": "Up and at 'Em",
    "description": "Display name for the TIME_EARLY achievement"
  },
  "achievementNameTIME_LATE": {
    "defaultMessage": "Workin' Hard",
    "description": "Display name for the TIME_LATE achievement"
  },
  "achievementPopUpTitle": {
    "defaultMessage": "Achievement Unlocked",
    "description": "Title of the 'achievement unlocked' pop-up message"
  },
  "achievementProgressDetail": {
    "defaultMessage": "{achievedCount} of {achievementCount} ({percent})",
    "description": "Achievement progress expressed numerically"
  },
  "achievementProgressLine": {
    "defaultMessage": "Achievement Progress: {summary}",
    "description": "Line of text summarizing achievement progress"
  },
  "avoisionDefaultScore1": {
    "defaultMessage": "Jerin",
    "description": "Name of the top scorer for the default scores in Avoision"
  },
  "avoisionDefaultScore2": {
    "defaultMessage": "Pat",
    "description": "Name of the second-to-top scorer for the default scores in Avoision"
  },
  "avoisionDefaultScore3": {
    "defaultMessage": "Ted",
    "description": "Name of the third-to-top scorer for the default scores in Avoision"
  },
  "avoisionGameOver": {
    "defaultMessage": "Game Over",
    "description": "Message shown when a round of Avoision ends without a new high score"
  },
  "avoisionNewHigh": {
    "defaultMessage": "New High Score!",
    "description": "Message shown when a new high score is achieved in Avoision"
  },
  "avoisionPoints": {
    "defaultMessage": "Points: {value}",
    "description": "In-game display of points for Avoision"
  },
  "avoisionScore": {
    "defaultMessage": "Score: {value}",
    "description": "In-game display of score for Avoision"
  },
  "bootMessage": {
    "defaultMessage": "\n ████  █████   ████\n██       █    ██\n ███     █    █      SYSTEMS (TM)\n   ██    █    ██\n████   █████   ████\n\n     \"Synergy, simply.\"\n\n(C) 1980 SIC Systems, Inc.\n\nSIC-1 emulator - 50 Hz          ... OK\nChecking SIC-1 memory      ###/256B OK\nSimulating SIC-1 8-bit I/O port ... OK\n\nLoading SIC-1 Development Environment v120279...\n\nStarting hi-res, tri-color graphical session... ",
    "description": "Text of the boot screen, shown when launching the game; notes: use spaces for alignment, the '█' character is used for an ASCII art logo, and '...' and '###/256B ' have special meaning and should be preserved"
  },
  "buttonAchievementsMenu": {
    "defaultMessage": "Achievements",
    "description": "Text shown on the button to open the achievements message box"
  },
  "buttonAvoisionPage": {
    "defaultMessage": "Avoision",
    "description": "Text on the button that opens the task viewer to the Avoision page"
  },
  "buttonCancel": {
    "defaultMessage": "Cancel",
    "description": "Text shown on various 'cancel' buttons when discarding changes to settings"
  },
  "buttonCommentBlock": {
    "defaultMessage": "Comment Block",
    "description": "Text on the 'comment block' button, which comments out the selected lines of program text"
  },
  "buttonCompile": {
    "defaultMessage": "Compile",
    "description": "Text on the 'compile' button, for compiling a program and loading it into the debugger"
  },
  "buttonConfigureInput": {
    "defaultMessage": "Configure Input",
    "description": "Text on the 'configure input' button, which supports editing input for Sandbox Mode"
  },
  "buttonCopyToClipboard": {
    "defaultMessage": "Copy to Clipboard",
    "description": "Text shown on the 'copy text to clipboard' button (only used on the web version)"
  },
  "buttonCredits": {
    "defaultMessage": "Credits",
    "description": "Text shown on the button to open the credits message box"
  },
  "buttonDisableAutoIndent": {
    "defaultMessage": "Disable Auto-Indent Mode",
    "description": "Text on the 'disable auto-indent mode' button, which toggles automatic insertion of indentation when adding a new line to the program text"
  },
  "buttonDisableTabInsertMode": {
    "defaultMessage": "Disable Tab Insert Mode",
    "description": "Text on the 'disable tab insert mode' button, which toggles the ability for the tab key to insert a tab character instead of the browser-default behavior of advancing keyboard focus to the next element"
  },
  "buttonEnableAutoIndent": {
    "defaultMessage": "Enable Auto-Indent Mode",
    "description": "Text on the 'enable auto-indent mode' button, which toggles automatic insertion of indentation when adding a new line to the program text"
  },
  "buttonEnableTabInsertMode": {
    "defaultMessage": "Enable Tab Insert Mode",
    "description": "Text on the 'enable tab insert mode' button, which toggles the ability for the tab key to insert a tab character instead of the browser-default behavior of advancing keyboard focus to the next element"
  },
  "buttonExit": {
    "defaultMessage": "Exit SIC-1",
    "description": "Text on the button that exits the game (only used on the app version)"
  },
  "buttonHelp": {
    "defaultMessage": "Help",
    "description": "Text on the 'help' button, which displays the help menu, providing hints and a link to the manual"
  },
  "buttonHelpMenu": {
    "defaultMessage": "Help",
    "description": "Text on the button that opens the 'help' menu'"
  },
  "buttonHint": {
    "defaultMessage": "Show Hint",
    "description": "Text on the button to show a hint for the current task"
  },
  "buttonIndentBlock": {
    "defaultMessage": "Indent Block",
    "description": "Tooltip for the 'indent block' button, which prepends one level of indentation to the selected lines of program text"
  },
  "buttonLicenses": {
    "defaultMessage": "click here",
    "description": "Text on the link to third party licenses"
  },
  "buttonManualAssembly": {
    "defaultMessage": "Open SIC-1 Assembly Manual",
    "description": "Text on the button to open the SIC-1 Assembly manual"
  },
  "buttonManualDevEnv": {
    "defaultMessage": "Open Dev. Environment Manual",
    "description": "Text on the button to open the SIC-1 Development Environment manual"
  },
  "buttonManualNewWindow": {
    "defaultMessage": "Open Combined Manual in New Window",
    "description": "Text on the button to open the combined manual in a new window"
  },
  "buttonMenu": {
    "defaultMessage": "Menu",
    "description": "Text on the 'menu' button, which opens the main menu"
  },
  "buttonMenuMailViewer": {
    "defaultMessage": "Electronic Mail",
    "description": "Text on the button to open the mail viewer (using an antiquated term, if possible)"
  },
  "buttonMenuTaskViewer": {
    "defaultMessage": "Program Inventory",
    "description": "Text on the button to open the task viewer/program inventory"
  },
  "buttonOptionsMenu": {
    "defaultMessage": "Options",
    "description": "Text on the button that opens the options menu'"
  },
  "buttonPause": {
    "defaultMessage": "Pause",
    "description": "Text on 'pause' button that pauses a running program"
  },
  "buttonPresentationSettings": {
    "defaultMessage": "Presentation Settings",
    "description": "Text on the button to open the 'presentation settings' menu, for editing full-screen, sound, etc."
  },
  "buttonSandboxMenu": {
    "defaultMessage": "Sandbox Mode",
    "description": "Text on the button that opens the task viewer to the Sandbox Mode page"
  },
  "buttonSaveChanges": {
    "defaultMessage": "Save Changes",
    "description": "Text shown on multiple 'save changes' buttons when editing settings"
  },
  "buttonSaveClear": {
    "defaultMessage": "Clear Data",
    "description": "Text shown on the initial 'clear save data' button (only used on the web version)"
  },
  "buttonSaveClearCancel": {
    "defaultMessage": "No, Keep My Save Data",
    "description": "Text shown on the 'delete save data' cancellation button (only used on the web version)"
  },
  "buttonSaveClearConfirm": {
    "defaultMessage": "Yes, Delete My Save Data",
    "description": "Text shown on the 'delete save data' confirmation button (only used on the web version)"
  },
  "buttonSaveClearMenu": {
    "defaultMessage": "Clear Save Data",
    "description": "Text shown on the button to open the 'clear save data' message box (only used on the web version)"
  },
  "buttonSaveDataImport": {
    "defaultMessage": "Import Save Data",
    "description": "Text shown on the 'import save data' button"
  },
  "buttonSaveExportMenu": {
    "defaultMessage": "Export Save Data",
    "description": "Text on the button to open the 'export save data' message box (only used on the web version)"
  },
  "buttonSaveImportMenu": {
    "defaultMessage": "Import Save Data",
    "description": "Text on the button to open the 'import save data' message box (only used on the web version)"
  },
  "buttonSaveMenu": {
    "defaultMessage": "Manage Save Data",
    "description": "Text on the button to open the save data management menu (only used on the web version)"
  },
  "buttonSaveOverwriteConfirm": {
    "defaultMessage": "Yes, Overwrite My Save Data",
    "description": "Text shown on the 'yes, overwrite save data' confirmation button when importing save data (only used on the web version)"
  },
  "buttonStep": {
    "defaultMessage": "Step",
    "description": "Text on the 'step' button, for advancing the debugger one instruction"
  },
  "buttonStepRate4x": {
    "defaultMessage": "Turbo (4x)",
    "description": "Text on the 'run' button for increasing to 4x speed"
  },
  "buttonStepRate50x": {
    "defaultMessage": "Turbo (50x)",
    "description": "Text on the 'run' button for increasing to 50x speed"
  },
  "buttonStepRateDefault": {
    "defaultMessage": "Run",
    "description": "Text on the 'run' button when going to the default step rate (speed)"
  },
  "buttonStop": {
    "defaultMessage": "Stop",
    "description": "Text on the 'stop' button that stops a running program"
  },
  "buttonUncommentBlock": {
    "defaultMessage": "Uncomment Block",
    "description": "Text on the 'uncomment block' button, which comments the selected lines of program text"
  },
  "buttonUnindentBlock": {
    "defaultMessage": "Unindent Block",
    "description": "Text on the 'unindent block' button, which removes one level of indentation from the selected lines of program text"
  },
  "buttonUserSettingsMenu": {
    "defaultMessage": "User Settings",
    "description": "Text shown on the button to open the 'user settings' menu (only used on the web version)"
  },
  "chartFriendAvoision": {
    "defaultMessage": "Avoision High Scores",
    "description": "Title of friend leaderboard chart for Avoision high scores"
  },
  "chartFriendBytes": {
    "defaultMessage": "Bytes Read (Friends)",
    "description": "Title of friend leaderboard for 'bytes read'"
  },
  "chartFriendCycles": {
    "defaultMessage": "Cycles Executed (Friends)",
    "description": "Title of friend leaderboard for 'cycles executed'"
  },
  "chartFriendTasks": {
    "defaultMessage": "Completed Tasks (Friends)",
    "description": "Title of friend leaderboard chart for 'tasks completed'"
  },
  "chartTitleBytes": {
    "defaultMessage": "Bytes Read: {bytes}",
    "description": "Title for a 'bytes read' chart"
  },
  "chartTitleCycles": {
    "defaultMessage": "Cycles Executed: {cycles}",
    "description": "Title for a 'cycles executed' chart"
  },
  "chartTitleTasks": {
    "defaultMessage": "Completed Tasks",
    "description": "Title for the 'tasks completed' chart"
  },
  "checkboxFullscreen": {
    "defaultMessage": "Full screen:",
    "description": "Label for the 'full screen' checkbox toggle"
  },
  "checkboxMusicAfter": {
    "defaultMessage": "Enable music",
    "description": "Label for the music checkbox, when appearing after the checkbox"
  },
  "checkboxMusicBefore": {
    "defaultMessage": "Music",
    "description": "Label for music checkbox, when appearing before the checkbox"
  },
  "checkboxShareName": {
    "defaultMessage": "Show my name in public leaderboards (if unchecked, your statistics will be shown without a name)",
    "description": "Explanatory text for checkbox that opts into showing the player's name in public leaderboards"
  },
  "checkboxSoundEffectsAfter": {
    "defaultMessage": "Enable sound effects",
    "description": "Label for the sound effects checkbox, when appearing after the checkbox"
  },
  "checkboxSoundEffectsBefore": {
    "defaultMessage": "Sound effects",
    "description": "Label for sound effects checkbox, when appearing before the checkbox"
  },
  "colorSchemeAmber Phosphor": {
    "defaultMessage": "Amber Phosphor",
    "description": "Display name for the 'Amber Phosphor' color scheme"
  },
  "colorSchemeBlack on White": {
    "defaultMessage": "Black on White",
    "description": "Display name for the 'Black on White' color scheme"
  },
  "colorSchemeDefault": {
    "defaultMessage": "Default",
    "description": "Display name for the 'Default' color scheme"
  },
  "colorSchemeGreen Phosphor": {
    "defaultMessage": "Green Phosphor",
    "description": "Display name for the 'Green Phosphor' color scheme"
  },
  "colorSchemeWhite on Black": {
    "defaultMessage": "White on Black",
    "description": "Display name for the 'White on Black' color scheme"
  },
  "compilationErrorAddressRangeError": {
    "defaultMessage": "Invalid address argument: \"{argument}\" (must be an integer on the range [{rangeMin}, {rangeMax}])!",
    "description": "Error message shown when the 'address range error' compilation error is encountered, indicating an address literal isn't within the valid range"
  },
  "compilationErrorInternal": {
    "defaultMessage": "Internal compiler error!",
    "description": "Error message shown when there was an unknown internal compiler error, indicating a bug in the compiler--this should never happen"
  },
  "compilationErrorInvalidAddressExpressionError": {
    "defaultMessage": "Expected number literal or reference, but got: \"{token}\"!",
    "description": "Error message shown when the 'InvalidAddressExpressionError' compilation error is encountered, indicating an unexpected token was encountered where an address was expected"
  },
  "compilationErrorInvalidBreakpointError": {
    "defaultMessage": "Breakpoints are only supported on subleq instructions!",
    "description": "Error message shown when the 'InvalidBreakpointError' compilation error is encountered, indicating a breakpoint was set somewhere other than a 'subleq' instruction"
  },
  "compilationErrorInvalidCommandError": {
    "defaultMessage": "Unknown command: \"{command}\" (valid commands are: \"subleq\" and \".data\")!",
    "description": "Error message shown when the 'InvalidCommandError' compilation error is encountered, indicating a command other than 'subleq' and '.data' was encountered"
  },
  "compilationErrorInvalidDataArgumentCountError": {
    "defaultMessage": "Invalid number of arguments for \".data\": {count} (must have at least 1 argument)!",
    "description": "Error message shown when the 'InvalidDataArgumentCountError' compilation error is encountered, indicating no arguments were supplied for a '.data' directive"
  },
  "compilationErrorInvalidEscapeCodeError": {
    "defaultMessage": "Invalid escape code: \"{character}\"!",
    "description": "Error message shown when the 'InvalidEscapeCodeError' compilation error is encountered, indicating a character escape code was not valid, likely indicating an errant backslash"
  },
  "compilationErrorInvalidSubleqArgumentCountError": {
    "defaultMessage": "Invalid number of arguments for \"subleq\": {count} (must be between {rangeMin} and {rangeMax}, inclusive)!",
    "description": "Error message shown when the 'InvalidSubleqArgumentCountError' compilation error is encountered, indicating a 'subleq' instruction didn't have 2 or 3 addresses specified for it"
  },
  "compilationErrorInvalidTokenError": {
    "defaultMessage": "Invalid token: \"{token}\"!",
    "description": "Error message shown when the 'InvalidTokenError' compilation error is encountered, indicating an unrecognized token was encountered when parsing"
  },
  "compilationErrorInvalidValueExpressionError": {
    "defaultMessage": "Expected number, character, string, or reference, but got: \"{token}\"!",
    "description": "Error message shown when the 'InvalidValueExpressionError' compilation error is encountered, indicating an unrecognized value expression was encountered"
  },
  "compilationErrorLabelAlreadyDefinedError": {
    "defaultMessage": "Label already defined: \"{label}\"!",
    "description": "Error message shown when the 'LabelAlreadyDefinedError' compilation error is encountered, indicating a label was defined more than once"
  },
  "compilationErrorMissingCommaOrWhitespaceError": {
    "defaultMessage": "Whitespace or comma required before argument: \"{argument}\"",
    "description": "Error message shown when the 'MissingCommaOrWhitespaceError' compilation error is encountered, indicating there wasn't whitespace or a comma between arguments"
  },
  "compilationErrorMissingWhitespaceError": {
    "defaultMessage": "Whitespace is required after \"{command}\"!",
    "description": "Error message shown when the 'MissingWhitespaceError' compilation error is encountered, indicating there was no whitespace after a 'subleq' or '.data' command"
  },
  "compilationErrorProgramTooLargeError": {
    "defaultMessage": "Program is too long (maximum size: {rangeMax} bytes; program size: {bytes} bytes)!",
    "description": "Error message shown when the 'ProgramTooLargeError' compilation error is encountered, indicating the compiled program doesn't fit into 253 bytes"
  },
  "compilationErrorUndefinedReferenceError": {
    "defaultMessage": "Undefined reference: \"{label}\"!",
    "description": "Error message shown when the 'UndefinedReferenceError' compilation error is encountered, indicating a reference was made to an undeclared label"
  },
  "compilationErrorValueRangeError": {
    "defaultMessage": "Invalid value argument: {value} (must be an integer on the range [{rangeMin}, {rangeMax}])!",
    "description": "Error message shown when the 'ValueRangeError' compilation error is encountered, indicating a value didn't fit in a single signed byte"
  },
  "contactWithTitle": {
    "defaultMessage": "{name} ({title})",
    "description": "Display string for a contact when a job title should be shown along with the contact's name"
  },
  "contact_allName": {
    "defaultMessage": "All Engineering",
    "description": "Name for the 'all' contact in the story"
  },
  "contact_assistantName": {
    "defaultMessage": "Jeffrey Young",
    "description": "Name for the 'assistant' contact in the story"
  },
  "contact_assistantTitle": {
    "defaultMessage": "Executive Assistant",
    "description": "Job title for the 'assistant' contact in the story"
  },
  "contact_badManager2Name": {
    "defaultMessage": "Don Cooper",
    "description": "Name for the 'badManager2' contact in the story"
  },
  "contact_badManager2Title": {
    "defaultMessage": "Principal Engineering Lead",
    "description": "Job title for the 'badManager2' contact in the story"
  },
  "contact_badManagerName": {
    "defaultMessage": "Don Cooper",
    "description": "Name for the 'badManager' contact in the story"
  },
  "contact_badManagerTeamName": {
    "defaultMessage": "Don's Team",
    "description": "Name for the 'badManagerTeam' contact in the story"
  },
  "contact_badManagerTitle": {
    "defaultMessage": "Senior Engineering Lead",
    "description": "Job title for the 'badManager' contact in the story"
  },
  "contact_flunky1Name": {
    "defaultMessage": "Ted Philips",
    "description": "Name for the 'flunky1' contact in the story"
  },
  "contact_flunky1Title": {
    "defaultMessage": "Engineer",
    "description": "Job title for the 'flunky1' contact in the story"
  },
  "contact_flunkyName": {
    "defaultMessage": "Ted Philips",
    "description": "Name for the 'flunky' contact in the story"
  },
  "contact_flunkyTitle": {
    "defaultMessage": "Trainee",
    "description": "Job title for the 'flunky' contact in the story"
  },
  "contact_goodManager2Name": {
    "defaultMessage": "Pat Miller",
    "description": "Name for the 'goodManager2' contact in the story"
  },
  "contact_goodManagerName": {
    "defaultMessage": "Pat Miller",
    "description": "Name for the 'goodManager' contact in the story"
  },
  "contact_goodManagerTeamName": {
    "defaultMessage": "Pat's Team",
    "description": "Name for the 'goodManagerTeam' contact in the story"
  },
  "contact_goodManagerTitle": {
    "defaultMessage": "Senior Engineering Lead",
    "description": "Job title for the 'goodManager' contact in the story"
  },
  "contact_hrName": {
    "defaultMessage": "Mary Townsend",
    "description": "Name for the 'hr' contact in the story"
  },
  "contact_hrTitle": {
    "defaultMessage": "Human Resources",
    "description": "Job title for the 'hr' contact in the story"
  },
  "contact_mentorName": {
    "defaultMessage": "Feng Lee",
    "description": "Name for the 'mentor' contact in the story"
  },
  "contact_mentorTitle": {
    "defaultMessage": "Senior Engineer",
    "description": "Job title for the 'mentor' contact in the story"
  },
  "contact_onboardingName": {
    "defaultMessage": "SIC Systems Onboarding",
    "description": "Name for the 'onboarding' contact in the story"
  },
  "contact_otherSkipName": {
    "defaultMessage": "Jerin Kransky",
    "description": "Name for the 'otherSkip' contact in the story"
  },
  "contact_otherSkipTitle": {
    "defaultMessage": "Partner Engineering Manager",
    "description": "Job title for the 'otherSkip' contact in the story"
  },
  "contact_ownerName": {
    "defaultMessage": "Ilano Moscato",
    "description": "Name for the 'owner' contact in the story"
  },
  "contact_ownerTitle": {
    "defaultMessage": "Benevolent Dictator for Life",
    "description": "Job title for the 'owner' contact in the story"
  },
  "contact_skipName": {
    "defaultMessage": "Rick Wagner",
    "description": "Name for the 'skip' contact in the story"
  },
  "contact_skipTitle": {
    "defaultMessage": "Partner Engineering Manager",
    "description": "Job title for the 'skip' contact in the story"
  },
  "contact_taskManagementName": {
    "defaultMessage": "Automated Task Management",
    "description": "Name for the 'taskManagement' contact in the story"
  },
  "contentEditProfile": {
    "defaultMessage": "<p>Update your user profile as needed:</p><p>{form}</p><p>Note: if you would like to have all of your leaderboard data deleted, send an email to {email} with \"{userId}\" (your randomly-generated user id) in the subject.</p>",
    "description": "Markup shown when editing the user profile (only used on the web version)"
  },
  "contentHalt": {
    "defaultMessage": "<h3>Program Halted</h3><p>The program halted itself by branching to \"@HALT\" (address 255).</p>",
    "description": "Markup that is shown when a program halts"
  },
  "contentInputEditor": {
    "defaultMessage": "<h3>Instructions</h3><p>For input, use the same syntax as in a <code>.data</code> directive (examples: <code>-7</code>, <code>''A''</code>, <code>-\"Negated string\"</code>).</p>",
    "description": "Markup shown at the beginning of the 'input editor' of Sandbox Mode"
  },
  "contentNoProgram": {
    "defaultMessage": "<h3>No Program Loaded!</h3><p>Please compile and load a program.</p>",
    "description": "Markup that is shown when attempting to run an empty program"
  },
  "contentSaveClearConfirm": {
    "defaultMessage": "<h3>WARNING</h3><p>This will delete ALL of your save data! All of your solutions, your user name, and achievements will be lost!</p><p>Are you sure you want to delete all of your data?</p>",
    "description": "Markup shown in the 'clear save data' confirmation message box (only used on the web version)"
  },
  "contentSaveOverwrite": {
    "defaultMessage": "<h3>WARNING</h3><p>This will overwrite ALL of your current save data with the imported save data!</p><p>Are you sure you want to overwrite any existing save data?</p>",
    "description": "Markup shown as a warning when overwriting save data during an import (only used on web version)"
  },
  "defaultName": {
    "defaultMessage": "Bill",
    "description": "Default user name (only used in web version)"
  },
  "errorInputParsing": {
    "defaultMessage": "Unexpected token: \"{token}\"!",
    "description": "Error text shown in Sandbox Mode when there's a parsing error for custom input"
  },
  "errorNameExists": {
    "defaultMessage": "A solution named \"{name}\" already exists.",
    "description": "Error message for 'name already exists' error"
  },
  "errorNameInvalid": {
    "defaultMessage": "Solution names must be at most {maxLength} characters long, and only a single line.",
    "description": "Error message for 'invalid name' error"
  },
  "headerCompilationError": {
    "defaultMessage": "Compilation Error",
    "description": "Heading for 'compilation error' message box"
  },
  "headerIOOutput": {
    "defaultMessage": "Out",
    "description": "Column heading for the IO table, for output, when no expected output is prescribed, i.e. in Sandbox Mode (note: this string should be as short as possible)"
  },
  "headerInputActual": {
    "defaultMessage": "Actual",
    "description": "Column heading for the IO table, for actual output (note: this string should be as short as possible)"
  },
  "headerInputExpected": {
    "defaultMessage": "Expected",
    "description": "Column heading for the IO table, for expected output (note: this string should be as short as possible)"
  },
  "headerInputIn": {
    "defaultMessage": "In",
    "description": "Column heading for the IO table, for input (note: this string should be as short as possible)"
  },
  "headerStateMemory": {
    "defaultMessage": "Memory",
    "description": "Header for the 'memory' table, which shows the hexadecimal values of all 256 bytes of the emulator's memory"
  },
  "headerTestSet": {
    "defaultMessage": "Test {number}",
    "description": "Header for the IO table, indicating which test set is running"
  },
  "headerVariableLabel": {
    "defaultMessage": "Label (Address)",
    "description": "Header for the 'label' column of the variable/watch table, showing name/label and memory address of variables while debugging"
  },
  "headerVariableValue": {
    "defaultMessage": "Value",
    "description": "Header for the 'value' column of the variable/watch table, showing the value of variables while debugging"
  },
  "headingEditing": {
    "defaultMessage": "Editing Tools",
    "description": "Heading for the 'editing tools' panel, which contains buttons for modifying program text"
  },
  "headingInputEditor": {
    "defaultMessage": "Input values",
    "description": "Heading for the 'input values' section of Sandbox Mode's input editor"
  },
  "headingInputFormats": {
    "defaultMessage": "Display formats",
    "description": "Heading for the 'display formats' section of Sandbox Mode's editor"
  },
  "headingProgress": {
    "defaultMessage": "Employee Statistics",
    "description": "Heading for 'task progress' and 'achievements' group in the program inventory/task selector window"
  },
  "intro": {
    "defaultMessage": "<h3>Job Description:</h3>\r\n<p>SIC Systems is looking for experienced programmers to join our team!</p>\r\n<p>As an engineer at SIC Systems, you'll produce highly efficient programs for our flagship product: the Single Instruction Computer Mark 1 (SIC-1). You will be competing against other engineers to produce the fastest and smallest programs.</p>\r\n<p>This is a full-time salaried role. The ideal candidate for this job will have a PhD and 15 - 20 years (or more) of industry experience, along with a relentless attention to detail and exemplary interpersonal skills. Scheduling flexibility is a plus, as we push toward our worldwide launch.</p>\r\n<h3>About SIC Systems:</h3>\r\n<p>SIC Systems is the world leader in single-instruction computing. Our mission is to simplify computation, and thus simplify the world. We are innovative, trustworthy, and ethical.</p>",
    "description": "HTML content shown in the introductory message box ('job application')"
  },
  "introApplyButton": {
    "defaultMessage": "Apply for the Job",
    "description": "Button text for the 'apply' button in the introductory form"
  },
  "introApplyInvitation": {
    "defaultMessage": "After completing the form above, click the button below to submit your job application:",
    "description": "Invitation to click the 'apply' button in the introductory form"
  },
  "introApplyLabel": {
    "defaultMessage": "Click the button below to submit your job application:",
    "description": "Label for the 'apply for the job' button on the introductory form"
  },
  "introHeaderJobApplication": {
    "defaultMessage": "Job Application:",
    "description": "Header text for the 'job application' form"
  },
  "introLabelName": {
    "defaultMessage": "Name:",
    "description": "Label for user name on the introductory form"
  },
  "ioTypeCharacters": {
    "defaultMessage": "Characters",
    "description": "Label for the 'character' type, for task input/output in Sandbox Mode"
  },
  "ioTypeNumbers": {
    "defaultMessage": "Numbers",
    "description": "Label for the 'number' type, for task input/output in Sandbox Mode"
  },
  "ioTypeStrings": {
    "defaultMessage": "Strings",
    "description": "Label for the 'string' type, for task input/output in Sandbox Mode"
  },
  "jobTitle0": {
    "defaultMessage": "Trainee",
    "description": "Starting job title (during training/tutorial)"
  },
  "jobTitle1": {
    "defaultMessage": "Engineer",
    "description": "Initial engineering job title (after completing training/tutorial)"
  },
  "jobTitle2": {
    "defaultMessage": "Engineer II",
    "description": "Second engineering job title"
  },
  "jobTitle3": {
    "defaultMessage": "Senior Engineer",
    "description": "Third engineering job title"
  },
  "jobTitle4": {
    "defaultMessage": "Principal Engineer",
    "description": "Fourth engineering job title"
  },
  "jobTitle5": {
    "defaultMessage": "Partner Engineer",
    "description": "Fifth engineering job title"
  },
  "jobTitle6": {
    "defaultMessage": "Distinguished Engineer",
    "description": "Sixth engineering job title (noting distinguished accomplishments)"
  },
  "jobTitle7": {
    "defaultMessage": "Technical Fellow",
    "description": "Top engineering job title"
  },
  "jobTitle8": {
    "defaultMessage": "Technical Fellow Emeritus",
    "description": "Final job title (implying the person left the company after achieving the pinnacle of success)"
  },
  "labelStateBytes": {
    "defaultMessage": "Bytes",
    "description": "Label in the 'state' table for byte count (note: this string should be as short as possible)"
  },
  "labelStateCycles": {
    "defaultMessage": "Cycles",
    "description": "Label in the 'state' table for cycle count (note: this string should be as short as possible)"
  },
  "labelStateRunning": {
    "defaultMessage": "State",
    "description": "Label in the 'state' table for running vs. stopped (note: this string should be as short as possible)"
  },
  "labelWatchedAddress": {
    "defaultMessage": "Address {address}",
    "description": "Text shown in the 'variables' table for a manually watched address, i.e. an address the user manually highlighted"
  },
  "languageDefault": {
    "defaultMessage": "Default ({defaultLanguage})",
    "description": "Text shown in the language selector for the default language"
  },
  "languageName": {
    "defaultMessage": "English",
    "description": "The name of the language being translated, in that language (using Title Case where appropriate), used for the language selection dropdown--but note that a full rebuild of the game is required for this string (only) to take effect"
  },
  "languageOption": {
    "defaultMessage": "{name} ({locale})",
    "description": "Text shown in the language selector for each language, using its native name (e.g. 'English') and locale string (e.g. 'en')"
  },
  "loadFailed": {
    "defaultMessage": "(load failed)",
    "description": "Text to show when an asynchronous load of a UI component failed"
  },
  "loading": {
    "defaultMessage": "(loading...)",
    "description": "Text to show while a portion of the UI is loading"
  },
  "mailViewerButtonContinueEditing": {
    "defaultMessage": "Continue Editing Current Program",
    "description": "Button text for the 'continue editing' button in the mail viewer"
  },
  "mailViewerButtonCredits": {
    "defaultMessage": "View Credits",
    "description": "Button text for the 'view credits' button in the mail viewer"
  },
  "mailViewerButtonNextTask": {
    "defaultMessage": "View Next Task",
    "description": "Button text for the 'view next task' button in the mail viewer"
  },
  "mailViewerButtonOpenManual": {
    "defaultMessage": "Open Manual In-Game",
    "description": "Button text for the 'open manual in-game' button in the mail viewer"
  },
  "mailViewerButtonOpenManualNewWindow": {
    "defaultMessage": "Open Manual in New Window",
    "description": "Button text for the 'open manual in new window' button in the mail viewer"
  },
  "mailViewerButtonSandbox": {
    "defaultMessage": "View Sandbox Mode",
    "description": "Button text for the 'view sandbox mode' button in the mail viewer"
  },
  "mailViewerButtonViewTask": {
    "defaultMessage": "View {taskName}",
    "description": "Button text for the 'view a specific task' button in the mail viewer"
  },
  "mailViewerExtraToLineIndent": {
    "defaultMessage": "{nbsp}{nbsp}{nbsp}{nbsp}{nbsp} ",
    "description": "Optional indent using {nbsp} non-breaking spaces to line up with 'from' line"
  },
  "mailViewerGroupUnread": {
    "defaultMessage": "Unread Mail",
    "description": "Group heading for 'unread mail' in the mail viewer"
  },
  "mailViewerHeadingRead": {
    "defaultMessage": "Read Mail",
    "description": "Mail viewer heading for mail that has already been read"
  },
  "mailViewerHeadingUnread": {
    "defaultMessage": "Inbox",
    "description": "Mail viewer heading for unread mail"
  },
  "mailViewerMailHeading": {
    "defaultMessage": "<cap>To</cap>:{nbsp}{nbsp} {to}{newline}<cap>From</cap>: {from}{newline}{newline}<cap>Subject</cap>: {subject}{newline}",
    "description": "Heading content markup shown in the mail viewer for a particular mail (optionally use {nbsp} non-breaking spaces to line up 'to' and 'from' lines); use {newline} at the end of each line"
  },
  "mailViewerTaskCompleted": {
    "defaultMessage": "Well done! Your program produced the correct output. Thanks for your contribution to SIC Systems!",
    "description": "Markup shown for a 'task completed successfully' mail, indicating the program was correct"
  },
  "mailViewerTaskSubject": {
    "defaultMessage": "RE: {taskName}",
    "description": "Subject line for task completion mails"
  },
  "mailViewerViewNextUnread": {
    "defaultMessage": "View Next Unread Mail",
    "description": "Button text for the 'view next unread mail' button in the mail viewer"
  },
  "mails0_0Content": {
    "defaultMessage": "<h3>Single Instruction Computer Mark 1 (SIC-1)</h3>\n<p>The Single Instruction Computer Mark 1 (SIC-1) is an 8-bit computer with 256 bytes of memory. Programs for the SIC-1 are written in SIC-1 Assembly Language, as described below.</p>\n<h3><code>subleq</code> instruction</h3>\n<p>Each <code>subleq</code> instruction is 3 bytes, specified as follows:</p>\n<pre><code>subleq A B [C]\n</code></pre>\n<p><code>A</code>, <code>B</code>, and <code>C</code> are memory addresses (0 - 255) or labels.</p>\n<p><code>subleq</code> subtracts the value at address <code>B</code> from the value at address <code>A</code> and stores the result at address <code>A</code> (i.e. <code>mem[A]</code> is set to <code>mem[A] - mem[B]</code>).</p>\n<p>If the result is ≤ 0, execution branches to address <code>C</code>.</p>\n<p>Note that if <code>C</code> is not specified, the address of the next instruction is automatically added by the assembler (in effect, this means that taking the branch is no different from advancing to the next instruction).</p>\n<h3>Built-in addresses</h3>\n<p>For convenience, addresses can be specified using labels. The following predefined labels are always available:</p>\n<ul>\n<li><code>@MAX</code> (252): Maximum user-modifiable address</li>\n<li><code>@IN</code> (253): Reads a value from input (writes are ignored)</li>\n<li><code>@OUT</code> (254): Writes a result to output (reads as zero)</li>\n<li><code>@HALT</code> (255): Terminates the program when accessed (reads and write are ignored)</li>\n</ul>\n<h3><code>subleq</code> example</h3>\n<p>Below is a very simple SIC-1 program that negates one input value and writes it out.</p>\n<p>E.g. if the input value from <code>@IN</code> is 3, it subtracts 3 from <code>@OUT</code> (which reads as zero), and the result of 0 - 3 = -3 is written out.</p>\n<pre><code>subleq @OUT, @IN\n</code></pre>\n<h3>Comments</h3>\n<p>Any text following a semicolon is considered a comment. Comments are ignored by the assembler, but may be helpful to humans attempting to decipher existing programs. For example, here''s the previous line of assembly with an explanatory comment:</p>\n<pre><code>subleq @OUT, @IN ; Negates an input and writes it out\n</code></pre>\n<h3>Labels</h3>\n<p>Custom labels are defined with the syntax <code>@name:</code>, e.g.:</p>\n<pre><code>@loop: subleq 1, 2\n</code></pre>\n<p>Label names cannot include punctuation, symbols, or whitespace.</p>\n<h3><code>.data</code> directive</h3>\n<p>In addition to <code>subleq</code>, there is an assembler directive <code>.data</code> that sets one or more bytes of memory to specific values at compile time (note: this is not an instruction!):</p>\n<pre><code>.data X\n</code></pre>\n<p>In the simplest case, <code>X</code> is a signed byte between -128 and 127 (inclusive).</p>\n<p>Multiple values can also be provided (separated by whitespace and, optionally, commas):</p>\n<pre><code>.data 1, -2, 3\n</code></pre>\n<p>Note: labels (with optional offsets), characters, and strings--along with negations of these--can also be supplied. Examples of these appear in subsequent sections.</p>\n<h3>Constants and variables</h3>\n<p>Combining labels and the <code>.data</code> directive allows you to develop a system of constants and variables. For example, here a byte is set to zero, and the label <code>@zero</code> points to that value:</p>\n<pre><code>@zero: .data 0\n</code></pre>\n<h3>Unconditional jumps</h3>\n<p>Variables can be used for implementing an unconditional jump:</p>\n<pre><code>subleq @zero, @zero, @next\n</code></pre>\n<p>This will set <code>@zero</code> to zero minus zero (still zero) and, since the result is always ≤ 0, execution always branches to the label <code>@next</code>.</p>\n<h3>Loop example</h3>\n<p>Below is an updated negation program that repeatedly negates input values and writes them out in a loop.</p>\n<pre><code>@loop:\nsubleq @OUT, @IN           ; Negate an input and write it out\nsubleq @zero, @zero, @loop ; Unconditional jump to @loop\n\n@zero: .data 0             ; Always zero\n</code></pre>\n<h3>Label offsets</h3>\n<p>Label expressions can include an optional offset. For example, <code>@loop+1</code> refers to the <em>second</em> byte of the instruction pointed to by <code>@loop</code>:</p>\n<pre><code>@loop:\nsubleq @loop+1, @one\n</code></pre>\n<p>Note: in certain cases (usually involving self-modifying code), it is useful to store the address associated with a label (possibly with an offset) in a byte of memory. Here is an example of how to set a byte of memory to the address of <code>@loop+1</code> (i.e. the <em>second</em> byte of the instruction at <code>@loop</code>):</p>\n<pre><code>; Address of the second byte of @loop\n@loop_plus_one: .data @loop+1\n</code></pre>\n<p>It is possible to negate labels as well by prefixing them with a minus sign. Keep in mind that this only negates the label''s address itself, so if a label with an offset needs to be negated, both the label <em>and the offset</em> should be negated. Here''s the negation of the previous example:</p>\n<pre><code>; Negation of @loop+1\n@n_loop_plus_one: .data -@loop-1\n</code></pre>\n<h3>Inline labels</h3>\n<p>As an alternative to offsets, labels can be defined inline. For example <code>@source</code> refers to the <em>second</em> byte of the following instruction:</p>\n<pre><code>subleq 0, @source:1\n</code></pre>\n<h3>Reflection example</h3>\n<p>Label offsets and inline labels are useful in self-modifying code. Remember, each <code>subleq</code> instruction is stored as 3 consecutive addresses: <code>ABC</code> (for <code>mem[A] ← mem[A] - mem[B]</code>, with a branch to <code>C</code> if the result is less than or equal to zero).</p>\n<p>The sample program below reads its own compiled code and outputs it by incrementing the second address of the instruction at <code>@loop</code> (i.e. modifying address <code>@loop+1</code>).</p>\n<pre><code>@loop:\nsubleq @tmp, 0           ; Second address (initially zero) will be incremented below\nsubleq @OUT, @tmp        ; Output the value\nsubleq @loop+1, @n_one   ; Here is where the increment is performed\nsubleq @tmp, @tmp, @loop ; Reset @tmp to zero and unconditionally jump to @loop\n\n@tmp: .data 0            ; @tmp is initialized to zero\n@n_one: .data -1\n</code></pre>\n<p>The third instruction is an example of self-modifying code because it actually modifies the first instruction. Specifically, it increments the first instruction''s second address (<code>@loop+1</code>). This causes the <em>next</em> loop iteration''s first instruction to read the <em>next</em> byte of memory (0, 1, 2, 3, ...).</p>\n<p>The program above used a label with an offset, but it could have just as easily been written using an inline label (e.g. defining a <em>new</em> label, <code>subleq @tmp, @source:0</code>, and referring to <code>@source</code> instead of <code>@loop+1</code>). Both approaches compile down to the same sequence of bytes.</p>\n<p>Note: When running a program in the SIC-1 Development Environment, the original (unmodified) source code is always shown. If the program modifies itself, the changes are reflected in the memory table in the top right, but <em>not</em> in the source code viewer.</p>\n<h3>Stack example</h3>\n<p>This program implements a last-in, first-out stack by modifying the read and write addresses of the instructions that interact with the stack.</p>\n<p>The program pushes 3 (defined by <code>@count</code>) input values onto the stack and then pops them off (outputting them in reverse order).</p>\n<pre><code>; The first address of this instruction (which starts\n; pointing to @stack) will be incremented with each\n; write to the stack\n@stack_push:\nsubleq @stack, @IN\nsubleq @count, @one, @prepare_to_pop\n\n; Modify the instruction at @stack_push (increment\n; target address)\nsubleq @stack_push, @n_one\nsubleq @tmp, @tmp, @stack_push\n\n; Prepare to start popping values off of the stack by\n; copying the current stack position to @stack_pop+1\n@prepare_to_pop:\nsubleq @tmp, @stack_push\nsubleq @stack_pop+1, @tmp\n\n; Read a value from the stack (note: the second address\n; of this instruction is repeatedly decremented)\n@stack_pop:\nsubleq @OUT, 0\n\n; Decrement stack address in the instruction at @stack_pop\nsubleq @stack_pop+1, @one\nsubleq @tmp, @tmp, @stack_pop\n\n; Constants\n@one: .data 1\n@n_one: .data -1\n\n; Variables\n@tmp: .data 0\n@count: .data 3\n\n; Base of stack (stack will grow upwards)\n@stack: .data 0\n</code></pre>\n<h3>Characters</h3>\n<p>When configured properly, the SIC-1 supports natural human language input and output using a highly modern (c. 1967) mapping from numbers to characters known as ASCII. For example, 72 is mapped to \"H\" (capital \"h\").</p>\n<p>To capture the characters \"Hi\" (capital \"h\", lower case \"i\") in two variables, one could consult an ASCII lookup table and write:</p>\n<pre><code>@H: .data 72\n@i: .data 105\n</code></pre>\n<p>Consulting an ASCII table is tedious, so to make SIC Systems engineers'' lives easier, SIC-1 Assembly Language now supports automated ASCII lookup using the following advanced syntax (which is equivalent to explicitly specifying characters'' mapped numbers):</p>\n<pre><code>@H: .data ''H'' ; 72\n@i: .data ''i'' ; 105\n</code></pre>\n<p>As a final convenience, it is possible to negate the value of a character by prefixing the character literal with a minus:</p>\n<pre><code>@n_H: .data -''H'' ; -72\n</code></pre>\n<h3>Character output example</h3>\n<p>The following sample program outputs the characters \"Hi\":</p>\n<pre><code>subleq @OUT, @n_H ; Note: (0 - (-72) = 72 = ''H'')\nsubleq @OUT, @n_i\n\n@n_H: .data -''H''\n@n_i: .data -''i''\n</code></pre>\n<h3>Strings</h3>\n<p>Strings are sequences of characters that are terminated with a zero. In the following example, @string points to a 3 byte sequence representing the string \"Hi\":</p>\n<pre><code>@string:\n.data ''H''\n.data ''i''\n.data 0\n</code></pre>\n<p>The .data directive can also take a sequence of values to set multiple bytes, so the previous code would be simplified:</p>\n<pre><code>@string: .data ''H'', ''i'', 0\n</code></pre>\n<p>And thanks to the innovative design-by-committee approach employed by SIC Systems, the following novel syntax for strings can be used (again, equivalent to the other examples):</p>\n<pre><code>@string: .data \"Hi\" ; Sets the next 3 bytes: ''H'', ''i'', 0\n</code></pre>\n<p>Similar to character values, an entire string can be negated by prefixing it with a minus:</p>\n<pre><code>@n_string: .data -\"Hi\" ; Sets the next 3 bytes: -72, -105, 0\n</code></pre>\n<h3>New line characters</h3>\n<p>New line characters (value 10) can be expressed with the character <code>''\\n''</code>. They can also be used in strings, for example: <code>\"Line 1\\nLine 2\"</code>.</p>\n<h3>String output example</h3>\n<p>The following code outputs \"Hello, world!\":</p>\n<pre><code>@loop:\nsubleq @OUT, @n_message  ; Read address starts at @n_message\nsubleq @loop+1, @n_one   ; Advance read address\nsubleq @tmp, @tmp, @loop\n\n@n_one: .data -1\n@n_message: .data -\"Hello, world!\"\n@tmp: .data 0\n</code></pre>\n<h3>ASCII Reference</h3>\n<p>For completeness, a table of ASCII characters is shown below. Note that SIC-1 only supports ASCII codes 32 through 126, so the first few rows of the table are omitted (and a few cells contain \"□\" to indicate unsupported codes). Each row represents a tens digit (30 - 120), and each column represents a ones digit (0 - 9).</p>\n<p>Examples:</p>\n<ul>\n<li>Row \"30\", column 2 is a space character (code 32)</li>\n<li>Row \"120\", column 2 a lowercase \"z\" (code 122)</li>\n</ul>\n{asciiTable}\n\n<h3>Errata</h3>\n<p>In order to reduce the time-to-market for the SIC-1, some compromises were made in the design of the processor and these design decisions may result in surprising behavior. This section is an attempt to document such cases:</p>\n<ol>\n<li>For the purposes of calculating the number of memory bytes read, every <code>subleq</code> instruction reads all 3 bytes, regardless of whether or not the final address is used (i.e. regardless of whether or not the branch is taken)</li>\n<li><code>subleq</code> instructions (meaning the 3 addresses that comprise the instruction) are always read directly from memory; additionally, memory addresses 253, 254, and 255 cannot be modified and are initialized to zero, so the instruction starting at <code>@MAX</code> (comprised of bytes 252, 253, and 254) will be read as: <code>mem[252]</code>, 0, 0</li>\n<li><code>subleq @IN, B, C</code> will consume an input in order to compute the result (\"input minus <code>mem[B]</code>\"), which is used to decide whether to branch to <code>C</code> or not (even though no value will be written because writes to <code>@IN</code> are ignored)</li>\n<li><code>subleq @IN, @IN</code> will only consume a single input and the result will always be zero</li>\n<li>Branching to any address above <code>@MAX</code> (252) will halt execution</li>\n<li><code>subleq A, B, @IN</code> may branch to <code>@IN</code> (253), which will halt (see previous bullet)</li>\n</ol>\n",
    "description": "HTML content for story mail s0_0"
  },
  "mails0_0Subject": {
    "defaultMessage": "SIC-1 Reference Manual",
    "description": "Subject line for story mail s0_0"
  },
  "mails0_1Content": {
    "defaultMessage": "<h3>SIC-1 DEVELOPMENT ENVIRONMENT</h3>\n<p>The SIC-1 Development Environment provides a state-of-the-art programming and simulation environment for SIC Systems''s Single Instruction Computer Mark 1 (SIC-1).</p>\n<h3>MENUS</h3>\n<p>Menus can be accessed using either the \"Esc\" key or the \"Menu\" button in the lower-left of the development environment. The Main Menu provides access to the following:</p>\n<ul>\n<li><strong>Program Inventory</strong>: Used for switching between assigned programming tasks, as well as viewing employee and task statistics (described in a dedicated section below).</li>\n<li><strong>Electronic Mail</strong>: An integrated client application for viewing electronic mail from automated agents and other SIC-1 employees (described in a dedicated section below).</li>\n<li><strong>Options</strong>: A sub-menu for modifying presentation settings (full-screen mode, volume, etc.), and other miscellaneous menus.</li>\n</ul>\n<h3>INTEGRATED DEVELOPMENT ENVIRONMENT</h3>\n<p>The SIC-1 Development Environment desktop is an integrated development environment (IDE) for the SIC-1. There are three main sections (left, right, center):</p>\n<ul>\n<li><strong>Left</strong>: Current task description, table of input and output (both expected and actual), simulation state/statistics, buttons for controlling the simulation, and a button for opening the Main Menu (described above).</li>\n<li><strong>Center</strong>: Main code editor for reading and writing SIC-1 Assembly Language programs (see the separate SIC-1 Reference Manual electronic mail for details).</li>\n<li><strong>Right</strong>: Detailed simulation state including a complete view of SIC-1 memory, code manipulation tools, as well as an unprecedented, revolutionary feature: a table of variables and their current values, for convenient lookup.</li>\n</ul>\n<p>The memory table is shown in hexadecimal for compactness; hover over a cell to see the corresponding decimal value.</p>\n<p>During execution, the current instruction will be highlighted in both the code editor (center) and the memory table (upper right), current inputs and outputs are highlighted in the tables on the left, and variables are displayed in a table on the right (hover for hexadecimal and unsigned representations, if needed).</p>\n<p>To aid debugging, it is possible to set breakpoints on <code>subleq</code> instructions. When hit, these breakpoints will pause execution for manual analysis. There are two ways to set breakpoints:</p>\n<ul>\n<li>In code, add <code>!</code> to the beginning of a line (e.g. <code>!subleq @OUT, @IN</code>).</li>\n<li>During execution, click the small circle to the left of any <code>subleq</code> instruction to toggle the breakpoint.</li>\n</ul>\n<p>Note that each program may be tested using multiple distinct test sets, the state of the SIC-1 resets between test sets, and the test sets generally include randomly generated input data. Solutions should be robust to arbitrary random data, in order to be eligible for inclusion in solution statistics.</p>\n<h3>KEYBOARD SHORTCUTS</h3>\n<p>The SIC-1 Development Environment supports the following convenient keyboard shortcuts:</p>\n<ul>\n<li><strong>Esc</strong>: Open/close menu or, if running, pause/halt execution.</li>\n<li><strong>Ctrl+.</strong>: Execute a single instruction and pause. If the program has not been compiled yet, this will compile the program and pause before executing the first instruction.</li>\n<li><strong>Ctrl+Enter</strong>: Run instructions until completion/error/pause. If already running, this will increase the speed of execution.</li>\n<li><strong>Ctrl+Shift+Enter</strong>: Pause execution (if running), otherwise halt execution.</li>\n<li><strong>F11, Alt+Enter</strong>: Toggle full-screen mode.</li>\n</ul>\n<p>Code editing shortcuts:</p>\n<ul>\n<li><strong>Ctrl+K Ctrl+F</strong>: Comment out all of the selected lines</li>\n<li><strong>Ctrl+K Ctrl+U</strong>: Uncomment all of the selected lines</li>\n<li><strong>Ctrl+M</strong>: Toggle <strong>Tab Insert</strong> mode (by default the Tab key cycles focus, with Tab Insert mode, tabs can be entered into the code editor)</li>\n<li><strong>Tab</strong>: If in <strong>Tab Insert</strong> mode, insert tabs into the selected lines</li>\n<li><strong>Shift+Tab</strong>: If in <strong>Tab Insert</strong> mode, un-indent the selected lines</li>\n</ul>\n<h3>PROGRAM INVENTORY</h3>\n<p>The Program Inventory displays a list of assigned tasks on the left. There is also a special \"employee statistics\" section at the top for viewing how your progress compares to other SIC Systems employees.</p>\n<p>Select any task on the left to view the description (or your solution''s statistics, as compared to other employees'' solutions, for completed tasks). There is button at the bottom to load the program into the development environment.</p>\n<p>Under the \"File Selection\" heading, it''s possible to manage multiple implementations of a task (notably: \"New\" creates a new solution with default contents, \"Copy\" duplicates an existing implementation). This can be useful when there is one solution optimizing for fewest cycles, and a different solution optimizing for accessing the least amount of memory.</p>\n<p>If available, other non-task entries will appear in the Program Inventory, under the \"Diversions\" heading (such as Sandbox Mode or any company-sanctioned electronic video games--only for use during legally-mandated breaks).</p>\n<h3>ELECTRONIC MAIL</h3>\n<p>SIC Systems is pioneering a new digital form of intra-office communication known as \"electronic mail\". This eliminates paper waste for memos, and also ensures that all communications are securely routed to only the intended recipients.</p>\n<p>A complete list of received electronic mail is shown in the left pane of the electronic mail viewer (sorted from oldest at the top to newest at the bottom). Note that automated mails are de-emphasized, but they can be opened to view statistics for your completed programming tasks.</p>\n<p>If you have any unread mail, it will appear in a separate section at the top of the left page, for convenience.</p>\n<p>Also, remember that you can always access the SIC-1 Reference Manual and this document about the SIC-1 Development Environment from your employee on-boarding mails at the top (oldest) part of the left pane of the electronic mail viewer.</p>\n<h3>ADDENDUM</h3>\n<p>Although the SIC-1 Development Environment has been thoroughly tested, it is possible that you may encounter unexpected behavior in certain instances. The authors of the SIC-1 Development Environment have assured us that the most likely causes for such issues are either cosmic rays or large solar flares interfering with sensitive electronics in an unpredictable manner. The simplest way to recover from such interference is to unplug the computer, wait for 30 seconds to allow it to cool and eject any rogue electrons, and then plug it back in.</p>\n",
    "description": "HTML content for story mail s0_1"
  },
  "mails0_1Subject": {
    "defaultMessage": "SIC-1 Dev. Environment",
    "description": "Subject line for story mail s0_1"
  },
  "mails0_2Content": {
    "defaultMessage": "<p>Congratulations, {selfName}! SIC Systems has accepted your job application.</p>\n<p>I''m Mary, and I''ll be your human resources contact at the company.</p>\n<p>As you''re no doubt aware, as a new trainee, you''ll need to complete a few unpaid training tasks before you''re instated as a full-time employee.</p>\n<p>You should have already received a couple of electronic mails from our automated onboarding system that you can review:</p>\n<ul>\n<li>The SIC-1 Reference Manual, which includes details on <code>subleq</code> and SIC-1 Assembly Language</li>\n<li>A guide to the SIC-1 Development Environment (including usage information, keyboard shortcuts, etc.)</li>\n</ul>\n<p>You can view these mails at any time in the electronic mail viewer, which can be opened using the main menu (which is accessed using the \"Menu\" button in the lower-left, or by pressing \"Esc\").</p>\n<p>All information is, of course, confidential and covered by the nondisclosure agreement you signed as a condition of employment.</p>\n<p>Please let me know if you have any other questions.</p>\n<p>Thank you!</p>\n<p>-Mary</p>\n",
    "description": "HTML content for story mail s0_2"
  },
  "mails0_2Subject": {
    "defaultMessage": "Welcome to SIC Systems!",
    "description": "Subject line for story mail s0_2"
  },
  "mails10_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I just saw Rick''s mail about Don being promoted for his innovations in sequence processing.</p>\n<p>Could you drop by my cubicle to discuss a few things?</p>\n<p>I recall seeing you working late the night before this breakthrough, and I''d just like to understand your involvement there. If your work was used, you deserve credit for it.</p>\n<p>Regards,</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s10_0"
  },
  "mails10_0Subject": {
    "defaultMessage": "Rick's mail",
    "description": "Subject line for story mail s10_0"
  },
  "mails11_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I know this is sudden and unexpected, but you''re going to be joining my team, effective today. Additionally, you have been promoted to <strong>{jobTitle}</strong>.</p>\n<p>I''m still not entirely clear what happened with Don and the new sequence processing work, but Rick mentioned that Don was considering letting you go, and I thought that seemed unfair. Fortunately, Rick was willing to give me a chance to add you to my team.</p>\n<p>Anyway, whatever happened, it''s in the past now and we need to focus on the road ahead.</p>\n<p>Thanks for your hard work!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s11_0"
  },
  "mails11_0Subject": {
    "defaultMessage": "Organizational change",
    "description": "Subject line for story mail s11_0"
  },
  "mails12_0Content": {
    "defaultMessage": "<p>Greetings, {selfName}.</p>\n<p>Self-modifying code can be tricky to understand at first. For the \"stack memory\" example, I found that it''s easiest to simply step through the program (using the \"Step\" button or \"Ctrl+.\") to see what it''s doing. Remember that you can click the circle next to a <code>subleq</code> instruction to toggle a breakpoint.</p>\n<p>Using this approach, you can see that the first bit of code is a loop that repeats as long as <code>@count</code> is greater than zero. Once the counter runs out, execution branches to the next chunk of code, and so on.</p>\n<p>You can also watch the stack grow in the \"Memory\" table in the upper right. In the example, the stack happens to start at address 32 (defined by <code>@stack_address</code>), which is the beginning of the third row of the table. Note that numbers are shown in hexadecimal and the \"two''s complement\" representation is used for negative numbers (meaning <code>80</code> in hex is -128 in decimal), so <code>ff</code> means -1, <code>fe</code> means -2, and so on.</p>\n<p>Hope that helps!</p>\n<p>-Feng</p>\n",
    "description": "HTML content for story mail s12_0"
  },
  "mails12_0Subject": {
    "defaultMessage": "Debugging",
    "description": "Subject line for story mail s12_0"
  },
  "mails13_0Content": {
    "defaultMessage": "<p>I''m completely lost! How can I reverse a sequence when I don''t even know its length??</p>\n<p>Feng pointed me to the stack memory example, but that example only reverses 3 numbers. What if the sequence has 4 letters? Or 5???</p>\n<p>This is starting to go way over my head... is there any chance I can copy your solution? I''ll make sure to have it be a little slower so that it''s not obvious I copied your work.</p>\n<p>HELP!!!</p>\n<p>-Ted</p>\n",
    "description": "HTML content for story mail s13_0"
  },
  "mails13_0Subject": {
    "defaultMessage": "REVERSE SEQUENCE???",
    "description": "Subject line for story mail s13_0"
  },
  "mails14_0Content": {
    "defaultMessage": "<p>You''re making great progress, {selfName}! These are some very difficult tasks and you''re breezing right through them!</p>\n<p>I''ll make sure that Rick knows you''re doing great work. I''m pushing hard for you to get promoted, because you really deserve it.</p>\n<p>Well done!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s14_0"
  },
  "mails14_0Subject": {
    "defaultMessage": "Excellent work!",
    "description": "Subject line for story mail s14_0"
  },
  "mails15_0Content": {
    "defaultMessage": "<p>Wow! Great job, {selfName}! It looks like you have a deep understanding of self-modifying code. That will be a valuable skill as we continue to push the boundaries of the SIC-1.</p>\n<p>It''s my honor to let you know that you''ve earned a very well-deserved promotion to <strong>{jobTitle}</strong>!</p>\n<p>Keep up the great work!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s15_0"
  },
  "mails15_0Subject": {
    "defaultMessage": "Wow!",
    "description": "Subject line for story mail s15_0"
  },
  "mails16_0Content": {
    "defaultMessage": "<p>Hi, {selfName}! It''s been a while since we last chatted.</p>\n<p>How do you like working on Pat''s team? It looks like you''re making excellent progress (between you and me, I think you''re doing most, if not all, of the work, though).</p>\n<p>Don''t share this with anyone, but I''ve been working with one of the other managers (Jerin Kransky) on setting up natural language processing functionality for the SIC-1.</p>\n<p>Do you have any interest in re-joining my team? I already have Jerin convinced that you''re the right person for the job, and I think another promotion would be in order if you''d be willing to come join us.</p>\n<p>Let me know what you think!</p>\n<p>-Don</p>\n",
    "description": "HTML content for story mail s16_0"
  },
  "mails16_0Subject": {
    "defaultMessage": "Very impressive!",
    "description": "Subject line for story mail s16_0"
  },
  "mails17_0Content": {
    "defaultMessage": "<p>Hey, {selfName}.</p>\n<p>I was chatting with Don while we played our weekly round of golf this week, and he said that you were planning to come back to his team to work on some secret new project.</p>\n<p>It would be awesome to have you back on the team!</p>\n<p>-Ted</p>\n<p>P.S. Any chance you''d have time to walk me through your solution to the \"sort\" task? Thanks!</p>\n",
    "description": "HTML content for story mail s17_0"
  },
  "mails17_0Subject": {
    "defaultMessage": "Don",
    "description": "Subject line for story mail s17_0"
  },
  "mails18_0Content": {
    "defaultMessage": "<p>Spectacular work, {selfName}! Based on your innovative solutions, you have been promoted to <strong>{jobTitle}</strong>.</p>\n<p>Please don''t mention this to anyone else, but I''ve heard rumors that Don (your old boss) and Jerin (another manager) are struggling to make progress on their natural language processing pipeline for the SIC-1.</p>\n<p>To be honest, I don''t think their team has any engineers of your caliber. I know it''s risky, but I''d like to put you to work on solving some of the natural language problems (under the radar, so to speak).</p>\n<p>If we can show definitive progress soon, then I think the board would be willing to move the whole project onto our team. That would be a big (and, frankly, unprecedented) promotion for you.</p>\n<p>Let me know if you have any concerns. And please don''t share this will anyone (especially Ted)!</p>\n<p>Thank you!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s18_0"
  },
  "mails18_0Subject": {
    "defaultMessage": "A promotion, and a new project!",
    "description": "Subject line for story mail s18_0"
  },
  "mails19_0Content": {
    "defaultMessage": "<p>{selfName}, do you have a few minutes to drop by my office?</p>\n<p>I''d like to know if you have put any thought into joining Jerin and I to work on that exciting new natural language processing project I mentioned to you a little while back. It could mean a big promotion for you!</p>\n<p>If you have any concerns, please, please let me know. It would be a shame to see your talents wasted on another team, to be honest. We''re really working on some revolutionary stuff here!</p>\n<p>I''ll stop by your cubicle in an hour or so, in case I don''t hear from you by then.</p>\n<p>Thanks!</p>\n<p>-Don</p>\n",
    "description": "HTML content for story mail s19_0"
  },
  "mails19_0Subject": {
    "defaultMessage": "Do you have a minute?",
    "description": "Subject line for story mail s19_0"
  },
  "mails1_0Content": {
    "defaultMessage": "<p>Hello, {selfName}!</p>\n<p>I''m your manager, Don, and I''m excited to have you join our team! We''re working very hard to ship our flagship product, the SIC-1, on time and we need all the help we can get.</p>\n<p>You''ve already met Mary from HR. The other members of your immediate team are Ted and Feng (note: their cubicles are unfortunately on the far end of this floor away from you--I''ll see if I can get you moved closer). In case you see any welcome mail from Rick, be aware that he is my boss (so your skip-level boss). If you have any concerns, I kindly ask you to raise them directly with me before looping in Rick.</p>\n<p>With introductions out of the way, let''s talk about your job description. You are to implement programs as they''re assigned to you. Your solutions will be compared to other employees'' solutions on the basis of execution time (measured in cycles) and memory usage (measured in bytes).</p>\n<p>Thanks in advance for your dedication!</p>\n<p>-Don</p>\n<p>P.S. Sorry if it was unclear that you would not be paid during training. There must have been a mix-up on HR''s end. I''ll see if there''s anything I can do to right the situation.</p>\n",
    "description": "HTML content for story mail s1_0"
  },
  "mails1_0Subject": {
    "defaultMessage": "Welcome to the team!",
    "description": "Subject line for story mail s1_0"
  },
  "mails20_0Content": {
    "defaultMessage": "<p>Hey, {selfName}.</p>\n<p>I don''t know if you''ve heard, but there are rumors that layoffs are coming. Now might be a good time to dust off your resume!</p>\n<p>Speaking of which, do you think you''d have a few minutes to drop by my cubicle and tell me what you think of my resume?</p>\n<p>Do you think it would be a stretch to say that I lead development of sequence processing for the SIC-1 (when I was really only just part of a larger team that worked on it)?</p>\n<p>Thanks, man!</p>\n<p>-Ted</p>\n",
    "description": "HTML content for story mail s20_0"
  },
  "mails20_0Subject": {
    "defaultMessage": "Dust off your resume",
    "description": "Subject line for story mail s20_0"
  },
  "mails21_0Content": {
    "defaultMessage": "<p>Greetings, {selfName}.</p>\n<p>I just wanted to let you know that today will be my last day at SIC Systems. I''ve enjoyed working with you, and I hope that my occasional clarifying electronic mails have been as beneficial to your career as working with you has been to mine.</p>\n<p>I generally try to distance myself from office politics and rumors, but I wanted to let you know that I have credible information that the SIC Systems board is currently trying to fend off a hostile takeover by Ilano Moscato (a foreign billionaire who is rather eccentric, to put it mildly).</p>\n<p>Based on what I''ve heard from friends who''ve worked at Ilano''s other companies, I''m expecting working conditions here to deteriorate rapidly. Ilano has a reputation for randomly pivoting strategies, overworking his employees, and even flouting certain laws.</p>\n<p>I urge you to consider looking for employment elsewhere.</p>\n<p>Best of luck to you, {selfName}!</p>\n<p>-Feng</p>\n",
    "description": "HTML content for story mail s21_0"
  },
  "mails21_0Subject": {
    "defaultMessage": "Farewell!",
    "description": "Subject line for story mail s21_0"
  },
  "mails22_0Content": {
    "defaultMessage": "<p>Rick and Pat,</p>\n<p>It has come to my attention that Pat''s team has been discreetly working on natural language processing.</p>\n<p><strong>This absolutely must stop.</strong></p>\n<p>My team has been solely tasked (by the SIC Systems board) with designing and implementing the natural language processing pipeline for the SIC-1.</p>\n<p>Your work is redundant and, to be blunt, a misuse of corporate resources. We cannot have two teams working independently on the same problem.</p>\n<p>Pat, please turn over any documents you''ve created as a part of this duplicate effort immediately or I''ll be forced to refer your entire team to corporate affairs for disciplinary action.</p>\n<p>-Jerin</p>\n",
    "description": "HTML content for story mail s22_0"
  },
  "mails22_0Subject": {
    "defaultMessage": "Natural language processing",
    "description": "Subject line for story mail s22_0"
  },
  "mails22_1Content": {
    "defaultMessage": "<p>Hi, {selfName}.</p>\n<p>It''s unfortunate that Jerin sent that mail without consulting me or Rick first, but I want you to know that the work you''re doing is very important and we shouldn''t let office politics get in the way.</p>\n<p>You have made fantastic progress on natural language processing, and I''m confident that once the board sees our tremendous progress, Jerin will be forced to back down. This isn''t the first time an overzealous manager has come knocking on my door. Everything will be fine.</p>\n<p>Additionally, <strong>I have put together a proposal to create a new position for you, with a significant pay bump</strong>. If you can finish this next task, I''m sure the board will have no other option than to promote you to <em>Distinguished Engineer</em>.</p>\n<p>Thanks for all the hard work you''ve put in so far!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s22_1"
  },
  "mails22_1Subject": {
    "defaultMessage": "Please ignore Jerin's mail",
    "description": "Subject line for story mail s22_1"
  },
  "mails23_0Content": {
    "defaultMessage": "<p>Hi, {selfName}. In case we haven''t met yet, I''m Jerin, a peer to your old skip-level manager Rick. I''d like to congratulate you on the work you''ve done so far. What I''ve seen has been most impressive!</p>\n<p>Effective immediately, you''ll be reporting directly to me to continue your exciting work on natural language processing.</p>\n<p>Additionally, I''d like to inform you that you''ve been promoted to <strong>{jobTitle}</strong> (although, due to budget cuts, we won''t be able to honor the original compensation package that was discussed).</p>\n<p>Looking forward to working with you!</p>\n<p>-Jerin</p>\n<p>P.S. Pat is no longer employed by SIC Systems.</p>\n",
    "description": "HTML content for story mail s23_0"
  },
  "mails23_0Subject": {
    "defaultMessage": "Welcome aboard!",
    "description": "Subject line for story mail s23_0"
  },
  "mails24_0Content": {
    "defaultMessage": "<p>Engineering team,</p>\n<p>As reported in the news, SIC Systems has agreed to be acquired by Ilano Moscato (majority owner and CEO of Edison, Herbaleaf, and Neutralino).</p>\n<p>What this means for you:</p>\n<ul>\n<li>Your day-to-day duties remain the same</li>\n<li>No major changes to the organization are planned</li>\n<li>Ilano has indicated that he will honor all existing approved compensation packages (both cash and equity)</li>\n</ul>\n<p>In other words: \"business as usual\".</p>\n<p>Please don''t let reports in the media distract you from your work.</p>\n<p>Let me know if you have any questions. Thank you!</p>\n<p>-Mary</p>\n",
    "description": "HTML content for story mail s24_0"
  },
  "mails24_0Subject": {
    "defaultMessage": "SIC Systems acquisition",
    "description": "Subject line for story mail s24_0"
  },
  "mails24_1Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I just wanted to let you know that I met with our new owner, Ilano, earlier today, and he''s very excited about the work you''re doing.</p>\n<p>If there''s anything you might need to grind through the last couple of tricky problems, please let me know.</p>\n<p>-Jerin</p>\n",
    "description": "HTML content for story mail s24_1"
  },
  "mails24_1Subject": {
    "defaultMessage": "New owner",
    "description": "Subject line for story mail s24_1"
  },
  "mails25_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I wanted to let you know that Rick, Don, and Ted have all been let go.</p>\n<p>On the surface, it might sound like this means that all the remaining natural language work now falls on your plate. But there''s a silver lining: I''ve been given the go-ahead to offer you some non-cash perks to help you manage your schedule, namely:</p>\n<ul>\n<li>Free breakfast, lunch and dinner at the office</li>\n<li>On-site laundry service</li>\n<li>An optional home cleaning/maintenance service, if you need it</li>\n</ul>\n<p>Thanks for pushing so hard these last few weeks and months!</p>\n<p>-Jerin</p>\n",
    "description": "HTML content for story mail s25_0"
  },
  "mails25_0Subject": {
    "defaultMessage": "Right-sizing our team",
    "description": "Subject line for story mail s25_0"
  },
  "mails26_0Content": {
    "defaultMessage": "<p>Jerin and {selfName},</p>\n<p>Thanks for welcoming me. I''m excited to work with you!</p>\n<p>Your team''s work on natural language processing is near and dear to my heart. As you may have heard, I founded Neutralino a few years back, with a goal of allowing a machine to reason about itself.</p>\n<p>I''d like to task you with a special project to bring a similar capability to the SIC-1, ideally by the end of this quarter. I''ve been shopping around this capability to various governments around the world, and already have \"hand shake\" agreements for a few multi-billion dollar orders.</p>\n<p>To say that this work is important would be an understatement. It is revolutionary!</p>\n<p>Regards,</p>\n<p>-Ilano</p>\n",
    "description": "HTML content for story mail s26_0"
  },
  "mails26_0Subject": {
    "defaultMessage": "A new focus",
    "description": "Subject line for story mail s26_0"
  },
  "mails26_1Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I''m sure you saw the mail from Ilano. He thinks highly of us, but he also expects a lot.</p>\n<p>To properly motivate you, Ilano has created a new job title exclusively for you: <strong>{jobTitle}</strong>.</p>\n<p>You''ve shown tenacity to get this far, and you''ll need loads of it for the next batch of tasks. We need to give the SIC-1 the ability to understand its own code, in order to unleash its immense computing power on optimizing its own performance. In addition to existing perks, we''ll be happy to provide:</p>\n<ul>\n<li>Free super-vitamins (used by Ilano himself), produced by Herbaleaf</li>\n<li>Optional sleeping quarters at the office</li>\n<li>Discounted fertility preservation services</li>\n</ul>\n<p>We just need you to push through this one last sprint to the finish line. Your fellow SIC Systems family members thank you for your perseverance!</p>\n<p>-Jerin</p>\n",
    "description": "HTML content for story mail s26_1"
  },
  "mails26_1Subject": {
    "defaultMessage": "New focus, new title, new perks",
    "description": "Subject line for story mail s26_1"
  },
  "mails27_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>I know we had discussed increasing your compensation, given the increased scope and impact of your work.</p>\n<p>Unfortunately, Ilano has put a freeze on all new spending, so there''s nothing I can do. My hands are tied.</p>\n<p>Having said that, I''m sure that once your work is complete and Ilano sees what you''ve been able to accomplish, he''ll make sure you''re duly compensated. He might even want to shift you over to one of his other companies where technical know-how is needed.</p>\n<p>Just keep your focus on the task at hand!</p>\n<p>-Jerin</p>\n",
    "description": "HTML content for story mail s27_0"
  },
  "mails27_0Subject": {
    "defaultMessage": "Compensation",
    "description": "Subject line for story mail s27_0"
  },
  "mails27_1Content": {
    "defaultMessage": "<p>Engineering team,</p>\n<p>Unfortunately, due to a scheduling conflict with an executive retreat, Ilano is not available for the previously planned meet & greet today.</p>\n<p>We will reschedule for next week, at which point you can submit questions for him to answer.</p>\n<p>Sorry for the late notice!</p>\n<p>-Mary</p>\n",
    "description": "HTML content for story mail s27_1"
  },
  "mails27_1Subject": {
    "defaultMessage": "Ilano meet & greet",
    "description": "Subject line for story mail s27_1"
  },
  "mails28_0Content": {
    "defaultMessage": "<p>Mary,</p>\n<p>The food at the executive retreat was absolutely horrible. I don''t know how these events worked before, but I always treat my executives to the finest culinary delights the world has to offer.</p>\n<p>The caviar was almost inedible (definitely <em>not</em> the Caspian Sea beluga caviar I had specifically requested), and the cocktail weenies were similarly unpalatable (anything less than Boar''s Pride should go in the dumpster).</p>\n<p>What a disgrace!</p>\n<p>-Ilano</p>\n<p>P.S. Please reject all meeting requests with staff for the rest of the week. And please come up with convincing excuses this time!</p>\n",
    "description": "HTML content for story mail s28_0"
  },
  "mails28_0Subject": {
    "defaultMessage": "UNACCEPTABLE!",
    "description": "Subject line for story mail s28_0"
  },
  "mails29_0Content": {
    "defaultMessage": "<p>Engineering team,</p>\n<p>Please disregard the previous errant electronic mail that was purportedly sent by Ilano. That mail was apparently actually sent by a rogue human resources employee, Mary Townsend (who has since been fired).</p>\n<p>Ilano treats all employees with dignity and respect, and would never complain about a matter so trivial as food catering at a meeting. He understands that budget cuts are difficult and, in fact, he has willingly slashed his own salary by 10% in solidarity with all SIC Systems staff.</p>\n<p>Thank you, and have a great day!</p>\n<p>-Jeffrey</p>\n",
    "description": "HTML content for story mail s29_0"
  },
  "mails29_0Subject": {
    "defaultMessage": "Clarification",
    "description": "Subject line for story mail s29_0"
  },
  "mails2_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>After talking with Rick, we''ve decided that it''s not fair to make you complete training without compensating you. Hopefully your sitting down for this, because I''ve got some thrilling news.</p>\n<p><strong>We''re providing free pizza lunches to all trainees!</strong></p>\n<p>See? I told you I''d make it up to you.</p>\n<p>Thanks for working hard!</p>\n<p>-Don</p>\n",
    "description": "HTML content for story mail s2_0"
  },
  "mails2_0Subject": {
    "defaultMessage": "Good news!",
    "description": "Subject line for story mail s2_0"
  },
  "mails2_1Content": {
    "defaultMessage": "<p>Hi, {selfName}, I''m Ted. We met in the hallway earlier.</p>\n<p>Is there any chance you could come over to my cubicle and help me with the first assessment? I''d ask Feng for help, but I haven''t seen him around yet this morning.</p>\n<p>Yesterday, Feng mentioned something about just using a label that initially points to the value zero, but what does that even mean??? He also said something about being able to reset a variable back to zero by subtracting itself. Is that a thing? I''m so lost!</p>\n<p>Thanks for your time!</p>\n<p>-Ted</p>\n",
    "description": "HTML content for story mail s2_1"
  },
  "mails2_1Subject": {
    "defaultMessage": "Help!",
    "description": "Subject line for story mail s2_1"
  },
  "mails30_0Content": {
    "defaultMessage": "<p>Truly amazing work, {selfName}!</p>\n<p>Thank you from the bottom of my heart for all of the sacrifices you''ve made to get us to this point. The SIC-1 is now able to reason about its own code. This is an amazing breakthrough and you should be very proud.</p>\n<p>Now that we''ve reached this exciting milestone (thanks to your tireless efforts!), SIC Systems honestly can''t challenge someone with your peerless talent. Excitingly, you can now begin the next phase of your career at one of the many other technology companies around the world. I know parting ways is tough, but SIC Systems is a business, not a family, so we have to say goodbye to employees once they''re no longer needed. Thank you one last time, and best of luck in your future endeavors!</p>\n<p>-Ilano</p>\n",
    "description": "HTML content for story mail s30_0"
  },
  "mails30_0Subject": {
    "defaultMessage": "Unbelievable work!",
    "description": "Subject line for story mail s30_0"
  },
  "mails31_0Content": {
    "defaultMessage": "<p>{selfName},</p>\n<p>It''s great to hear from you!</p>\n<p>I heard that SIC Systems let you go immediately after you demoed your (incomplete) self-hosting program. Ilano is going to be kicking himself when he realizes that the implementation SIC Systems owns doesn''t support self-modifying code!</p>\n<p>Now that you''re solely in possession of the only <em>truly</em> self-hosting program for the SIC-1, my advice is: destroy it. Erase all copies, set them on fire, and bury the ashes out in the desert. Ilano doesn''t deserve to ever take advantage of your work again.</p>\n<p>Speaking of work, I wanted to let you know that I found a job at a small startup that is working on a home computer with a graphical interface. It''s revolutionary stuff, and we need someone with your technical skills to go to market.</p>\n<p>Is there any chance you''d be open to discussing a lead engineering position over here?</p>\n<p>If you''re interested, let me know and I''ll schedule a meeting with us and the two remaining founders (both named Steve, by coincidence).</p>\n<p>Hope to hear from you soon!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s31_0"
  },
  "mails31_0Subject": {
    "defaultMessage": "Great to hear from you!",
    "description": "Subject line for story mail s31_0"
  },
  "mails3_0Content": {
    "defaultMessage": "<p>Thanks for completing your training, {selfName}! Your starting job title is: <strong>{jobTitle}</strong>.</p>\n<p>Your finalized compensation package is described in the packet I left on your desk. As always, let me know if you have any questions.</p>\n<p>Thank you!</p>\n<p>-Mary</p>\n",
    "description": "HTML content for story mail s3_0"
  },
  "mails3_0Subject": {
    "defaultMessage": "Training complete!",
    "description": "Subject line for story mail s3_0"
  },
  "mails3_1Content": {
    "defaultMessage": "<p>Greetings, {selfName}. I''m also on Don''s team and my name is Feng. Let me know if you ever need any assistance.</p>\n<p>After helping Ted with the first assessment, I thought I''d share my perspective on how to think about SIC-1 Assembly Language:</p>\n<ul>\n<li><strong>Addresses</strong> are just numbers that identify a specific byte of memory (0 for the first byte, 1 for the second, and so on, up to 255)</li>\n<li><strong>Labels</strong> are just names for addresses--specifically, the address of whatever comes next in your code (whether it''s a <code>subleq</code> or a <code>.data</code>)</li>\n<li><code>subleq</code> always compiles into 3 bytes (each one an address)--if you omit the third address, it just gets set to the address of the next instruction in memory</li>\n<li><code>.data</code> just sets one or more bytes of memory to specific values (positive or negative numbers, or even labels, i.e. addresses)</li>\n</ul>\n<p>In the end, everything compiles down to bytes in memory (which you can see in the memory table after you click \"Compile\" or \"Run\" to load the program). While running, the SIC-1 only sees those bytes in memory, and it doesn''t know or care how those bytes were produced (or even modified). It will happily interpret any 3 bytes as a <code>subleq</code> instruction--even if that''s not what you intended.</p>\n<p>It can be instructive to look at a chunk of code and see the resulting compiled bytes. Here''s an example:</p>\n<pre><code>@loop:\nsubleq @OUT, @IN           ; 3 byte instruction stored at address 0\nsubleq @zero, @zero, @loop ; 3 byte instruction stored at address 3\n\n@zero: .data 0             ; Initializes address 6 to zero\n</code></pre>\n<ul>\n<li><code>@loop</code> refers to address 0, i.e. the first instruction</li>\n<li>The first <code>subleq</code> occupies bytes 0, 1, and 2, and is compiled to: 254 (<code>@OUT</code>), 253 (<code>@IN</code>), 3 (the next instruction)</li>\n<li>The second <code>subleq</code> occupies bytes 3, 4, and 5, and is compiled to: 6 (<code>@zero</code>), 6 (<code>@zero</code>), 0 (<code>@loop</code>)</li>\n<li><code>@zero</code> refers to address 6, i.e. the next byte (which is initialized to zero using the <code>.data</code> directive)</li>\n</ul>\n<p>As you know by now, the first instruction negates an input and writes it out, then advances to the next instruction (regardless of the result). The second instruction subtracts the value at address 6 from itself, always resulting in zero, and thus always jumps to its third argument: <code>@loop</code>, i.e. address 0 (the beginning of the program).</p>\n<p>Hope that helps!</p>\n<p>-Feng</p>\n",
    "description": "HTML content for story mail s3_1"
  },
  "mails3_1Subject": {
    "defaultMessage": "My mental model for SIC-1",
    "description": "Subject line for story mail s3_1"
  },
  "mails4_0Content": {
    "defaultMessage": "<p>Hey, {selfName}! How''s it feel to be a full-time employee working on the cutting edge of revolutionary technology? Only a single instruction! Amazing!</p>\n<p>Anyway, I did see your question about the compensation package Mary provided to you. I apologize if the pay is lower than what you were expecting. Another HR mix-up! What can I say?</p>\n<p>I''ll talk to Rick to see if we can make an exception and raise your pay immediately, but just keep in mind that this company has a lot of room to grow, so your hard efforts will be very well rewarded!</p>\n<p>-Don</p>\n",
    "description": "HTML content for story mail s4_0"
  },
  "mails4_0Subject": {
    "defaultMessage": "Checking in",
    "description": "Subject line for story mail s4_0"
  },
  "mails4_1Content": {
    "defaultMessage": "<p>Greetings, {selfName}.</p>\n<p>I wanted to share with you a little side project I''ve been working on. I''m calling it \"Sandbox Mode\". Basically, it''s a special SIC-1 Emulator mode that allows you to specify your own input.</p>\n<p>This is useful when you just want to play around with the SIC-1 to see how things work. You can experiment with this to test out new techniques without worrying about output getting flagged as incorrect.</p>\n<p>Sandbox Mode should be visible up in your Program Inventory under the \"Diversions\" group.</p>\n<p>Let me know what you think!</p>\n<p>-Feng</p>\n",
    "description": "HTML content for story mail s4_1"
  },
  "mails4_1Subject": {
    "defaultMessage": "Sandbox Mode",
    "description": "Subject line for story mail s4_1"
  },
  "mails5_0Content": {
    "defaultMessage": "<p>Greetings, {selfName}.</p>\n<p>After talking to Ted, I thought this might be a good time to remind everyone that you can use labels for both variables <em>and constants</em>. A label is really just an address, after all.</p>\n<p>For example, if I want to be able to write out a 1, I could create a constant. Just remember that if you''re subtracting the constant you''ll want to negate the constant:</p>\n<pre><code>subleq @OUT, @n_one ; Write out a 1 by subtracting -1 from @OUT\n                    ; Note: @OUT always reads as zero: 0 - (-1) = 1\n\n@n_one: .data -1    ; Constant\n</code></pre>\n<p>-Feng</p>\n",
    "description": "HTML content for story mail s5_0"
  },
  "mails5_0Subject": {
    "defaultMessage": "Constants",
    "description": "Subject line for story mail s5_0"
  },
  "mails6_0Content": {
    "defaultMessage": "<p>{selfName}, I''m really stuck! Do you have any time to come help me with the multiplication task?</p>\n<p>I already asked Feng for some help, but all he told me is that I could run a loop a specific number of times by subtracting 1 from a counter each time and then using the result to branch.</p>\n<p>What does that even mean???</p>\n<p>-Ted</p>\n",
    "description": "HTML content for story mail s6_0"
  },
  "mails6_0Subject": {
    "defaultMessage": "Loops???",
    "description": "Subject line for story mail s6_0"
  },
  "mails7_0Content": {
    "defaultMessage": "<p>Hi, {selfName}! I''m Pat and I''m another engineering lead (I actually work on the same team as your manager, Don).</p>\n<p>Feng (who used to report to me) mentioned that you''ve been making excellent progress!</p>\n<p>Anyway, I''ve been tasked with helping to improve morale across the team, so if there''s anything that you especially like or don''t like about the workplace or your compensation (or your team in general), feel free to send me a mail. I''ll make sure to keep all discussions private.</p>\n<p>Looking forward to hearing from you!</p>\n<p>-Pat</p>\n",
    "description": "HTML content for story mail s7_0"
  },
  "mails7_0Subject": {
    "defaultMessage": "Nice work!",
    "description": "Subject line for story mail s7_0"
  },
  "mails7_1Content": {
    "defaultMessage": "<p>Engineering team,</p>\n<p>To help improve morale, SIC Systems has provided an officially sanctioned computer video game called \"Avoision\" for employees to play. If you think your work would benefit from an entertaining diversion, please feel free to compete against your coworkers for the highest score in \"Avoision\" (during your two legally-mandated unpaid breaks, or in lieu of an unneeded bathroom break).</p>\n<p>You can find \"Avoision\" in the \"Diversions\" section of the program inventory and also in the main menu of the SIC-1 Development Environment.</p>\n<p>Enjoy!</p>\n<p>-Mary</p>\n",
    "description": "HTML content for story mail s7_1"
  },
  "mails7_1Subject": {
    "defaultMessage": "Fun and games",
    "description": "Subject line for story mail s7_1"
  },
  "mails8_0Content": {
    "defaultMessage": "<p>Nice work on the arithmetic programs, {selfName}! As of this electronic mail, you have been promoted to <strong>{jobTitle}</strong>.</p>\n<p>I know it''s getting late (and please try to keep this to yourself), but our team really needs to improve our velocity. If there''s any way you can stay late and complete your next task <em>today</em>, there is a very good chance that I''ll be able to promote you to Senior Engineer (and that comes with a hefty pay bump).</p>\n<p>Again, keep this to yourself. This sort of rapid promotion is extremely rare. Obviously, I can''t guarantee anything, but if you can knuckle down and churn out this next task, things are looking pretty good...</p>\n<p>Thank you!</p>\n<p>-Don</p>\n",
    "description": "HTML content for story mail s8_0"
  },
  "mails8_0Subject": {
    "defaultMessage": "Great start!",
    "description": "Subject line for story mail s8_0"
  },
  "mails9_0Content": {
    "defaultMessage": "<p>Don (and Don''s team),</p>\n<p>In recognition of Don''s tireless efforts that have recently culminated in the ability of the SIC-1 to process sequences, I''d like everyone to join me in congratulating Don on his promotion to Principal Engineering Lead!</p>\n<p>Don, I don''t know how you managed to get sequences up and running so quickly, but we all owe a great debt to you.</p>\n<p>Thank you once again!</p>\n<p>-Rick</p>\n",
    "description": "HTML content for story mail s9_0"
  },
  "mails9_0Subject": {
    "defaultMessage": "Congratulations, Don!",
    "description": "Subject line for story mail s9_0"
  },
  "manualHeading": {
    "defaultMessage": "<h1>SIC-1 Reference Manual</h1><p>(C) 1979 - 1980 SIC Systems, Inc.</p>",
    "description": "Markup shown at the top of the printable/HTML manual"
  },
  "manualTitle": {
    "defaultMessage": "SIC-1 Manual",
    "description": "Page title for the HTML/printable manual"
  },
  "puzzleCodeAddition": {
    "defaultMessage": "; Read two numbers and output their sum. Repeat.\n;\n; Below is the solution to the previous task. You will need to add additional code to perform addition of two inputs (instead of passing through a single input):\n\n@loop:\nsubleq @tmp, @IN\nsubleq @OUT, @tmp\nsubleq @tmp, @tmp, @loop  ; Reset @tmp to zero, and jump to @loop\n\n@tmp: .data 0\n",
    "description": "Initial code for the 'Addition' puzzle"
  },
  "puzzleCodeCharacters": {
    "defaultMessage": "; When configured properly, the SIC-1 supports natural human language input and output using a highly modern (c. 1967) mapping from numbers to characters known as ASCII. For example, 72 is mapped to \"H\" (capital \"h\").\n;\n; To capture the characters \"Hi\" (capital \"h\", lower case \"i\") in two variables, one could consult an ASCII lookup table and write:\n;\n;   @H: .data 72\n;   @i: .data 105\n;\n; Consulting an ASCII table is tedious, so to make SIC Systems engineers' lives easier, SIC-1 Assembly Language now supports automated ASCII lookup using the following advanced syntax (which is equivalent to explicitly specifying characters' mapped numbers):\n;\n;   @H: .data 'H' ; 72\n;   @i: .data 'i' ; 105\n;\n; As a final convenience, it is possible to negate the value of a character by prefixing the character literal with a minus:\n;\n;   @n_H: .data -'H' ; -72\n;\n; The following sample program outputs the characters \"Hi\":\n\nsubleq @OUT, @n_H ; Note: (0 - (-72) = 72 = 'H')\nsubleq @OUT, @n_i\n\n@n_H: .data -'H'\n@n_i: .data -'i'\n",
    "description": "Initial code for the 'Characters' puzzle"
  },
  "puzzleCodeData Directive and Looping": {
    "defaultMessage": "; Custom labels are defined by putting \"@name: \" at the beginning of a line, e.g.:\n;\n;   @loop: subleq 1, 2\n;\n; In addition to \"subleq\", there is an assembler directive \".data\" that sets a byte of memory to a value at compile time (note: this is not an instruction!):\n;\n;   .data X\n;\n; X is a signed byte between -128 and 127 (inclusive).\n;\n; Combining labels and the \".data\" directive allows you to develop a system of constants and variables. For example, here a byte is set to zero, and the label @zero points to that value:\n;\n;   @zero: .data 0\n;\n; Note that, while a program is executing, you can view the current value of each variable in the variable table on the right (under the memory table).\n;\n; Variables can be used for implementing an unconditional jump:\n;\n;   subleq @zero, @zero, @next\n;\n; This will set @zero to @zero - @zero (still zero) and, since the result is always ≤ 0, execution branches to @next.\n;\n; Below is an updated negation program that repeatedly negates input values and writes them out in a loop.\n\n@loop:\nsubleq @OUT, @IN\nsubleq @zero, @zero, @loop\n\n@zero: .data 0\n",
    "description": "Initial code for the 'Data Directive and Looping' puzzle"
  },
  "puzzleCodeDecimal Digits": {
    "defaultMessage": "; For this assignment, map each decimal digit character (e.g. '1') to the numeric value it represents (e.g. '1' -> 1). Inputs will be characters, but outputs are expected to be numbers.\n;\n; Keep in mind that the character '1' is not the same as the number 1. The ASCII mapping for '1' is actually 49.\n;\n; Also note that the ASCII mappings for '0', '1', '2', etc. are contiguous:\n;\n; '0' = 48\n; '1' = 49\n; '2' = 50\n; etc.\n\n",
    "description": "Initial code for the 'Decimal Digits' puzzle"
  },
  "puzzleCodeFirst Assessment": {
    "defaultMessage": "; Now that you understand the \"subleq\" instruction, the \".data\" directive, and labels, you should be able to read values from input and write the exact same values out, by negating the value twice.\n;\n; Below is an almost complete solution. You will need to replace instances of \"???\". Hint: use a label that points to a storage location for a (negated) value.\n\n@loop:\nsubleq ???, @IN\nsubleq @OUT, ???\nsubleq @tmp, @tmp, @loop  ; Reset @tmp to zero, and jump to @loop\n\n@tmp: .data 0\n",
    "description": "Initial code for the 'First Assessment' puzzle"
  },
  "puzzleCodeMulti-Line Strings": {
    "defaultMessage": "; New line characters (value 10) can be expressed with the character '\\n'. They can also be used in strings, for example: \"Line 1\\nLine 2\".\n;\n; Read a string with multiple lines and write out each line as a string.\n\n",
    "description": "Initial code for the 'Multi-Line Strings' puzzle"
  },
  "puzzleCodeParse Data Directives": {
    "defaultMessage": "; Parse a program with multiple .data directives and output the corresponding values.\n;\n; Each .data directive only has a single value on the range [-128, 127] (inclusive).\n\n",
    "description": "Initial code for the 'Parse Data Directives' puzzle"
  },
  "puzzleCodeParse Subleq Instructions": {
    "defaultMessage": "; Parse a program with multiple subleq instructions and output the compiled program.\n;\n; Each subleq instruction specifies 3 addresses, separated by spaces (' '). The addresses are on the range [0, 255] (inclusive).\n;\n; Note that the unsigned (nonnegative) addresses will be written out as signed values on the range [-128, 127] (also inclusive). For example, 255 becomes -1, 254 becomes -2, ..., 128 becomes -128, but 127 and below are unchanged.\n\n",
    "description": "Initial code for the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleCodeSandbox Mode": {
    "defaultMessage": "; This is an open-ended program that allows specifying arbitrary input to help employees explore how the SIC-1 operates.\n;\n; Use the \"Configure Input\" button to the left (above the IO table) to provide custom input to the program.",
    "description": "Initial code for the 'Sandbox Mode' puzzle"
  },
  "puzzleCodeSelf-Hosting": {
    "defaultMessage": "; Parse a program containing .data directives and subleq instructions, then execute that program.\n;\n; All addresses used by the input program should be isolated from your program's address space.\n;\n; As in any other program, if the program writes to address 254 (@OUT; signed value: -2), that value should be directly written out.\n;\n; If the program branches to address 255 (@HALT; signed value: -1), then the program is done. Start over from scratch with the next input program.\n;\n; The compiled size of each input program is ≤ 21 bytes.\n;\n; As in previous tasks, the .data directive will always have exactly 1 value and subleq instructions will specify exactly 3 addresses (separated by spaces only).\n;\n; Additionally, the input programs will not use self-modifying code or declare/use any labels or variables. The only built-in addresses that will be used will be referenced by address instead of label (e.g. \"254\" will be used but \"@OUT\" will not).\n\n",
    "description": "Initial code for the 'Self-Hosting' puzzle"
  },
  "puzzleCodeSelf-Hosting Part 2": {
    "defaultMessage": "; Parse a self-modifying program containing .data directives and subleq instructions, then execute that program.\n;\n; Writes to address @OUT should be directly written out. If the program branches to address @HALT, then the program is done. Start over from scratch with the next input program.\n;\n; The compiled size of each input program is ≤ 21 bytes.\n;\n; As in previous tasks, the .data directive will always have exactly 1 value and subleq instructions will specify exactly 3 addresses (separated by spaces only) and no labels will be used.\n\n",
    "description": "Initial code for the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleCodeSelf-Modifying Code": {
    "defaultMessage": "; Label expressions can include an optional offset. For example, @loop+1 refers to the second byte of the instruction pointed to by @loop:\n;\n;   subleq @loop+1, @one\n;\n; This is useful in self-modifying code. Remember, each \"subleq\" instruction is stored as 3 consecutive addresses, ABC:\n;\n; mem[A] ← mem[A] - mem[B], with a branch to C if the result is less than or equal to zero.\n;\n; The sample program below reads its own compiled code. The third instruction is an example of self-modifying code because it actually modifies the first instruction. Specifically, it increments the first instruction's second address (@loop+1). This causes the *next* loop iteration's first instruction to read the *next* byte of memory (0, 1, 2, 3, ...).\n;\n; Note: When running a program, the original (unmodified) source code is always shown. If the program modifies itself, the changes are reflected in the memory table in the top right, but *not* in the source code viewer.\n\n@loop:\nsubleq @tmp, 0           ; Second address (initially zero) will be incremented\nsubleq @OUT, @tmp        ; Output the value\nsubleq @loop+1, @n_one   ; Here is where the increment is performed\nsubleq @tmp, @tmp, @loop\n\n@tmp: .data 0\n@n_one: .data -1\n",
    "description": "Initial code for the 'Self-Modifying Code' puzzle"
  },
  "puzzleCodeStack Memory": {
    "defaultMessage": "; This program implements a last-in, first-out stack by modifying the read and write addresses of the instructions that interact with the stack.\n;\n; The program pushes 3 (defined by @count) input values onto the stack and then pops them off (outputting them in reverse order).\n\n; The first address of this instruction (which starts pointing to @stack) will be incremented with each write to the stack\n\n@stack_push:\nsubleq @stack, @IN\nsubleq @count, @one, @prepare_to_pop\n\n; Modify the instruction at @stack_push (increment target address)\nsubleq @stack_push, @n_one\nsubleq @tmp, @tmp, @stack_push\n\n; Prepare to start popping values off of the stack by copying the current stack position to @stack_pop+1\n@prepare_to_pop:\nsubleq @tmp, @stack_push\nsubleq @stack_pop+1, @tmp\n\n; Read a value from the stack (note: the second address of this instruction is repeatedly decremented)\n@stack_pop:\nsubleq @OUT, 0\n\n; Decrement stack address in the instruction at @stack_pop\nsubleq @stack_pop+1, @one\nsubleq @tmp, @tmp, @stack_pop\n\n; Constants\n@one: .data 1\n@n_one: .data -1\n\n; Variables\n@tmp: .data 0\n@count: .data 3\n\n; Address of @stack (defined below)\n@stack_address: .data @stack\n\n; Base of stack (stack will grow to larger addresses, so no variables should be placed after this one)\n@stack: .data 0\n",
    "description": "Initial code for the 'Stack Memory' puzzle"
  },
  "puzzleCodeStrings": {
    "defaultMessage": "; Strings are sequences of characters that are terminated with a zero. In the following example, @string points to a 3 byte sequence representing the string \"Hi\":\n;\n;   @string:\n;   .data 'H'\n;   .data 'i'\n;   .data 0\n;\n; Although not discussed previously, the .data directive can actually take a sequence of values to set multiple bytes, so the previous code could be simplified:\n;\n;   @string: .data 'H', 'i', 0\n;\n; And thanks to the innovative design-by-committee approach employed by SIC Systems, the following novel syntax for strings can be used (again, equivalent to the other examples):\n;\n;   @string: .data \"Hi\" ; Sets the next 3 bytes: 'H', 'i', 0\n;\n; Similar to character values, an entire string can be negated by prefixing it with a minus:\n;\n;   @n_string: .data -\"Hi\" ; Sets the next 3 bytes: -72, -105, 0\n;\n; The following code outputs \"Hello, world!\":\n\n@loop:\nsubleq @OUT, @n_message  ; Read address starts at @n_message\nsubleq @loop+1, @n_one   ; Advance read address\nsubleq @tmp, @tmp, @loop\n\n@n_one: .data -1\n@n_message: .data -\"Hello, world!\"\n@tmp: .data 0\n",
    "description": "Initial code for the 'Strings' puzzle"
  },
  "puzzleCodeSubleq Instruction and Output": {
    "defaultMessage": "; The Single Instruction Computer Mark 1 (SIC-1) is an 8-bit computer with 256 bytes of memory. Programs for the SIC-1 are written in SIC-1 Assembly Language.\n;\n; Each instruction is 3 bytes, specified as follows:\n;\n;   subleq A B [C]\n;\n; A, B, and C are memory addresses (0 - 255) or labels.\n;\n; \"subleq\" subtracts the value at address B from the value at address A and stores the result at address A (i.e. mem[A] ← mem[A] - mem[B]).\n;\n; If the result is ≤ 0, execution branches to address C.\n;\n; Note that if C is not specified, the address of the next instruction is automatically added by the assembler (in effect, this means that taking the branch is no different from advancing to the next instruction).\n;\n; For convenience, addresses can be specified using labels. The following predefined labels are always available:\n;\n;   @MAX (252): Maximum user-modifiable address\n;   @IN (253): Reads a value from input (writes are ignored)\n;   @OUT (254): Writes a result to output (reads as zero)\n;   @HALT (255): Terminates the program when accessed\n;\n; Note: any text following a semicolon is considered a comment. Comments are ignored by the assembler.\n; \n; Below is a very simple SIC-1 program that negates one input value and writes it out.\n;\n; E.g. if the input value from @IN is 3, it subtracts 3 from @OUT (which reads as zero), and the result of 0 - 3 = -3 is written out.\n\nsubleq @OUT, @IN\n\n; Use the \"Compile/Step\" (Ctrl+.) and \"Run\" (Ctrl+Enter) buttons to execute the program until all expected outputs have been successfully written out (see the \"In\"/\"Expected\"/\"Out\" table to the left).\n    ",
    "description": "Initial code for the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleCodeTokenizer": {
    "defaultMessage": "; Read a string and output each word as its own string. Repeat.\n;\n; Note: words are each separated by a single space (and the last word ends with a zero).\n\n",
    "description": "Initial code for the 'Tokenizer' puzzle"
  },
  "puzzleCodeUppercase": {
    "defaultMessage": "; Read and output characters. For each alphabetic character, convert it to uppercase if needed.\n;\n; Note that the mappings for 'a', 'b', ... 'z' are contiguous, as are 'A', 'B', ... 'Z'.\n\n",
    "description": "Initial code for the 'Uppercase' puzzle"
  },
  "puzzleDescriptionAddition": {
    "defaultMessage": "Read two numbers and output their sum. Repeat.",
    "description": "Description of the 'Addition' puzzle"
  },
  "puzzleDescriptionCalculator": {
    "defaultMessage": "Read a string representing arithmetic (+, -, or *) on 2 numbers on the interval [1, 127]; write out the resulting value. Repeat.",
    "description": "Description of the 'Calculator' puzzle"
  },
  "puzzleDescriptionCharacters": {
    "defaultMessage": "Output the following two characters: \"Hi\"",
    "description": "Description of the 'Characters' puzzle"
  },
  "puzzleDescriptionData Directive and Looping": {
    "defaultMessage": "Use .data and labels to loop.",
    "description": "Description of the 'Data Directive and Looping' puzzle"
  },
  "puzzleDescriptionDecimal Digits": {
    "defaultMessage": "Read a decimal digit character, output the numeric value. Repeat.",
    "description": "Description of the 'Decimal Digits' puzzle"
  },
  "puzzleDescriptionDivision": {
    "defaultMessage": "Read two positive numbers (A, then B), divide A by B, and output the quotient followed by the remainder. Repeat.",
    "description": "Description of the 'Division' puzzle"
  },
  "puzzleDescriptionFirst Assessment": {
    "defaultMessage": "Write input values to output.",
    "description": "Description of the 'First Assessment' puzzle"
  },
  "puzzleDescriptionIndicator Function": {
    "defaultMessage": "Read two zero-terminated sets of numbers on the interval [1, 99], A and B. For each element of B, output a 1 if the value is in A and 0 otherwise. Repeat.",
    "description": "Description of the 'Indicator Function' puzzle"
  },
  "puzzleDescriptionInterleave": {
    "defaultMessage": "Read two equal length positive sequences (A and B) and interleave their elements (A1, B1, A2, B2, ...), ending with a single zero. Repeat.",
    "description": "Description of the 'Interleave' puzzle"
  },
  "puzzleDescriptionMode": {
    "defaultMessage": "Read a list of numbers on the interval [1, 99] (terminated by a zero) and output the most common element. Repeat.",
    "description": "Description of the 'Mode' puzzle"
  },
  "puzzleDescriptionMulti-Line Strings": {
    "defaultMessage": "Read a string with multiple lines and write out each line as a string.",
    "description": "Description of the 'Multi-Line Strings' puzzle"
  },
  "puzzleDescriptionMultiplication": {
    "defaultMessage": "Read two nonnegative numbers and output the resulting (nonnegative) product. Repeat.",
    "description": "Description of the 'Multiplication' puzzle"
  },
  "puzzleDescriptionNumber to Sequence": {
    "defaultMessage": "Read a number and then output that many 1s, followed by a 0. Repeat.",
    "description": "Description of the 'Number to Sequence' puzzle"
  },
  "puzzleDescriptionParse Data Directives": {
    "defaultMessage": "Parse a program with multiple .data directives and output the corresponding values.",
    "description": "Description of the 'Parse Data Directives' puzzle"
  },
  "puzzleDescriptionParse Decimal": {
    "defaultMessage": "Read a string representing a number on the interval [1, 127] and output the corresponding value. Repeat.",
    "description": "Description of the 'Parse Decimal' puzzle"
  },
  "puzzleDescriptionParse Subleq Instructions": {
    "defaultMessage": "Parse a program with multiple subleq instructions and output the compiled program.",
    "description": "Description of the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleDescriptionPrint Decimal": {
    "defaultMessage": "Read a positive number on the interval [1, 127] and output a string representing the number in decimal form. Repeat.",
    "description": "Description of the 'Print Decimal' puzzle"
  },
  "puzzleDescriptionReverse Sequence": {
    "defaultMessage": "Read a sequence of positive numbers (terminated by a zero) and output the sequence in reverse order (with zero terminator). Repeat.",
    "description": "Description of the 'Reverse Sequence' puzzle"
  },
  "puzzleDescriptionSandbox Mode": {
    "defaultMessage": "An open-ended, configurable program for exploration purposes.",
    "description": "Description of the 'Sandbox Mode' puzzle"
  },
  "puzzleDescriptionSelf-Hosting": {
    "defaultMessage": "Read in a SIC-1 program and execute it until it branches to address 255, writing out any values written to address 254. Repeat.",
    "description": "Description of the 'Self-Hosting' puzzle"
  },
  "puzzleDescriptionSelf-Hosting Part 2": {
    "defaultMessage": "Read in a self-modifying SIC-1 program and execute it until it branches to address 255, writing out any values written to address 254. Repeat.",
    "description": "Description of the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleDescriptionSelf-Modifying Code": {
    "defaultMessage": "Output the program's compiled code byte-by-byte.",
    "description": "Description of the 'Self-Modifying Code' puzzle"
  },
  "puzzleDescriptionSequence Cardinality": {
    "defaultMessage": "Read a sequence of positive numbers and output the count of numbers. Repeat. Sequences are terminated by a zero.",
    "description": "Description of the 'Sequence Cardinality' puzzle"
  },
  "puzzleDescriptionSequence Sum": {
    "defaultMessage": "Read a sequence of positive numbers and output their sum. Repeat. Sequences are terminated by a zero.",
    "description": "Description of the 'Sequence Sum' puzzle"
  },
  "puzzleDescriptionSign Function": {
    "defaultMessage": "Read a number. If less than zero, output -1; if equal to zero, output 0; otherwise output 1. Repeat.",
    "description": "Description of the 'Sign Function' puzzle"
  },
  "puzzleDescriptionSort": {
    "defaultMessage": "Read a list of numbers on the interval [1, 99] (terminated by a zero) and output the list ordered smallest to largest, ending with a zero. Repeat.",
    "description": "Description of the 'Sort' puzzle"
  },
  "puzzleDescriptionStack Memory": {
    "defaultMessage": "Read 3 values from input and then output the values in reverse order.",
    "description": "Description of the 'Stack Memory' puzzle"
  },
  "puzzleDescriptionStrings": {
    "defaultMessage": "Output the string \"Hello, world!\".",
    "description": "Description of the 'Strings' puzzle"
  },
  "puzzleDescriptionSubleq Instruction and Output": {
    "defaultMessage": "Use subleq and input/output to negate an input and write it out.",
    "description": "Description of the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleDescriptionSubtraction": {
    "defaultMessage": "Read two numbers (A, then B) and output A minus B. Repeat.",
    "description": "Description of the 'Subtraction' puzzle"
  },
  "puzzleDescriptionTokenizer": {
    "defaultMessage": "Read a string and output each word as its own string. Repeat.",
    "description": "Description of the 'Tokenizer' puzzle"
  },
  "puzzleDescriptionUppercase": {
    "defaultMessage": "Read and output characters, converting all lowercase characters to uppercase.",
    "description": "Description of the 'Uppercase' puzzle"
  },
  "puzzleDetailSandbox Mode": {
    "defaultMessage": "<p>Use Sandbox Mode to freely experiment with the SIC-1 without worrying about output getting flagged as incorrect.</p><p>It's possible to specify custom input using the \"Configure Input\" button on the left side of the main SIC-1 Development Environment (above the IO table). Input uses the same syntax as in a <code>.data</code> directive (examples: <code>-7</code>, <code>''A''</code>, <code>-\"Negated string\"</code>).</p>",
    "description": "Detailed description of 'Sandbox Mode', shown on its task viewer page"
  },
  "puzzleGroupTitleAdvanced Techniques": {
    "defaultMessage": "Advanced Techniques",
    "description": "Title of 'Advanced Techniques' puzzle group"
  },
  "puzzleGroupTitleArithmetic": {
    "defaultMessage": "Arithmetic",
    "description": "Title of 'Arithmetic' puzzle group"
  },
  "puzzleGroupTitleNatural Language Processing": {
    "defaultMessage": "Natural Language Processing",
    "description": "Title of 'Natural Language Processing' puzzle group"
  },
  "puzzleGroupTitleSelf-Hosting": {
    "defaultMessage": "Self-Hosting",
    "description": "Title of 'Self-Hosting' puzzle group"
  },
  "puzzleGroupTitleSequence Manipulation": {
    "defaultMessage": "Sequence Manipulation",
    "description": "Title of 'Sequence Manipulation' puzzle group"
  },
  "puzzleGroupTitleSequences": {
    "defaultMessage": "Sequences",
    "description": "Title of 'Sequences' puzzle group"
  },
  "puzzleGroupTitleTutorial": {
    "defaultMessage": "Tutorial",
    "description": "Title of 'Tutorial' puzzle group"
  },
  "puzzleHintAddition": {
    "defaultMessage": "<p>Subtract two inputs into <code>@tmp</code>.</p>",
    "description": "Hint for the 'Addition' puzzle"
  },
  "puzzleHintCalculator": {
    "defaultMessage": "<p>Combine the solutions to \"Addition\", \"Subtraction\", \"Multiplication\", and \"Parse Decimal\".</p>",
    "description": "Hint for the 'Calculator' puzzle"
  },
  "puzzleHintCharacters": {
    "defaultMessage": "<p>This task has already been solved, but note how character literals are used (and negated).</p>",
    "description": "Hint for the 'Characters' puzzle"
  },
  "puzzleHintData Directive and Looping": {
    "defaultMessage": "<p>This task has already been solved. Just click <strong>Run</strong>.</p>",
    "description": "Hint for the 'Data Directive and Looping' puzzle"
  },
  "puzzleHintDecimal Digits": {
    "defaultMessage": "<p>Subtract the character literal <code>''0''</code>.</p>",
    "description": "Hint for the 'Decimal Digits' puzzle"
  },
  "puzzleHintDivision": {
    "defaultMessage": "<p>Repeatedly subtract the divisor from the dividend.</p>",
    "description": "Hint for the 'Division' puzzle"
  },
  "puzzleHintFirst Assessment": {
    "defaultMessage": "<p>Negate the value twice (these operations cancel out and result in the original number). This can be done by storing the negated value in a memory location that starts out as zero (e.g. <code>@tmp</code>).</p>",
    "description": "Hint for the 'First Assessment' puzzle"
  },
  "puzzleHintIndicator Function": {
    "defaultMessage": "<p>Store the first list for later lookup. Remember to clear the list afterwards.</p>",
    "description": "Hint for the 'Indicator Function' puzzle"
  },
  "puzzleHintInterleave": {
    "defaultMessage": "<p>Store the first list for later output. Remember to clear the list afterwards.</p>",
    "description": "Hint for the 'Interleave' puzzle"
  },
  "puzzleHintMode": {
    "defaultMessage": "<p>Track both the items, as well as their count.</p>",
    "description": "Hint for the 'Mode' puzzle"
  },
  "puzzleHintMulti-Line Strings": {
    "defaultMessage": "<p>This task is very similar to Tokenizer.</p>",
    "description": "Hint for the 'Multi-Line Strings' puzzle"
  },
  "puzzleHintMultiplication": {
    "defaultMessage": "<p>Repeatedly subtract one of the numbers, using a counter to ensure the subtraction is done the appropriate number of times.</p>",
    "description": "Hint for the 'Multiplication' puzzle"
  },
  "puzzleHintNumber to Sequence": {
    "defaultMessage": "<p>Use a counter to write the appropriate number of <strong>1</strong>s.</p>",
    "description": "Hint for the 'Number to Sequence' puzzle"
  },
  "puzzleHintParse Data Directives": {
    "defaultMessage": "<p>This task is similar to \"Parse Decimal\", but negative numbers need to be handled.</p>",
    "description": "Hint for the 'Parse Data Directives' puzzle"
  },
  "puzzleHintParse Decimal": {
    "defaultMessage": "<p>Shifting left one decimal digit is the same as multiplying by ten.</p>",
    "description": "Hint for the 'Parse Decimal' puzzle"
  },
  "puzzleHintParse Subleq Instructions": {
    "defaultMessage": "<p>This task is very similar to \"Parse Decimal\".</p>",
    "description": "Hint for the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleHintPrint Decimal": {
    "defaultMessage": "<p>Remember to output digits from most significant to least.</p>",
    "description": "Hint for the 'Print Decimal' puzzle"
  },
  "puzzleHintReverse Sequence": {
    "defaultMessage": "<p>Use a stack, and remember to clear the stack afterwards.</p>",
    "description": "Hint for the 'Reverse Sequence' puzzle"
  },
  "puzzleHintSandbox Mode": {
    "defaultMessage": "<p>Click \"Configure Input\" to supply custom input.</p>",
    "description": "Hint for the 'Sandbox Mode' puzzle"
  },
  "puzzleHintSelf-Hosting": {
    "defaultMessage": "<p>Use previous decimal-parsing solutions to compile the program, but take care to follow the instructions precisely.</p>",
    "description": "Hint for the 'Self-Hosting' puzzle"
  },
  "puzzleHintSelf-Hosting Part 2": {
    "defaultMessage": "<p>You're on your own for this one.</p>",
    "description": "Hint for the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleHintSelf-Modifying Code": {
    "defaultMessage": "<p>This task has already been solved, but carefully note how the second byte of the first instruction is modified.</p>",
    "description": "Hint for the 'Self-Modifying Code' puzzle"
  },
  "puzzleHintSequence Cardinality": {
    "defaultMessage": "<p>Increment a counter for each element in the sequence.</p>",
    "description": "Hint for the 'Sequence Cardinality' puzzle"
  },
  "puzzleHintSequence Sum": {
    "defaultMessage": "<p>Store the value to test whether it indicates the end of the sequence.</p>",
    "description": "Hint for the 'Sequence Sum' puzzle"
  },
  "puzzleHintSign Function": {
    "defaultMessage": "<p>Use the \"branch if result is ≤ 0\" property of subleq to branch between code blocks, then use (negated) constants to write the appropriate output.</p>",
    "description": "Hint for the 'Sign Function' puzzle"
  },
  "puzzleHintSort": {
    "defaultMessage": "<p>Insert items into memory in the correct position.</p>",
    "description": "Hint for the 'Sort' puzzle"
  },
  "puzzleHintStack Memory": {
    "defaultMessage": "<p>This task has already been solved, but carefully watch the memory window to see how items are added to the stack.</p>",
    "description": "Hint for the 'Stack Memory' puzzle"
  },
  "puzzleHintStrings": {
    "defaultMessage": "<p>This task has already been solved, but note that strings are terminated by a zero.</p>",
    "description": "Hint for the 'Strings' puzzle"
  },
  "puzzleHintSubleq Instruction and Output": {
    "defaultMessage": "<p>This task has already been solved. Just click <strong>Run</strong>.</p>",
    "description": "Hint for the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleHintSubtraction": {
    "defaultMessage": "<p>Use two variables.</p>",
    "description": "Hint for the 'Subtraction' puzzle"
  },
  "puzzleHintTokenizer": {
    "defaultMessage": "<p>Strings are terminated by a single zero.</p>",
    "description": "Hint for the 'Tokenizer' puzzle"
  },
  "puzzleHintUppercase": {
    "defaultMessage": "<p>Test to see if the input is between \"a\" and \"z\", and modify the value as needed.</p>",
    "description": "Hint for the 'Uppercase' puzzle"
  },
  "puzzleTitleAddition": {
    "defaultMessage": "Addition",
    "description": "Title of the 'Addition' puzzle"
  },
  "puzzleTitleCalculator": {
    "defaultMessage": "Calculator",
    "description": "Title of the 'Calculator' puzzle"
  },
  "puzzleTitleCharacters": {
    "defaultMessage": "Characters",
    "description": "Title of the 'Characters' puzzle"
  },
  "puzzleTitleData Directive and Looping": {
    "defaultMessage": "Data Directive and Looping",
    "description": "Title of the 'Data Directive and Looping' puzzle"
  },
  "puzzleTitleDecimal Digits": {
    "defaultMessage": "Decimal Digits",
    "description": "Title of the 'Decimal Digits' puzzle"
  },
  "puzzleTitleDivision": {
    "defaultMessage": "Division",
    "description": "Title of the 'Division' puzzle"
  },
  "puzzleTitleFirst Assessment": {
    "defaultMessage": "First Assessment",
    "description": "Title of the 'First Assessment' puzzle"
  },
  "puzzleTitleIndicator Function": {
    "defaultMessage": "Indicator Function",
    "description": "Title of the 'Indicator Function' puzzle"
  },
  "puzzleTitleInterleave": {
    "defaultMessage": "Interleave",
    "description": "Title of the 'Interleave' puzzle"
  },
  "puzzleTitleMode": {
    "defaultMessage": "Mode",
    "description": "Title of the 'Mode' puzzle"
  },
  "puzzleTitleMulti-Line Strings": {
    "defaultMessage": "Multi-Line Strings",
    "description": "Title of the 'Multi-Line Strings' puzzle"
  },
  "puzzleTitleMultiplication": {
    "defaultMessage": "Multiplication",
    "description": "Title of the 'Multiplication' puzzle"
  },
  "puzzleTitleNumber to Sequence": {
    "defaultMessage": "Number to Sequence",
    "description": "Title of the 'Number to Sequence' puzzle"
  },
  "puzzleTitleParse Data Directives": {
    "defaultMessage": "Parse Data Directives",
    "description": "Title of the 'Parse Data Directives' puzzle"
  },
  "puzzleTitleParse Decimal": {
    "defaultMessage": "Parse Decimal",
    "description": "Title of the 'Parse Decimal' puzzle"
  },
  "puzzleTitleParse Subleq Instructions": {
    "defaultMessage": "Parse Subleq Instructions",
    "description": "Title of the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleTitlePrint Decimal": {
    "defaultMessage": "Print Decimal",
    "description": "Title of the 'Print Decimal' puzzle"
  },
  "puzzleTitleReverse Sequence": {
    "defaultMessage": "Reverse Sequence",
    "description": "Title of the 'Reverse Sequence' puzzle"
  },
  "puzzleTitleSandbox Mode": {
    "defaultMessage": "Sandbox Mode",
    "description": "Title of the 'Sandbox Mode' puzzle"
  },
  "puzzleTitleSelf-Hosting": {
    "defaultMessage": "Self-Hosting",
    "description": "Title of the 'Self-Hosting' puzzle"
  },
  "puzzleTitleSelf-Hosting Part 2": {
    "defaultMessage": "Self-Hosting Part 2",
    "description": "Title of the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleTitleSelf-Modifying Code": {
    "defaultMessage": "Self-Modifying Code",
    "description": "Title of the 'Self-Modifying Code' puzzle"
  },
  "puzzleTitleSequence Cardinality": {
    "defaultMessage": "Sequence Cardinality",
    "description": "Title of the 'Sequence Cardinality' puzzle"
  },
  "puzzleTitleSequence Sum": {
    "defaultMessage": "Sequence Sum",
    "description": "Title of the 'Sequence Sum' puzzle"
  },
  "puzzleTitleSign Function": {
    "defaultMessage": "Sign Function",
    "description": "Title of the 'Sign Function' puzzle"
  },
  "puzzleTitleSort": {
    "defaultMessage": "Sort",
    "description": "Title of the 'Sort' puzzle"
  },
  "puzzleTitleStack Memory": {
    "defaultMessage": "Stack Memory",
    "description": "Title of the 'Stack Memory' puzzle"
  },
  "puzzleTitleStrings": {
    "defaultMessage": "Strings",
    "description": "Title of the 'Strings' puzzle"
  },
  "puzzleTitleSubleq Instruction and Output": {
    "defaultMessage": "Subleq Instruction and Output",
    "description": "Title of the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleTitleSubtraction": {
    "defaultMessage": "Subtraction",
    "description": "Title of the 'Subtraction' puzzle"
  },
  "puzzleTitleTokenizer": {
    "defaultMessage": "Tokenizer",
    "description": "Title of the 'Tokenizer' puzzle"
  },
  "puzzleTitleUppercase": {
    "defaultMessage": "Uppercase",
    "description": "Title of the 'Uppercase' puzzle"
  },
  "rank": {
    "defaultMessage": "Rank: {ranking}",
    "description": "Current ranking of the player"
  },
  "rankOutOf": {
    "defaultMessage": "{rank} out of {total}",
    "description": "Actual ranking value (out of total)"
  },
  "selectColorScheme": {
    "defaultMessage": "Color scheme:",
    "description": "Label for the 'color scheme' dropdown menu"
  },
  "selectLanguage": {
    "defaultMessage": "Language:",
    "description": "Label for the 'language selection' dropdown menu"
  },
  "sliderMusicVolume": {
    "defaultMessage": "Music volume:",
    "description": "Label for the 'music volume' slider"
  },
  "sliderSoundVolume": {
    "defaultMessage": "Sound effects volume:",
    "description": "Label for the 'sound effects volume' slider"
  },
  "sliderZoom": {
    "defaultMessage": "Zoom:",
    "description": "Label for the text size slider"
  },
  "solutionButtonCancelDelete": {
    "defaultMessage": "Cancel",
    "description": "Text on the 'cancel' button when trying to delete an item in the solution manager"
  },
  "solutionButtonConfirmDelete": {
    "defaultMessage": "Delete",
    "description": "Text on 'delete' button to confirm deletion in the solution manager"
  },
  "solutionNameDefault": {
    "defaultMessage": "Untitled",
    "description": "Default name for new solution files"
  },
  "solutionStatsSuffix": {
    "defaultMessage": " (cycles: {cycles}, bytes: {bytes})",
    "description": "Formatted statistics that are appended to a solution title, for reference (note the leading space)"
  },
  "stateStatusRunning": {
    "defaultMessage": "Running",
    "description": "Text shown for the simulation 'state' shown in the lower-left, when running"
  },
  "stateStatusStopped": {
    "defaultMessage": "Stopped",
    "description": "Text shown for the simulation 'state' shown in the lower-left, when stopped"
  },
  "taskAchievements": {
    "defaultMessage": "Achievements",
    "description": "Title of the 'achievements' item in the program inventory/task selector window"
  },
  "taskAvoision": {
    "defaultMessage": "Avoision",
    "description": "Title of the 'Avoision' page in the task viewer selector"
  },
  "taskContentAvoision": {
    "defaultMessage": "<p>To help improve morale, SIC Systems has provided an officially sanctioned computer video game called \"Avoision\" for employees to play. If you think your work would benefit from an entertaining diversion, please feel free to compete against your coworkers for the highest score in \"Avoision\" (during your two legally-mandated unpaid breaks, or in lieu of an unneeded bathroom break).</p>\n<h3>Instructions</h3>\n<p>Use the arrow keys or WASD to move your bright green block and try to capture the bright green square. The faster you capture the square, the more points you will score.</p>\n<p>As you progress, moving dark green blocks will appear. If your bright green block collides with a dark green block, the game is over.</p>\n<p>Click the \"Play Avoision\" button below to play.</p>",
    "description": "Markup for the 'Avoision' page in the task viewer"
  },
  "taskDiversions": {
    "defaultMessage": "Diversions",
    "description": "Title of the 'diversions' group in the program inventory/task selector window"
  },
  "taskNumberedList": {
    "defaultMessage": "{number}. {title}",
    "description": "Format for a numbered group in the program inventory/task selection window"
  },
  "taskProgress": {
    "defaultMessage": "Task Progress",
    "description": "Title of the 'task progress' item in the program inventory/task selector window"
  },
  "taskStatusIncomplete": {
    "defaultMessage": "Incomplete",
    "description": "Status shown for a task that has been viewed, but not yet completed"
  },
  "taskStatusNew": {
    "defaultMessage": "New",
    "description": "Status shown for a task that has not yet been viewed"
  },
  "taskViewerButtonAvoision": {
    "defaultMessage": "Play Avoision",
    "description": "Text on button for playing Avoision"
  },
  "taskViewerButtonContinueEditing": {
    "defaultMessage": "Continue Editing Current Program",
    "description": "Text on button for continuing editing the current program"
  },
  "taskViewerButtonLoad": {
    "defaultMessage": "Load This Program",
    "description": "Text on button for loading the selected program"
  },
  "taskViewerButtonNextIncompleteTask": {
    "defaultMessage": "View Next Incomplete Task",
    "description": "Text on button for viewing the next incomplete task"
  },
  "taskViewerButtonSandbox": {
    "defaultMessage": "Enter Sandbox Mode",
    "description": "Text on button for Sandbox Mode"
  },
  "taskViewerButtonSolutionCopy": {
    "defaultMessage": "Copy",
    "description": "Text on the task viewer button to copy a solution file"
  },
  "taskViewerButtonSolutionDelete": {
    "defaultMessage": "Delete",
    "description": "Text on the task viewer button to attempt to delete a solution file"
  },
  "taskViewerButtonSolutionNew": {
    "defaultMessage": "New",
    "description": "Text on the task viewer button to create a new solution file"
  },
  "taskViewerButtonSolutionRename": {
    "defaultMessage": "Rename",
    "description": "Text on the task viewer button to rename a solution file"
  },
  "taskViewerButtonViewUnread": {
    "defaultMessage": "View Unread Electronic Mail",
    "description": "Text on button for viewing unread mail"
  },
  "taskViewerFilesEmpty": {
    "defaultMessage": "(No files found)",
    "description": "Text shown when there are no solutions saved for a task"
  },
  "taskViewerHeadingAvoision": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Program</cap>: Avoision",
    "description": "Markup for the heading shown for Avoision in the task viewer; use {newline} in between lines"
  },
  "taskViewerHeadingFile": {
    "defaultMessage": "File Selection",
    "description": "Heading for the 'file selection' (save management) part of a task"
  },
  "taskViewerHeadingUser": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Title</cap>: {title}",
    "description": "Markup for the heading shown on a user-specific page of the program inventory/task viewer; use {newline} in between lines"
  },
  "taskViewerMotivation": {
    "defaultMessage": "<p>SIC Systems appreciates your continued effort.</p><p>For motivational purposes, here is how the number of tasks you have completed compares to other engineers.</p>",
    "description": "Motivational message from employer introducing task completion statistics"
  },
  "taskViewerStatusCompleted": {
    "defaultMessage": "Completed",
    "description": "Status shown when a task has been completed"
  },
  "taskViewerStatusLine": {
    "defaultMessage": "<cap>Status</cap>: <cap>{status}</cap>",
    "description": "Line for status of the task heading shown in the task viewer"
  },
  "taskViewerTaskHeading": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Task</cap>: {title}{newline}{statusLine}{newline}{newline}<cap>Description</cap>: {description}",
    "description": "Heading content markup shown in the program inventory/task viewer for a particular task; use {newline} at the end of each line; note that {statusLine} is empty for Sandbox Mode"
  },
  "taskViewerTextIncomplete": {
    "defaultMessage": "You have not implemented this program yet. Click \"Load This Program\" at the bottom of this window to load the program into the editor.",
    "description": "Text shown in the task selector when a task has not been successfully implemented yet"
  },
  "taskWithStatus": {
    "defaultMessage": "{title} (<cap>{status}</cap>)",
    "description": "Format for showing a task with incomplete or new status"
  },
  "templateSolutionCopy": {
    "defaultMessage": "Copy of {name}",
    "description": "Text template for new names when copying an existing solution"
  },
  "templateSolutionDuplicate": {
    "defaultMessage": "{name} ({number})",
    "description": "Text template for new names when the desired name already exists"
  },
  "textCompilationErrorContext": {
    "defaultMessage": "<p>On line {sourceLineNumber}:</p><p>{sourceLine}</p>",
    "description": "Markup shown for the context of a compilation error, when a source line and line number are available"
  },
  "textConfirmDelete": {
    "defaultMessage": "Delete \"{itemName}\"?",
    "description": "Text asking if the item should be deleted"
  },
  "textCopyFailed": {
    "defaultMessage": "Error: Failed to copy to the clipboard.",
    "description": "Message shown when copying text to the clipboard fails (only used on the web version)"
  },
  "textCopySucceeded": {
    "defaultMessage": "Copied to the clipboard!",
    "description": "Message printed after copying text to the clipboard succeeds (only used on the web version)"
  },
  "textCreditsFooter": {
    "defaultMessage": "To view third party licenses, {link}.",
    "description": "Text at the bottom of the 'credits' message box, with instructions for viewing third party licenses"
  },
  "textHaltUnexpected": {
    "defaultMessage": "All of your assigned tasks require the program to repeat indefinitely, so this is an error that must be corrected.",
    "description": "Clarification that halting is not expected for all assigned tasks"
  },
  "textHint": {
    "defaultMessage": "Hint for {task}:",
    "description": "Text shown as a heading in the 'hint' message box"
  },
  "textInputError": {
    "defaultMessage": "Error: {message}",
    "description": "Text shown when an error occurs when parsing custom input in Sandbox Mode"
  },
  "textLicenses": {
    "defaultMessage": "Third Party Licenses",
    "description": "Text heading for the 'third party licenses' message box, showing copyright notices, etc."
  },
  "textSaveClear": {
    "defaultMessage": "Use the button below to delete your solutions, user name, and achievements:",
    "description": "Text content shown in the initial 'clear save data' message box (only used on the web version)"
  },
  "textSaveClearFailed": {
    "defaultMessage": "Error: Failed to clear save data.",
    "description": "Message shown when clearing save data fails (only used on the web version)"
  },
  "textSaveDataImport": {
    "defaultMessage": "Paste in your previously exported save data string here:",
    "description": "Instructional text shown in the 'import save data' window"
  },
  "textSaveExport": {
    "defaultMessage": "Below is a compressed and encoded copy of your save data. You can later import this data to restore it.",
    "description": "Text shown in the 'export save data' message box (only used in the web version)"
  },
  "textSaveImportFailed": {
    "defaultMessage": "Error: Failed to overwrite save data.",
    "description": "Text shown when importing save data fails (only used on web version)"
  },
  "textTaskStatistics": {
    "defaultMessage": "Here are performance statistics of your program (as compared to others' programs):",
    "description": "Markup introducing task statistic charts for completed tasks"
  },
  "textVariablesEmpty": {
    "defaultMessage": "(empty)",
    "description": "Text shown in the 'variables' table when there are no variables"
  },
  "tooltipCommentBlock": {
    "defaultMessage": "Ctrl+K Ctrl+C",
    "description": "Tooltip for the 'comment block' button, which comments out the selected lines of program text"
  },
  "tooltipIndentBlock": {
    "defaultMessage": "Tab (in Tab Insert Mode only)",
    "description": "Tooltip for the 'indent block' button, which prepends one level of indentation to the selected lines of program text (note: the shortcut key is only supported when Tab Insert Mode is enabled)"
  },
  "tooltipMenu": {
    "defaultMessage": "Esc or F1",
    "description": "Tooltip for the 'menu' button, which opens the main menu"
  },
  "tooltipStep": {
    "defaultMessage": "Ctrl+.",
    "description": "Tooltip for the 'step/compile' button, indicating keyboard shortcut"
  },
  "tooltipStepRate": {
    "defaultMessage": "Ctrl+Enter",
    "description": "Tooltip for the 'run/turbo' button, which adjusts the program execution speed"
  },
  "tooltipStop": {
    "defaultMessage": "Esc or Ctrl+Shift+Enter",
    "description": "Tooltip for the 'pause/stop' button, indicating keyboard shortcut"
  },
  "tooltipTabInsertMode": {
    "defaultMessage": "Ctrl+M",
    "description": "Tooltip for the 'tab insert mode' toggle button, indicating keyboard shortcut"
  },
  "tooltipUncommentBlock": {
    "defaultMessage": "Ctrl+K Ctrl+U",
    "description": "Tooltip for the 'uncomment block' button, which uncomments the selected lines of program text"
  },
  "tooltipUnindentBlock": {
    "defaultMessage": "Shift+Tab (in Tab Insert Mode only)",
    "description": "Tooltip for the 'unindent block' button, which removes one level of indentation from the selected lines of program text (note: the shortcut key is only supported when Tab Insert Mode is enabled)"
  },
  "windowConfigureInput": {
    "defaultMessage": "Configure Input",
    "description": "Window title for configuring input in Sandbox Mode"
  },
  "windowEditProfile": {
    "defaultMessage": "User Profile",
    "description": "Window title for the user profile editing message box (only used on the web version)"
  },
  "windowHelp": {
    "defaultMessage": "Help",
    "description": "Window title for the 'help' menu, which provides access to hints, manuals, etc."
  },
  "windowHint": {
    "defaultMessage": "Hint",
    "description": "Window title for the 'hint' message box"
  },
  "windowIntro": {
    "defaultMessage": "Job Application",
    "description": "Window title for introduction ('job application') message box"
  },
  "windowMail": {
    "defaultMessage": "Electronic Mail",
    "description": "Window title for mail viewer message box"
  },
  "windowMenu": {
    "defaultMessage": "Main Menu",
    "description": "Window title for the main menu"
  },
  "windowOptions": {
    "defaultMessage": "Options",
    "description": "Window title for the general 'options' message box"
  },
  "windowSaveClear": {
    "defaultMessage": "Clear Data",
    "description": "Window title for the 'clear data' initial message box (only used on the web version)"
  },
  "windowSaveClearConfirm": {
    "defaultMessage": "Clear Data?",
    "description": "Window title of the 'clear save data' confirmation message box (only used on the web version)"
  },
  "windowSaveExport": {
    "defaultMessage": "Export Data",
    "description": "Title of the 'export save data' message box (only used on the web version)"
  },
  "windowSaveImport": {
    "defaultMessage": "Import Data",
    "description": "Title of the 'import save data' message box' (only used on the web version)"
  },
  "windowSaveManage": {
    "defaultMessage": "Manage Save Data",
    "description": "Window title for the 'manage save data' message box (only used on the web version)"
  },
  "windowSaveOverwrite": {
    "defaultMessage": "Overwrite Data?",
    "description": "Window title for the 'overwrite data when importing' confirmation message box (only used on web version)"
  },
  "windowTasks": {
    "defaultMessage": "Program Inventory",
    "description": "Window title for the 'program inventory' (shown when resuming and when selecting tasks)"
  },
  "windowTitleAvoision": {
    "defaultMessage": "Avoision",
    "description": "Window title for the Avoision message box"
  },
  "windowTitleConfirmDelete": {
    "defaultMessage": "Confirm Deletion",
    "description": "Title of 'confirm deletion' message box"
  },
  "windowTitleCredits": {
    "defaultMessage": "Credits",
    "description": "Window title for the 'credits' message box"
  },
  "windowTitleHalt": {
    "defaultMessage": "Program Halted",
    "description": "Window title for the message box that appears when a program halts"
  },
  "windowTitleLicenses": {
    "defaultMessage": "Licenses",
    "description": "Window title for the 'third party licenses' message box, showing copyright notices, etc."
  },
  "windowTitleNameExists": {
    "defaultMessage": "Name Already Exists",
    "description": "Title of 'name already exists' error message box"
  },
  "windowTitleNameInvalid": {
    "defaultMessage": "Invalid Name",
    "description": "Title of 'invalid name' error message box"
  },
  "windowTitleNoProgram": {
    "defaultMessage": "No Program",
    "description": "Window title for the message box that appears when attempting to run an empty program"
  },
  "windowTitlePresentationSettings": {
    "defaultMessage": "Presentation",
    "description": "Window title for the 'presentation settings' message box, which allows toggling full-screen, adjusting volume, etc."
  }
}
