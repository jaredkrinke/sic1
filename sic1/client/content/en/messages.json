{
  "achievementDescriptionAVOISION": {
    "defaultMessage": "Score at least 250 points in Avoision.",
    "description": "Description of the AVOISION achievement"
  },
  "achievementDescriptionERASE": {
    "defaultMessage": "Write a program that reads a single input and then deletes itself (sets all memory to zero), without producing output.",
    "description": "Description of the ERASE achievement"
  },
  "achievementDescriptionJOB_TITLE_1": {
    "defaultMessage": "Get promoted to Engineer.",
    "description": "Description of the JOB_TITLE_1 achievement"
  },
  "achievementDescriptionJOB_TITLE_2": {
    "defaultMessage": "Get promoted to Engineer II.",
    "description": "Description of the JOB_TITLE_2 achievement"
  },
  "achievementDescriptionJOB_TITLE_3": {
    "defaultMessage": "Get promoted to Senior Engineer.",
    "description": "Description of the JOB_TITLE_3 achievement"
  },
  "achievementDescriptionJOB_TITLE_4": {
    "defaultMessage": "Get promoted to Principal Engineer.",
    "description": "Description of the JOB_TITLE_4 achievement"
  },
  "achievementDescriptionJOB_TITLE_5": {
    "defaultMessage": "Get promoted to Partner Engineer.",
    "description": "Description of the JOB_TITLE_5 achievement"
  },
  "achievementDescriptionJOB_TITLE_6": {
    "defaultMessage": "Get promoted to Distinguished Engineer.",
    "description": "Description of the JOB_TITLE_6 achievement"
  },
  "achievementDescriptionJOB_TITLE_7": {
    "defaultMessage": "Get a new job title made just for you.",
    "description": "Description of the JOB_TITLE_7 achievement"
  },
  "achievementDescriptionJOB_TITLE_8": {
    "defaultMessage": "Obtain the final promotion.",
    "description": "Description of the JOB_TITLE_8 achievement"
  },
  "achievementDescriptionNEW_END": {
    "defaultMessage": "Share a true self-hosting program with an old friend.",
    "description": "Description of the NEW_END achievement"
  },
  "achievementDescriptionOMIT_SUBLEQ": {
    "defaultMessage": "Solve \"Addition\" without typing \"subleq\".",
    "description": "Description of the OMIT_SUBLEQ achievement"
  },
  "achievementDescriptionTIME_EARLY": {
    "defaultMessage": "Complete a task before 6am (06:00) local time.",
    "description": "Description of the TIME_EARLY achievement"
  },
  "achievementDescriptionTIME_LATE": {
    "defaultMessage": "Complete a task after 9pm (21:00) local time.",
    "description": "Description of the TIME_LATE achievement"
  },
  "achievementNameAVOISION": {
    "defaultMessage": "Master Avoider",
    "description": "Display name for the AVOISION achievement"
  },
  "achievementNameERASE": {
    "defaultMessage": "Self-Destruct",
    "description": "Display name for the ERASE achievement"
  },
  "achievementNameJOB_TITLE_1": {
    "defaultMessage": "Engineer",
    "description": "Display name for the JOB_TITLE_1 achievement"
  },
  "achievementNameJOB_TITLE_2": {
    "defaultMessage": "Engineer II",
    "description": "Display name for the JOB_TITLE_2 achievement"
  },
  "achievementNameJOB_TITLE_3": {
    "defaultMessage": "Senior Engineer",
    "description": "Display name for the JOB_TITLE_3 achievement"
  },
  "achievementNameJOB_TITLE_4": {
    "defaultMessage": "Principal Engineer",
    "description": "Display name for the JOB_TITLE_4 achievement"
  },
  "achievementNameJOB_TITLE_5": {
    "defaultMessage": "Partner Engineer",
    "description": "Display name for the JOB_TITLE_5 achievement"
  },
  "achievementNameJOB_TITLE_6": {
    "defaultMessage": "Distinguished Engineer",
    "description": "Display name for the JOB_TITLE_6 achievement"
  },
  "achievementNameJOB_TITLE_7": {
    "defaultMessage": "Special Promotion",
    "description": "Display name for the JOB_TITLE_7 achievement"
  },
  "achievementNameJOB_TITLE_8": {
    "defaultMessage": "Terminal Promotion",
    "description": "Display name for the JOB_TITLE_8 achievement"
  },
  "achievementNameNEW_END": {
    "defaultMessage": "To Be Continued",
    "description": "Display name for the NEW_END achievement"
  },
  "achievementNameOMIT_SUBLEQ": {
    "defaultMessage": "Zero Instruction Computer",
    "description": "Display name for the OMIT_SUBLEQ achievement"
  },
  "achievementNameTIME_EARLY": {
    "defaultMessage": "Up and at 'Em",
    "description": "Display name for the TIME_EARLY achievement"
  },
  "achievementNameTIME_LATE": {
    "defaultMessage": "Workin' Hard",
    "description": "Display name for the TIME_LATE achievement"
  },
  "achievementPopUpTitle": {
    "defaultMessage": "Achievement Unlocked",
    "description": "Title of the 'achievement unlocked' pop-up message"
  },
  "achievementProgressDetail": {
    "defaultMessage": "{achievedCount} of {achievementCount} ({percent})",
    "description": "Achievement progress expressed numerically"
  },
  "achievementProgressLine": {
    "defaultMessage": "Achievement Progress: {summary}",
    "description": "Line of text summarizing achievement progress"
  },
  "buttonAchievementsMenu": {
    "defaultMessage": "Achievements",
    "description": "Text shown on the button to open the achievements message box"
  },
  "buttonAvoisionPage": {
    "defaultMessage": "Avoision",
    "description": "Text on the button that opens the task viewer to the Avoision page"
  },
  "buttonCancel": {
    "defaultMessage": "Cancel",
    "description": "Text shown on various 'cancel' buttons when discarding changes to settings"
  },
  "buttonCommentBlock": {
    "defaultMessage": "Comment Block",
    "description": "Text on the 'comment block' button, which comments out the selected lines of program text"
  },
  "buttonCompile": {
    "defaultMessage": "Compile",
    "description": "Text on the 'compile' button, for compiling a program and loading it into the debugger"
  },
  "buttonConfigureInput": {
    "defaultMessage": "Configure Input",
    "description": "Text on the 'configure input' button, which supports editing input for Sandbox Mode"
  },
  "buttonCopyToClipboard": {
    "defaultMessage": "Copy to Clipboard",
    "description": "Text shown on the 'copy text to clipboard' button (only used on the web version)"
  },
  "buttonCredits": {
    "defaultMessage": "Credits",
    "description": "Text shown on the button to open the credits message box"
  },
  "buttonDisableAutoIndent": {
    "defaultMessage": "Disable Auto-Indent Mode",
    "description": "Text on the 'disable auto-indent mode' button, which toggles automatic insertion of indentation when adding a new line to the program text"
  },
  "buttonDisableTabInsertMode": {
    "defaultMessage": "Disable Tab Insert Mode",
    "description": "Text on the 'disable tab insert mode' button, which toggles the ability for the tab key to insert a tab character instead of the browser-default behavior of advancing keyboard focus to the next element"
  },
  "buttonEnableAutoIndent": {
    "defaultMessage": "Enable Auto-Indent Mode",
    "description": "Text on the 'enable auto-indent mode' button, which toggles automatic insertion of indentation when adding a new line to the program text"
  },
  "buttonEnableTabInsertMode": {
    "defaultMessage": "Enable Tab Insert Mode",
    "description": "Text on the 'enable tab insert mode' button, which toggles the ability for the tab key to insert a tab character instead of the browser-default behavior of advancing keyboard focus to the next element"
  },
  "buttonExit": {
    "defaultMessage": "Exit SIC-1",
    "description": "Text on the button that exits the game (only used on the app version)"
  },
  "buttonHelp": {
    "defaultMessage": "Help",
    "description": "Text on the 'help' button, which displays the help menu, providing hints and a link to the manual"
  },
  "buttonHelpMenu": {
    "defaultMessage": "Help",
    "description": "Text on the button that opens the 'help' menu'"
  },
  "buttonHint": {
    "defaultMessage": "Show Hint",
    "description": "Text on the button to show a hint for the current task"
  },
  "buttonIndentBlock": {
    "defaultMessage": "Indent Block",
    "description": "Tooltip for the 'indent block' button, which prepends one level of indentation to the selected lines of program text"
  },
  "buttonLicenses": {
    "defaultMessage": "click here",
    "description": "Text on the link to third party licenses"
  },
  "buttonManualAssembly": {
    "defaultMessage": "Open SIC-1 Assembly Manual",
    "description": "Text on the button to open the SIC-1 Assembly manual"
  },
  "buttonManualDevEnv": {
    "defaultMessage": "Open Dev. Environment Manual",
    "description": "Text on the button to open the SIC-1 Development Environment manual"
  },
  "buttonManualNewWindow": {
    "defaultMessage": "Open Combined Manual in New Window",
    "description": "Text on the button to open the combined manual in a new window"
  },
  "buttonMenu": {
    "defaultMessage": "Menu",
    "description": "Text on the 'menu' button, which opens the main menu"
  },
  "buttonMenuMailViewer": {
    "defaultMessage": "Electronic Mail",
    "description": "Text on the button to open the mail viewer (using an antiquated term, if possible)"
  },
  "buttonMenuTaskViewer": {
    "defaultMessage": "Program Inventory",
    "description": "Text on the button to open the task viewer/program inventory"
  },
  "buttonOptionsMenu": {
    "defaultMessage": "Options",
    "description": "Text on the button that opens the options menu'"
  },
  "buttonPause": {
    "defaultMessage": "Pause",
    "description": "Text on 'pause' button that pauses a running program"
  },
  "buttonPresentationSettings": {
    "defaultMessage": "Presentation Settings",
    "description": "Text on the button to open the 'presentation settings' menu, for editing fullscreen, sound, etc."
  },
  "buttonSandboxMenu": {
    "defaultMessage": "Sandbox Mode",
    "description": "Text on the button that opens the task viewer to the Sandbox Mode page"
  },
  "buttonSaveChanges": {
    "defaultMessage": "Save Changes",
    "description": "Text shown on multiple 'save changes' buttons when editing settings"
  },
  "buttonSaveClear": {
    "defaultMessage": "Clear Data",
    "description": "Text shown on the initial 'clear save data' button (only used on the web version)"
  },
  "buttonSaveClearCancel": {
    "defaultMessage": "No, Keep My Save Data",
    "description": "Text shown on the 'delete save data' cancellation button (only used on the web version)"
  },
  "buttonSaveClearConfirm": {
    "defaultMessage": "Yes, Delete My Save Data",
    "description": "Text shown on the 'delete save data' confirmation button (only used on the web version)"
  },
  "buttonSaveClearMenu": {
    "defaultMessage": "Clear Save Data",
    "description": "Text shown on the button to open the 'clear save data' message box (only used on the web version)"
  },
  "buttonSaveDataImport": {
    "defaultMessage": "Import Save Data",
    "description": "Text shown on the 'import save data' button"
  },
  "buttonSaveExportMenu": {
    "defaultMessage": "Export Save Data",
    "description": "Text on the button to open the 'export save data' message box (only used on the web version)"
  },
  "buttonSaveImportMenu": {
    "defaultMessage": "Import Save Data",
    "description": "Text on the button to open the 'import save data' message box (only used on the web version)"
  },
  "buttonSaveMenu": {
    "defaultMessage": "Manage Save Data",
    "description": "Text on the button to open the save data management menu (only used on the web version)"
  },
  "buttonSaveOverwriteConfirm": {
    "defaultMessage": "Yes, Overwrite My Save Data",
    "description": "Text shown on the 'yes, overwrite save data' confirmation button when importing save data (only used on the web version)"
  },
  "buttonStep": {
    "defaultMessage": "Step",
    "description": "Text on the 'step' button, for advancing the debugger one instruction"
  },
  "buttonStepRate4x": {
    "defaultMessage": "Turbo (4x)",
    "description": "Text on the 'run' button for increasing to 4x speed"
  },
  "buttonStepRate50x": {
    "defaultMessage": "Turbo (50x)",
    "description": "Text on the 'run' button for increasing to 50x speed"
  },
  "buttonStepRateDefault": {
    "defaultMessage": "Run",
    "description": "Text on the 'run' button when going to the default step rate (speed)"
  },
  "buttonStop": {
    "defaultMessage": "Stop",
    "description": "Text on the 'stop' button that stops a running program"
  },
  "buttonUncommentBlock": {
    "defaultMessage": "Uncomment Block",
    "description": "Text on the 'uncomment block' button, which comments the selected lines of program text"
  },
  "buttonUnindentBlock": {
    "defaultMessage": "Unindent Block",
    "description": "Text on the 'unindent block' button, which removes one level of indentation from the selected lines of program text"
  },
  "buttonUserSettingsMenu": {
    "defaultMessage": "User Settings",
    "description": "Text shown on the button to open the 'user settings' menu (only used on the web version)"
  },
  "chartFriendAvoision": {
    "defaultMessage": "Avoision High Scores",
    "description": "Title of friend leaderboard chart for Avoision high scores"
  },
  "chartFriendBytes": {
    "defaultMessage": "Bytes Read (Friends)",
    "description": "Title of friend leaderboard for 'bytes read'"
  },
  "chartFriendCycles": {
    "defaultMessage": "Cycles Executed (Friends)",
    "description": "Title of friend leaderboard for 'cycles executed'"
  },
  "chartFriendTasks": {
    "defaultMessage": "Completed Tasks (Friends)",
    "description": "Title of friend leaderboard chart for 'tasks completed'"
  },
  "chartTitleBytes": {
    "defaultMessage": "Bytes Read: {bytes}",
    "description": "Title for a 'bytes read' chart"
  },
  "chartTitleCycles": {
    "defaultMessage": "Cycles Executed: {cycles}",
    "description": "Title for a 'cycles executed' chart"
  },
  "chartTitleTasks": {
    "defaultMessage": "Completed Tasks",
    "description": "Title for the 'tasks completed' chart"
  },
  "checkboxFullscreen": {
    "defaultMessage": "Fullscreen:",
    "description": "Label for the 'fullscreen' checkbox toggle"
  },
  "checkboxMusicAfter": {
    "defaultMessage": "Enable music",
    "description": "Label for the music checkbox, when appearing after the checkbox"
  },
  "checkboxMusicBefore": {
    "defaultMessage": "Music",
    "description": "Label for music checkbox, when appearing before the checkbox"
  },
  "checkboxShareName": {
    "defaultMessage": "Show my name in public leaderboards (if unchecked, your statistics will be shown without a name)",
    "description": "Explanatory text for checkbox that opts into showing the player's name in public leaderboards"
  },
  "checkboxSoundEffectsAfter": {
    "defaultMessage": "Enable sound effects",
    "description": "Label for the sound effects checkbox, when appearing after the checkbox"
  },
  "checkboxSoundEffectsBefore": {
    "defaultMessage": "Sound effects",
    "description": "Label for sound effects checkbox, when appearing before the checkbox"
  },
  "colorSchemeAmber Phosphor": {
    "defaultMessage": "Amber Phosphor",
    "description": "Display name for the 'Amber Phosphor' color scheme"
  },
  "colorSchemeBlack on White": {
    "defaultMessage": "Black on White",
    "description": "Display name for the 'Black on White' color scheme"
  },
  "colorSchemeDefault": {
    "defaultMessage": "Default",
    "description": "Display name for the 'Default' color scheme"
  },
  "colorSchemeGreen Phosphor": {
    "defaultMessage": "Green Phosphor",
    "description": "Display name for the 'Green Phosphor' color scheme"
  },
  "colorSchemeWhite on Black": {
    "defaultMessage": "White on Black",
    "description": "Display name for the 'White on Black' color scheme"
  },
  "compilationErrorAddressRangeError": {
    "defaultMessage": "Invalid address argument: \"{argument}\" (must be an integer on the range [{rangeMin}, {rangeMax}])!",
    "description": "Error message shown when the 'address range error' compilation error is encountered, indicating an address literal isn't within the valid range"
  },
  "compilationErrorInternal": {
    "defaultMessage": "Internal compiler error!",
    "description": "Error message shown when there was an unknown internal compiler error, indicating a bug in the compiler--this should never happen"
  },
  "compilationErrorInvalidAddressExpressionError": {
    "defaultMessage": "Expected number literal or reference, but got: \"{token}\"!",
    "description": "Error message shown when the 'InvalidAddressExpressionError' compilation error is encountered, indicating an unexpected token was encountered where an address was expected"
  },
  "compilationErrorInvalidBreakpointError": {
    "defaultMessage": "Breakpoints are only supported on subleq instructions!",
    "description": "Error message shown when the 'InvalidBreakpointError' compilation error is encountered, indicating a breakpoint was set somewhere other than a 'subleq' instruction"
  },
  "compilationErrorInvalidCommandError": {
    "defaultMessage": "Unknown command: \"{command}\" (valid commands are: \"subleq\" and \".data\")!",
    "description": "Error message shown when the 'InvalidCommandError' compilation error is encountered, indicating a command other than 'subleq' and '.data' was encountered"
  },
  "compilationErrorInvalidDataArgumentCountError": {
    "defaultMessage": "Invalid number of arguments for \".data\": {count} (must have at least 1 argument)!",
    "description": "Error message shown when the 'InvalidDataArgumentCountError' compilation error is encountered, indicating no arguments were supplied for a '.data' directive"
  },
  "compilationErrorInvalidEscapeCodeError": {
    "defaultMessage": "Invalid escape code: \"{character}\"!",
    "description": "Error message shown when the 'InvalidEscapeCodeError' compilation error is encountered, indicating a character escape code was not valid, likely indicating an errant backslash"
  },
  "compilationErrorInvalidSubleqArgumentCountError": {
    "defaultMessage": "Invalid number of arguments for \"subleq\": {count} (must be between {rangeMin} and {rangeMax}, inclusive)!",
    "description": "Error message shown when the 'InvalidSubleqArgumentCountError' compilation error is encountered, indicating a 'subleq' instruction didn't have 2 or 3 addresses specified for it"
  },
  "compilationErrorInvalidTokenError": {
    "defaultMessage": "Invalid token: \"{token}\"!",
    "description": "Error message shown when the 'InvalidTokenError' compilation error is encountered, indicating an unrecognized token was encountered when parsing"
  },
  "compilationErrorInvalidValueExpressionError": {
    "defaultMessage": "Expected number, character, string, or reference, but got: \"{token}\"!",
    "description": "Error message shown when the 'InvalidValueExpressionError' compilation error is encountered, indicating an unrecognized value expression was encountered"
  },
  "compilationErrorLabelAlreadyDefinedError": {
    "defaultMessage": "Label already defined: \"{label}\"!",
    "description": "Error message shown when the 'LabelAlreadyDefinedError' compilation error is encountered, indicating a label was defined more than once"
  },
  "compilationErrorMissingCommaOrWhitespaceError": {
    "defaultMessage": "Whitespace or comma required before argument: \"{argument}\"",
    "description": "Error message shown when the 'MissingCommaOrWhitespaceError' compilation error is encountered, indicating there wasn't whitespace or a comma between arguments"
  },
  "compilationErrorMissingWhitespaceError": {
    "defaultMessage": "Whitespace is required after \"{command}\"!",
    "description": "Error message shown when the 'MissingWhitespaceError' compilation error is encountered, indicating there was no whitespace after a 'subleq' or '.data' command"
  },
  "compilationErrorProgramTooLargeError": {
    "defaultMessage": "Program is too long (maximum size: {rangeMax} bytes; program size: {bytes} bytes)!",
    "description": "Error message shown when the 'ProgramTooLargeError' compilation error is encountered, indicating the compiled program doesn't fit into 253 bytes"
  },
  "compilationErrorUndefinedReferenceError": {
    "defaultMessage": "Undefined reference: \"{label}\"!",
    "description": "Error message shown when the 'UndefinedReferenceError' compilation error is encountered, indicating a reference was made to an undeclared label"
  },
  "compilationErrorValueRangeError": {
    "defaultMessage": "Invalid value argument: {value} (must be an integer on the range [{rangeMin}, {rangeMax}])!",
    "description": "Error message shown when the 'ValueRangeError' compilation error is encountered, indicating a value didn't fit in a single signed byte"
  },
  "contactWithTitle": {
    "defaultMessage": "{name} ({title})",
    "description": "Display string for a contact when a job title should be shown along with the contact's name"
  },
  "contact_allName": {
    "defaultMessage": "All Engineering",
    "description": "Name for the 'all' contact in the story"
  },
  "contact_assistantName": {
    "defaultMessage": "Jeffrey Young",
    "description": "Name for the 'assistant' contact in the story"
  },
  "contact_assistantTitle": {
    "defaultMessage": "Executive Assistant",
    "description": "Job title for the 'assistant' contact in the story"
  },
  "contact_badManager2Name": {
    "defaultMessage": "Don Cooper",
    "description": "Name for the 'badManager2' contact in the story"
  },
  "contact_badManager2Title": {
    "defaultMessage": "Principal Engineering Lead",
    "description": "Job title for the 'badManager2' contact in the story"
  },
  "contact_badManagerName": {
    "defaultMessage": "Don Cooper",
    "description": "Name for the 'badManager' contact in the story"
  },
  "contact_badManagerTeamName": {
    "defaultMessage": "Don's Team",
    "description": "Name for the 'badManagerTeam' contact in the story"
  },
  "contact_badManagerTitle": {
    "defaultMessage": "Senior Engineering Lead",
    "description": "Job title for the 'badManager' contact in the story"
  },
  "contact_flunky1Name": {
    "defaultMessage": "Ted Philips",
    "description": "Name for the 'flunky1' contact in the story"
  },
  "contact_flunky1Title": {
    "defaultMessage": "Engineer",
    "description": "Job title for the 'flunky1' contact in the story"
  },
  "contact_flunkyName": {
    "defaultMessage": "Ted Philips",
    "description": "Name for the 'flunky' contact in the story"
  },
  "contact_flunkyTitle": {
    "defaultMessage": "Trainee",
    "description": "Job title for the 'flunky' contact in the story"
  },
  "contact_goodManager2Name": {
    "defaultMessage": "Pat Miller",
    "description": "Name for the 'goodManager2' contact in the story"
  },
  "contact_goodManagerName": {
    "defaultMessage": "Pat Miller",
    "description": "Name for the 'goodManager' contact in the story"
  },
  "contact_goodManagerTeamName": {
    "defaultMessage": "Pat's Team",
    "description": "Name for the 'goodManagerTeam' contact in the story"
  },
  "contact_goodManagerTitle": {
    "defaultMessage": "Senior Engineering Lead",
    "description": "Job title for the 'goodManager' contact in the story"
  },
  "contact_hrName": {
    "defaultMessage": "Mary Townsend",
    "description": "Name for the 'hr' contact in the story"
  },
  "contact_hrTitle": {
    "defaultMessage": "Human Resources",
    "description": "Job title for the 'hr' contact in the story"
  },
  "contact_mentorName": {
    "defaultMessage": "Feng Lee",
    "description": "Name for the 'mentor' contact in the story"
  },
  "contact_mentorTitle": {
    "defaultMessage": "Senior Engineer",
    "description": "Job title for the 'mentor' contact in the story"
  },
  "contact_onboardingName": {
    "defaultMessage": "SIC Systems Onboarding",
    "description": "Name for the 'onboarding' contact in the story"
  },
  "contact_otherSkipName": {
    "defaultMessage": "Jerin Kransky",
    "description": "Name for the 'otherSkip' contact in the story"
  },
  "contact_otherSkipTitle": {
    "defaultMessage": "Partner Engineering Manager",
    "description": "Job title for the 'otherSkip' contact in the story"
  },
  "contact_ownerName": {
    "defaultMessage": "Ilano Moscato",
    "description": "Name for the 'owner' contact in the story"
  },
  "contact_ownerTitle": {
    "defaultMessage": "Benevolent Dictator for Life",
    "description": "Job title for the 'owner' contact in the story"
  },
  "contact_skipName": {
    "defaultMessage": "Rick Wagner",
    "description": "Name for the 'skip' contact in the story"
  },
  "contact_skipTitle": {
    "defaultMessage": "Partner Engineering Manager",
    "description": "Job title for the 'skip' contact in the story"
  },
  "contact_taskManagementName": {
    "defaultMessage": "Automated Task Management",
    "description": "Name for the 'taskManagement' contact in the story"
  },
  "contentEditProfile": {
    "defaultMessage": "<p>Update your user profile as needed:</p><p>{form}</p><p>Note: if you would like to have all of your leaderboard data deleted, send an email to {email} with \"{userId}\" (your randomly-generated user id) in the subject.</p>",
    "description": "Markup shown when editing the user profile (only used on the web version)"
  },
  "contentHalt": {
    "defaultMessage": "<h3>Program Halted</h3><p>The program halted itself by branching to \"@HALT\" (address 255).</p>",
    "description": "Markup that is shown when a program halts"
  },
  "contentNoProgram": {
    "defaultMessage": "<h3>No Program Loaded!</h3><p>Please compile and load a program.</p>",
    "description": "Markup that is shown when attempting to run an empty program"
  },
  "contentSaveClearConfirm": {
    "defaultMessage": "<h3>WARNING</h3><p>This will delete ALL of your save data! All of your solutions, your user name, and achievements will be lost!</p><p>Are you sure you want to delete all of your data?</p>",
    "description": "Markup shown in the 'clear save data' confirmation message box (only used on the web version)"
  },
  "contentSaveOverwrite": {
    "defaultMessage": "<h3>WARNING</h3><p>This will overwrite ALL of your current save data with the imported save data!</p><p>Are you sure you want to overwrite any existing save data?</p>",
    "description": "Markup shown as a warning when overwriting save data during an import (only used on web version)"
  },
  "defaultName": {
    "defaultMessage": "Bill",
    "description": "Default user name (only used in web version)"
  },
  "errorNameExists": {
    "defaultMessage": "A solution named \"{name}\" already exists.",
    "description": "Error message for 'name already exists' error"
  },
  "errorNameInvalid": {
    "defaultMessage": "Solution names must be at most {maxLength} characters long, and only a single line.",
    "description": "Error message for 'invalid name' error"
  },
  "headerCompilationError": {
    "defaultMessage": "Compilation Error",
    "description": "Heading for 'compilation error' message box"
  },
  "headerIOOutput": {
    "defaultMessage": "Output",
    "description": "Column heading for the IO table, for output, when no expected output is prescribed, i.e. in Sandbox Mode (note: this string should be as short as possible)"
  },
  "headerInputActual": {
    "defaultMessage": "Actual",
    "description": "Column heading for the IO table, for actual output (note: this string should be as short as possible)"
  },
  "headerInputExpected": {
    "defaultMessage": "Expected",
    "description": "Column heading for the IO table, for expected output (note: this string should be as short as possible)"
  },
  "headerInputIn": {
    "defaultMessage": "In",
    "description": "Column heading for the IO table, for input (note: this string should be as short as possible)"
  },
  "headerStateMemory": {
    "defaultMessage": "Memory",
    "description": "Header for the 'memory' table, which shows the hexadecimal values of all 256 bytes of the emulator's memory"
  },
  "headerTestSet": {
    "defaultMessage": "Test {number}",
    "description": "Header for the IO table, indicating which test set is running"
  },
  "headerVariableLabel": {
    "defaultMessage": "Label (Address)",
    "description": "Header for the 'label' column of the variable/watch table, showing name/label and memory address of variables while debugging"
  },
  "headerVariableValue": {
    "defaultMessage": "Value",
    "description": "Header for the 'value' column of the variable/watch table, showing the value of variables while debugging"
  },
  "headingEditing": {
    "defaultMessage": "Editing Tools",
    "description": "Heading for the 'editing tools' panel, which contains buttons for modifying program text"
  },
  "headingProgress": {
    "defaultMessage": "Employee Statistics",
    "description": "Heading for 'task progress' and 'achievements' group in the program inventory/task selector window"
  },
  "intro": {
    "defaultMessage": "\r\n                <h3>Job Description:</h3>\r\n                <p>SIC Systems is looking for experienced programmers to join our team!</p>\r\n                <p>As an engineer at SIC Systems, you'll produce highly efficient programs for our flagship product: the Single Instruction Computer Mark 1 (SIC-1). You will be competing against other engineers to produce the fastest and smallest programs.</p>\r\n                <p>This is a full-time salaried role. The ideal candidate for this job will have a PhD and 15 - 20 years (or more) of industry experience, along with a relentless attention to detail and exemplary interpersonal skills. Scheduling flexibility is a plus, as we push toward our worldwide launch.</p>\r\n                <h3>About SIC Systems:</h3>\r\n                <p>SIC Systems is the world leader in single-instruction computing. Our mission is to simplify computation, and thus simplify the world. We are innovative, trustworthy, and ethical.</p>",
    "description": "HTML content shown in the introductory message box ('job application')"
  },
  "introApplyButton": {
    "defaultMessage": "Apply for the Job",
    "description": "Button text for the 'apply' button in the introductory form"
  },
  "introApplyInvitation": {
    "defaultMessage": "After completing the form above, click the button below to submit your job application:",
    "description": "Invitation to click the 'apply' button in the introductory form"
  },
  "introApplyLabel": {
    "defaultMessage": "Click the button below to submit your job application:",
    "description": "Label for the 'apply for the job' button on the introductory form"
  },
  "introHeaderJobApplication": {
    "defaultMessage": "Job Application:",
    "description": "Header text for the 'job application' form"
  },
  "introLabelName": {
    "defaultMessage": "Name:",
    "description": "Label for user name on the introductory form"
  },
  "jobTitle0": {
    "defaultMessage": "Trainee",
    "description": "Starting job title (during training/tutorial)"
  },
  "jobTitle1": {
    "defaultMessage": "Engineer",
    "description": "Initial engineering job title (after completing training/tutorial)"
  },
  "jobTitle2": {
    "defaultMessage": "Engineer II",
    "description": "Second engineering job title"
  },
  "jobTitle3": {
    "defaultMessage": "Senior Engineer",
    "description": "Third engineering job title"
  },
  "jobTitle4": {
    "defaultMessage": "Principal Engineer",
    "description": "Fourth engineering job title"
  },
  "jobTitle5": {
    "defaultMessage": "Partner Engineer",
    "description": "Fifth engineering job title"
  },
  "jobTitle6": {
    "defaultMessage": "Distinguished Engineer",
    "description": "Sixth engineering job title (noting distinguished accomplishments)"
  },
  "jobTitle7": {
    "defaultMessage": "Technical Fellow",
    "description": "Top engineering job title"
  },
  "jobTitle8": {
    "defaultMessage": "Technical Fellow Emeritus",
    "description": "Final job title (implying the person left the company after achieving the pinnacle of success)"
  },
  "labelStateBytes": {
    "defaultMessage": "Bytes",
    "description": "Label in the 'state' table for byte count (note: this string should be as short as possible)"
  },
  "labelStateCycles": {
    "defaultMessage": "Cycles",
    "description": "Label in the 'state' table for cycle count (note: this string should be as short as possible)"
  },
  "labelStateRunning": {
    "defaultMessage": "State",
    "description": "Label in the 'state' table for running vs. stopped (note: this string should be as short as possible)"
  },
  "labelWatchedAddress": {
    "defaultMessage": "Address {address}",
    "description": "Text shown in the 'variables' table for a manually watched address, i.e. an address the user manually highlighted"
  },
  "loadFailed": {
    "defaultMessage": "(load failed)",
    "description": "Text to show when an asynchronous load of a UI component failed"
  },
  "loading": {
    "defaultMessage": "(loading...)",
    "description": "Text to show while a portion of the UI is loading"
  },
  "mailS0_2Subject": {
    "defaultMessage": "Welcome to SIC Systems!",
    "description": "Subject line for story mail s0_2"
  },
  "mailViewerButtonContinueEditing": {
    "defaultMessage": "Continue Editing Current Program",
    "description": "Button text for the 'continue editing' button in the mail viewer"
  },
  "mailViewerButtonCredits": {
    "defaultMessage": "View Credits",
    "description": "Button text for the 'view credits' button in the mail viewer"
  },
  "mailViewerButtonNextTask": {
    "defaultMessage": "View Next Task",
    "description": "Button text for the 'view next task' button in the mail viewer"
  },
  "mailViewerButtonOpenManual": {
    "defaultMessage": "Open Manual In-Game",
    "description": "Button text for the 'open manual in-game' button in the mail viewer"
  },
  "mailViewerButtonOpenManualNewWindow": {
    "defaultMessage": "Open Manual in New Window",
    "description": "Button text for the 'open manual in new window' button in the mail viewer"
  },
  "mailViewerButtonSandbox": {
    "defaultMessage": "View Sandbox Mode",
    "description": "Button text for the 'view sandbox mode' button in the mail viewer"
  },
  "mailViewerButtonViewTask": {
    "defaultMessage": "View {taskName}",
    "description": "Button text for the 'view a specific task' button in the mail viewer"
  },
  "mailViewerExtraToLineIndent": {
    "defaultMessage": "{nbsp}{nbsp}{nbsp}{nbsp}{nbsp} ",
    "description": "Optional indent using {nbsp} non-breaking spaces to line up with 'from' line"
  },
  "mailViewerGroupUnread": {
    "defaultMessage": "Unread Mail",
    "description": "Group heading for 'unread mail' in the mail viewer"
  },
  "mailViewerHeadingRead": {
    "defaultMessage": "Read Mail",
    "description": "Mail viewer heading for mail that has already been read"
  },
  "mailViewerHeadingUnread": {
    "defaultMessage": "Inbox",
    "description": "Mail viewer heading for unread mail"
  },
  "mailViewerMailHeading": {
    "defaultMessage": "<cap>To</cap>:{nbsp}{nbsp} {to}{newline}<cap>From</cap>: {from}{newline}{newline}<cap>Subject</cap>: {subject}{newline}",
    "description": "Heading content markup shown in the mail viewer for a particular mail (optionally use {nbsp} non-breaking spaces to line up 'to' and 'from' lines); use {newline} at the end of each line"
  },
  "mailViewerTaskCompleted": {
    "defaultMessage": "Well done! Your program produced the correct output. Thanks for your contribution to SIC Systems!",
    "description": "Markup shown for a 'task completed successfully' mail, indicating the program was correct"
  },
  "mailViewerTaskSubject": {
    "defaultMessage": "RE: {taskName}",
    "description": "Subject line for task completion mails"
  },
  "mailViewerViewNextUnread": {
    "defaultMessage": "View Next Unread Mail",
    "description": "Button text for the 'view next unread mail' button in the mail viewer"
  },
  "mails0_2Content": {
    "defaultMessage": "<p>Congratulations, {selfName}! SIC Systems has accepted your job application.</p>\n<p>I'm Mary, and I'll be your human resources contact at the company.</p>\n<p>As you're no doubt aware, as a new trainee, you'll need to complete a few unpaid training tasks before you're instated as a full-time employee.</p>\n<p>You should have already received a couple of electronic mails from our automated onboarding system that you can review:</p>\n<ul>\n<li>The SIC-1 Reference Manual, which includes details on <code>subleq</code> and SIC-1 Assembly Language</li>\n<li>A guide to the SIC-1 Development Environment (including usage information, keyboard shortcuts, etc.)</li>\n</ul>\n<p>You can view these mails at any time in the electronic mail viewer, which can be opened using the main menu (which is accessed using the \"Menu\" button in the lower-left, or by pressing \"Esc\").</p>\n<p>All information is, of course, confidential and covered by the nondisclosure agreement you signed as a condition of employment.</p>\n<p>Please let me know if you have any other questions.</p>\n<p>Thank you!</p>\n<p>-Mary</p>",
    "description": "HTML content for story mail s0_2"
  },
  "puzzleCodeAddition": {
    "defaultMessage": "; Read two numbers and output their sum. Repeat.\n;\n; Below is the solution to the previous task. You will need to add additional code to perform addition of two inputs (instead of passing through a single input):\n\n@loop:\nsubleq @tmp, @IN\nsubleq @OUT, @tmp\nsubleq @tmp, @tmp, @loop  ; Reset @tmp to zero, and jump to @loop\n\n@tmp: .data 0\n",
    "description": "Initial code for the 'Addition' puzzle"
  },
  "puzzleCodeCharacters": {
    "defaultMessage": "; When configured properly, the SIC-1 supports natural human language input and output using a highly modern (c. 1967) mapping from numbers to characters known as ASCII. For example, 72 is mapped to \"H\" (capital \"h\").\n;\n; To capture the characters \"Hi\" (capital \"h\", lower case \"i\") in two variables, one could consult an ASCII lookup table and write:\n;\n;   @H: .data 72\n;   @i: .data 105\n;\n; Consulting an ASCII table is tedious, so to make SIC Systems engineers' lives easier, SIC-1 Assembly Language now supports automated ASCII lookup using the following advanced syntax (which is equivalent to explicitly specifying characters' mapped numbers):\n;\n;   @H: .data 'H' ; 72\n;   @i: .data 'i' ; 105\n;\n; As a final convenience, it is possible to negate the value of a character by prefixing the character literal with a minus:\n;\n;   @n_H: .data -'H' ; -72\n;\n; The following sample program outputs the characters \"Hi\":\n\nsubleq @OUT, @n_H ; Note: (0 - (-72) = 72 = 'H')\nsubleq @OUT, @n_i\n\n@n_H: .data -'H'\n@n_i: .data -'i'\n",
    "description": "Initial code for the 'Characters' puzzle"
  },
  "puzzleCodeData Directive and Looping": {
    "defaultMessage": "; Custom labels are defined by putting \"@name: \" at the beginning of a line, e.g.:\n;\n;   @loop: subleq 1, 2\n;\n; In addition to \"subleq\", there is an assembler directive \".data\" that sets a byte of memory to a value at compile time (note: this is not an instruction!):\n;\n;   .data X\n;\n; X is a signed byte between -128 and 127 (inclusive).\n;\n; Combining labels and the \".data\" directive allows you to develop a system of constants and variables. For example, here a byte is set to zero, and the label @zero points to that value:\n;\n;   @zero: .data 0\n;\n; Note that, while a program is executing, you can view the current value of each variable in the variable table on the right (under the memory table).\n;\n; Variables can be used for implementing an unconditional jump:\n;\n;   subleq @zero, @zero, @next\n;\n; This will set @zero to @zero - @zero (still zero) and, since the result is always <= 0, execution branches to @next.\n;\n; Below is an updated negation program that repeatedly negates input values and writes them out in a loop.\n\n@loop:\nsubleq @OUT, @IN\nsubleq @zero, @zero, @loop\n\n@zero: .data 0\n",
    "description": "Initial code for the 'Data Directive and Looping' puzzle"
  },
  "puzzleCodeDecimal Digits": {
    "defaultMessage": "; For this assignment, map each decimal digit character (e.g. '1') to the numeric value it represents (e.g. '1' -> 1). Inputs will be characters, but outputs are expected to be numbers.\n;\n; Keep in mind that the character '1' is not the same as the number 1. The ASCII mapping for '1' is actually 49.\n;\n; Also note that the ASCII mappings for '0', '1', '2', etc. are contiguous:\n;\n; '0' = 48\n; '1' = 49\n; '2' = 50\n; etc.\n\n",
    "description": "Initial code for the 'Decimal Digits' puzzle"
  },
  "puzzleCodeFirst Assessment": {
    "defaultMessage": "; Now that you understand the \"subleq\" instruction, the \".data\" directive, and labels, you should be able to read values from input and write the exact same values out, by negating the value twice.\n;\n; Below is an almost complete solution. You will need to replace instances of \"???\". Hint: use a label that points to a storage location for a (negated) value.\n\n@loop:\nsubleq ???, @IN\nsubleq @OUT, ???\nsubleq @tmp, @tmp, @loop  ; Reset @tmp to zero, and jump to @loop\n\n@tmp: .data 0\n",
    "description": "Initial code for the 'First Assessment' puzzle"
  },
  "puzzleCodeMulti-Line Strings": {
    "defaultMessage": "; New line characters (value 10) can be expressed with the character '\\n'. They can also be used in strings, for example: \"Line 1\\nLine 2\".\n;\n; Read a string with multiple lines and write out each line as a string.\n\n",
    "description": "Initial code for the 'Multi-Line Strings' puzzle"
  },
  "puzzleCodeParse Data Directives": {
    "defaultMessage": "; Parse a program with multiple .data directives and output the corresponding values.\n;\n; Each .data directive only has a single value on the range [-128, 127] (inclusive).\n\n",
    "description": "Initial code for the 'Parse Data Directives' puzzle"
  },
  "puzzleCodeParse Subleq Instructions": {
    "defaultMessage": "; Parse a program with multiple subleq instructions and output the compiled program.\n;\n; Each subleq instruction specifies 3 addresses, separated by spaces (' '). The addresses are on the range [0, 255] (inclusive).\n;\n; Note that the unsigned (nonnegative) addresses will be written out as signed values on the range [-128, 127] (also inclusive). For example, 255 becomes -1, 254 becomes -2, ..., 128 becomes -128, but 127 and below are unchanged.\n\n",
    "description": "Initial code for the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleCodeSelf-Hosting": {
    "defaultMessage": "; Parse a program containing .data directives and subleq instructions, then execute that program.\n;\n; All addresses used by the input program should be isolated from your program's address space.\n;\n; As in any other program, if the program writes to address 254 (@OUT; signed value: -2), that value should be directly written out.\n;\n; If the program branches to address 255 (@HALT; signed value: -1), then the program is done. Start over from scratch with the next input program.\n;\n; The compiled size of each input program is <= 21 bytes.\n;\n; As in previous tasks, the .data directive will always have exactly 1 value and subleq instructions will specify exactly 3 addresses (separated by spaces only).\n;\n; Additionally, the input programs will not use self-modifying code or declare/use any labels or variables. The only built-in addresses that will be used will be referenced by address instead of label (e.g. \"254\" will be used but \"@OUT\" will not).\n\n",
    "description": "Initial code for the 'Self-Hosting' puzzle"
  },
  "puzzleCodeSelf-Hosting Part 2": {
    "defaultMessage": "; Parse a self-modifying program containing .data directives and subleq instructions, then execute that program.\n;\n; Writes to address @OUT should be directly written out. If the program branches to address @HALT, then the program is done. Start over from scratch with the next input program.\n;\n; The compiled size of each input program is <= 21 bytes.\n;\n; As in previous tasks, the .data directive will always have exactly 1 value and subleq instructions will specify exactly 3 addresses (separated by spaces only) and no labels will be used.\n\n",
    "description": "Initial code for the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleCodeSelf-Modifying Code": {
    "defaultMessage": "; Label expressions can include an optional offset. For example, @loop+1 refers to the second byte of the instruction pointed to by @loop:\n;\n;   subleq @loop+1, @one\n;\n; This is useful in self-modifying code. Remember, each \"subleq\" instruction is stored as 3 consecutive addresses, ABC:\n;\n; mem[A] ← mem[A] - mem[B], with a branch to C if the result is less than or equal to zero.\n;\n; The sample program below reads its own compiled code. The third instruction is an example of self-modifying code because it actually modifies the first instruction. Specifically, it increments the first instruction's second address (@loop+1). This causes the *next* loop iteration's first instruction to read the *next* byte of memory (0, 1, 2, 3, ...).\n;\n; Note: When running a program, the original (unmodified) source code is always shown. If the program modifies itself, the changes are reflected in the memory table in the top right, but *not* in the source code viewer.\n\n@loop:\nsubleq @tmp, 0           ; Second address (initially zero) will be incremented\nsubleq @OUT, @tmp        ; Output the value\nsubleq @loop+1, @n_one   ; Here is where the increment is performed\nsubleq @tmp, @tmp, @loop\n\n@tmp: .data 0\n@n_one: .data -1\n",
    "description": "Initial code for the 'Self-Modifying Code' puzzle"
  },
  "puzzleCodeStack Memory": {
    "defaultMessage": "; This program implements a last-in, first-out stack by modifying the read and write addresses of the instructions that interact with the stack.\n;\n; The program pushes 3 (defined by @count) input values onto the stack and then pops them off (outputting them in reverse order).\n\n; The first address of this instruction (which starts pointing to @stack) will be incremented with each write to the stack\n\n@stack_push:\nsubleq @stack, @IN\nsubleq @count, @one, @prepare_to_pop\n\n; Modify the instruction at @stack_push (increment target address)\nsubleq @stack_push, @n_one\nsubleq @tmp, @tmp, @stack_push\n\n; Prepare to start popping values off of the stack by copying the current stack position to @stack_pop+1\n@prepare_to_pop:\nsubleq @tmp, @stack_push\nsubleq @stack_pop+1, @tmp\n\n; Read a value from the stack (note: the second address of this instruction is repeatedly decremented)\n@stack_pop:\nsubleq @OUT, 0\n\n; Decrement stack address in the instruction at @stack_pop\nsubleq @stack_pop+1, @one\nsubleq @tmp, @tmp, @stack_pop\n\n; Constants\n@one: .data 1\n@n_one: .data -1\n\n; Variables\n@tmp: .data 0\n@count: .data 3\n\n; Address of @stack (defined below)\n@stack_address: .data @stack\n\n; Base of stack (stack will grow to larger addresses, so no variables should be placed after this one)\n@stack: .data 0\n",
    "description": "Initial code for the 'Stack Memory' puzzle"
  },
  "puzzleCodeStrings": {
    "defaultMessage": "; Strings are sequences of characters that are terminated with a zero. In the following example, @string points to a 3 byte sequence representing the string \"Hi\":\n;\n;   @string:\n;   .data 'H'\n;   .data 'i'\n;   .data 0\n;\n; Although not discussed previously, the .data directive can actually take a sequence of values to set multiple bytes, so the previous code could be simplified:\n;\n;   @string: .data 'H', 'i', 0\n;\n; And thanks to the innovative design-by-committee approach employed by SIC Systems, the following novel syntax for strings can be used (again, equivalent to the other examples):\n;\n;   @string: .data \"Hi\" ; Sets the next 3 bytes: 'H', 'i', 0\n;\n; Similar to character values, an entire string can be negated by prefixing it with a minus:\n;\n;   @n_string: .data -\"Hi\" ; Sets the next 3 bytes: -72, -105, 0\n;\n; The following code outputs \"Hello, world!\":\n\n@loop:\nsubleq @OUT, @n_message  ; Read address starts at @n_message\nsubleq @loop+1, @n_one   ; Advance read address\nsubleq @tmp, @tmp, @loop\n\n@n_one: .data -1\n@n_message: .data -\"Hello, world!\"\n@tmp: .data 0\n",
    "description": "Initial code for the 'Strings' puzzle"
  },
  "puzzleCodeSubleq Instruction and Output": {
    "defaultMessage": "; The Single Instruction Computer Mark 1 (SIC-1) is an 8-bit computer with 256 bytes of memory. Programs for the SIC-1 are written in SIC-1 Assembly Language.\n;\n; Each instruction is 3 bytes, specified as follows:\n;\n;   subleq A B [C]\n;\n; A, B, and C are memory addresses (0 - 255) or labels.\n;\n; \"subleq\" subtracts the value at address B from the value at address A and stores the result at address A (i.e. mem[A] ← mem[A] - mem[B]).\n;\n; If the result is <= 0, execution branches to address C.\n;\n; Note that if C is not specified, the address of the next instruction is automatically added by the assembler (in effect, this means that taking the branch is no different from advancing to the next instruction).\n;\n; For convenience, addresses can be specified using labels. The following predefined labels are always available:\n;\n;   @MAX (252): Maximum user-modifiable address\n;   @IN (253): Reads a value from input (writes are ignored)\n;   @OUT (254): Writes a result to output (reads as zero)\n;   @HALT (255): Terminates the program when accessed\n;\n; Note: any text following a semicolon is considered a comment. Comments are ignored by the assembler.\n; \n; Below is a very simple SIC-1 program that negates one input value and writes it out.\n;\n; E.g. if the input value from @IN is 3, it subtracts 3 from @OUT (which reads as zero), and the result of 0 - 3 = -3 is written out.\n\nsubleq @OUT, @IN\n\n; Use the \"Compile/Step\" (Ctrl+.) and \"Run\" (Ctrl+Enter) buttons to execute the program until all expected outputs have been successfully written out (see the \"In\"/\"Expected\"/\"Out\" table to the left).\n    ",
    "description": "Initial code for the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleCodeTokenizer": {
    "defaultMessage": "; Read a string and output each word as its own string. Repeat.\n;\n; Note: words are each separated by a single space (and the last word ends with a zero).\n\n",
    "description": "Initial code for the 'Tokenizer' puzzle"
  },
  "puzzleCodeUppercase": {
    "defaultMessage": "; Read and output characters. For each alphabetic character, convert it to uppercase if needed.\n;\n; Note that the mappings for 'a', 'b', ... 'z' are contiguous, as are 'A', 'B', ... 'Z'.\n\n",
    "description": "Initial code for the 'Uppercase' puzzle"
  },
  "puzzleDescriptionAddition": {
    "defaultMessage": "Read two numbers and output their sum. Repeat.",
    "description": "Description of the 'Addition' puzzle"
  },
  "puzzleDescriptionCalculator": {
    "defaultMessage": "Read a string representing arithmetic (+, -, or *) on 2 numbers on the interval [1, 127]; write out the resulting value. Repeat.",
    "description": "Description of the 'Calculator' puzzle"
  },
  "puzzleDescriptionCharacters": {
    "defaultMessage": "Output the following two characters: \"Hi\"",
    "description": "Description of the 'Characters' puzzle"
  },
  "puzzleDescriptionData Directive and Looping": {
    "defaultMessage": "Use .data and labels to loop.",
    "description": "Description of the 'Data Directive and Looping' puzzle"
  },
  "puzzleDescriptionDecimal Digits": {
    "defaultMessage": "Read a decimal digit character, output the numeric value. Repeat.",
    "description": "Description of the 'Decimal Digits' puzzle"
  },
  "puzzleDescriptionDivision": {
    "defaultMessage": "Read two positive numbers (A, then B), divide A by B, and output the quotient followed by the remainder. Repeat.",
    "description": "Description of the 'Division' puzzle"
  },
  "puzzleDescriptionFirst Assessment": {
    "defaultMessage": "Write input values to output.",
    "description": "Description of the 'First Assessment' puzzle"
  },
  "puzzleDescriptionIndicator Function": {
    "defaultMessage": "Read two zero-terminated sets of numbers on the interval [1, 99], A and B. For each element of B, output a 1 if the value is in A and 0 otherwise. Repeat.",
    "description": "Description of the 'Indicator Function' puzzle"
  },
  "puzzleDescriptionInterleave": {
    "defaultMessage": "Read two equal length positive sequences (A and B) and interleave their elements (A1, B1, A2, B2, ...), ending with a single zero. Repeat.",
    "description": "Description of the 'Interleave' puzzle"
  },
  "puzzleDescriptionMode": {
    "defaultMessage": "Read a list of numbers on the interval [1, 99] (terminated by a zero) and output the most common element. Repeat.",
    "description": "Description of the 'Mode' puzzle"
  },
  "puzzleDescriptionMulti-Line Strings": {
    "defaultMessage": "Read a string with multiple lines and write out each line as a string.",
    "description": "Description of the 'Multi-Line Strings' puzzle"
  },
  "puzzleDescriptionMultiplication": {
    "defaultMessage": "Read two nonnegative numbers and output the resulting (nonnegative) product. Repeat.",
    "description": "Description of the 'Multiplication' puzzle"
  },
  "puzzleDescriptionNumber to Sequence": {
    "defaultMessage": "Read a number and then output that many 1s, followed by a 0. Repeat.",
    "description": "Description of the 'Number to Sequence' puzzle"
  },
  "puzzleDescriptionParse Data Directives": {
    "defaultMessage": "Parse a program with multiple .data directives and output the corresponding values.",
    "description": "Description of the 'Parse Data Directives' puzzle"
  },
  "puzzleDescriptionParse Decimal": {
    "defaultMessage": "Read a string representing a number on the interval [1, 127] and output the corresponding value. Repeat.",
    "description": "Description of the 'Parse Decimal' puzzle"
  },
  "puzzleDescriptionParse Subleq Instructions": {
    "defaultMessage": "Parse a program with multiple subleq instructions and output the compiled program.",
    "description": "Description of the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleDescriptionPrint Decimal": {
    "defaultMessage": "Read a positive number on the interval [1, 127] and output a string representing the number in decimal form. Repeat.",
    "description": "Description of the 'Print Decimal' puzzle"
  },
  "puzzleDescriptionReverse Sequence": {
    "defaultMessage": "Read a sequence of positive numbers (terminated by a zero) and output the sequence in reverse order (with zero terminator). Repeat.",
    "description": "Description of the 'Reverse Sequence' puzzle"
  },
  "puzzleDescriptionSelf-Hosting": {
    "defaultMessage": "Read in a SIC-1 program and execute it until it branches to address 255, writing out any values written to address 254. Repeat.",
    "description": "Description of the 'Self-Hosting' puzzle"
  },
  "puzzleDescriptionSelf-Hosting Part 2": {
    "defaultMessage": "Read in a self-modifying SIC-1 program and execute it until it branches to address 255, writing out any values written to address 254. Repeat.",
    "description": "Description of the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleDescriptionSelf-Modifying Code": {
    "defaultMessage": "Output the program's compiled code byte-by-byte.",
    "description": "Description of the 'Self-Modifying Code' puzzle"
  },
  "puzzleDescriptionSequence Cardinality": {
    "defaultMessage": "Read a sequence of positive numbers and output the count of numbers. Repeat. Sequences are terminated by a zero.",
    "description": "Description of the 'Sequence Cardinality' puzzle"
  },
  "puzzleDescriptionSequence Sum": {
    "defaultMessage": "Read a sequence of positive numbers and output their sum. Repeat. Sequences are terminated by a zero.",
    "description": "Description of the 'Sequence Sum' puzzle"
  },
  "puzzleDescriptionSign Function": {
    "defaultMessage": "Read a number. If less than zero, output -1; if equal to zero, output 0; otherwise output 1. Repeat.",
    "description": "Description of the 'Sign Function' puzzle"
  },
  "puzzleDescriptionSort": {
    "defaultMessage": "Read a list of numbers on the interval [1, 99] (terminated by a zero) and output the list ordered smallest to largest, ending with a zero. Repeat.",
    "description": "Description of the 'Sort' puzzle"
  },
  "puzzleDescriptionStack Memory": {
    "defaultMessage": "Read 3 values from input and then output the values in reverse order.",
    "description": "Description of the 'Stack Memory' puzzle"
  },
  "puzzleDescriptionStrings": {
    "defaultMessage": "Output the string \"Hello, world!\".",
    "description": "Description of the 'Strings' puzzle"
  },
  "puzzleDescriptionSubleq Instruction and Output": {
    "defaultMessage": "Use subleq and input/output to negate an input and write it out.",
    "description": "Description of the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleDescriptionSubtraction": {
    "defaultMessage": "Read two numbers (A, then B) and output A minus B. Repeat.",
    "description": "Description of the 'Subtraction' puzzle"
  },
  "puzzleDescriptionTokenizer": {
    "defaultMessage": "Read a string and output each word as its own string. Repeat.",
    "description": "Description of the 'Tokenizer' puzzle"
  },
  "puzzleDescriptionUppercase": {
    "defaultMessage": "Read and output characters, converting all lowercase characters to uppercase.",
    "description": "Description of the 'Uppercase' puzzle"
  },
  "puzzleGroupTitleAdvanced Techniques": {
    "defaultMessage": "Advanced Techniques",
    "description": "Title of 'Advanced Techniques' puzzle group"
  },
  "puzzleGroupTitleArithmetic": {
    "defaultMessage": "Arithmetic",
    "description": "Title of 'Arithmetic' puzzle group"
  },
  "puzzleGroupTitleNatural Language Processing": {
    "defaultMessage": "Natural Language Processing",
    "description": "Title of 'Natural Language Processing' puzzle group"
  },
  "puzzleGroupTitleSelf-Hosting": {
    "defaultMessage": "Self-Hosting",
    "description": "Title of 'Self-Hosting' puzzle group"
  },
  "puzzleGroupTitleSequence Manipulation": {
    "defaultMessage": "Sequence Manipulation",
    "description": "Title of 'Sequence Manipulation' puzzle group"
  },
  "puzzleGroupTitleSequences": {
    "defaultMessage": "Sequences",
    "description": "Title of 'Sequences' puzzle group"
  },
  "puzzleGroupTitleTutorial": {
    "defaultMessage": "Tutorial",
    "description": "Title of 'Tutorial' puzzle group"
  },
  "puzzleHintAddition": {
    "defaultMessage": "<p>Subtract two inputs into <code>@tmp</code>.</p>",
    "description": "Hint for the 'Addition' puzzle"
  },
  "puzzleHintCalculator": {
    "defaultMessage": "<p>Combine the solutions to \"Addition\", \"Subtraction\", \"Multiplication\", and \"Parse Decimal\".</p>",
    "description": "Hint for the 'Calculator' puzzle"
  },
  "puzzleHintCharacters": {
    "defaultMessage": "<p>This task has already been solved, but note how character literals are used (and negated).</p>",
    "description": "Hint for the 'Characters' puzzle"
  },
  "puzzleHintData Directive and Looping": {
    "defaultMessage": "<p>This task has already been solved. Just click <strong>Run</strong>.</p>",
    "description": "Hint for the 'Data Directive and Looping' puzzle"
  },
  "puzzleHintDecimal Digits": {
    "defaultMessage": "<p>Subtract the character literal <code>''0''</code>.</p>",
    "description": "Hint for the 'Decimal Digits' puzzle"
  },
  "puzzleHintDivision": {
    "defaultMessage": "<p>Repeatedly subtract the divisor from the dividend.</p>",
    "description": "Hint for the 'Division' puzzle"
  },
  "puzzleHintFirst Assessment": {
    "defaultMessage": "<p>Negate the value twice (these operations cancel out and result in the original number). This can be done by storing the negated value in a memory location that starts out as zero (e.g. <code>@tmp</code>).</p>",
    "description": "Hint for the 'First Assessment' puzzle"
  },
  "puzzleHintIndicator Function": {
    "defaultMessage": "<p>Store the first list for later lookup. Remember to clear the list afterwards.</p>",
    "description": "Hint for the 'Indicator Function' puzzle"
  },
  "puzzleHintInterleave": {
    "defaultMessage": "<p>Store the first list for later output. Remember to clear the list afterwards.</p>",
    "description": "Hint for the 'Interleave' puzzle"
  },
  "puzzleHintMode": {
    "defaultMessage": "<p>Track both the items, as well as their count.</p>",
    "description": "Hint for the 'Mode' puzzle"
  },
  "puzzleHintMulti-Line Strings": {
    "defaultMessage": "<p>This task is very similar to Tokenizer.</p>",
    "description": "Hint for the 'Multi-Line Strings' puzzle"
  },
  "puzzleHintMultiplication": {
    "defaultMessage": "<p>Repeatedly subtract one of the numbers, using a counter to ensure the subtraction is done the appropriate number of times.</p>",
    "description": "Hint for the 'Multiplication' puzzle"
  },
  "puzzleHintNumber to Sequence": {
    "defaultMessage": "<p>Use a counter to write the appropriate number of <strong>1</strong>s.</p>",
    "description": "Hint for the 'Number to Sequence' puzzle"
  },
  "puzzleHintParse Data Directives": {
    "defaultMessage": "<p>This task is similar to \"Parse Decimal\", but negative numbers need to be handled.</p>",
    "description": "Hint for the 'Parse Data Directives' puzzle"
  },
  "puzzleHintParse Decimal": {
    "defaultMessage": "<p>Shifting left one decimal digit is the same as multiplying by ten.</p>",
    "description": "Hint for the 'Parse Decimal' puzzle"
  },
  "puzzleHintParse Subleq Instructions": {
    "defaultMessage": "<p>This task is very similar to \"Parse Decimal\".</p>",
    "description": "Hint for the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleHintPrint Decimal": {
    "defaultMessage": "<p>Remember to output digits from most significant to least.</p>",
    "description": "Hint for the 'Print Decimal' puzzle"
  },
  "puzzleHintReverse Sequence": {
    "defaultMessage": "<p>Use a stack, and remember to clear the stack afterwards.</p>",
    "description": "Hint for the 'Reverse Sequence' puzzle"
  },
  "puzzleHintSelf-Hosting": {
    "defaultMessage": "<p>Use previous decimal-parsing solutions to compile the program, but take care to follow the instructions precisely.</p>",
    "description": "Hint for the 'Self-Hosting' puzzle"
  },
  "puzzleHintSelf-Hosting Part 2": {
    "defaultMessage": "<p>You're on your own for this one.</p>",
    "description": "Hint for the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleHintSelf-Modifying Code": {
    "defaultMessage": "<p>This task has already been solved, but carefully note how the second byte of the first instruction is modified.</p>",
    "description": "Hint for the 'Self-Modifying Code' puzzle"
  },
  "puzzleHintSequence Cardinality": {
    "defaultMessage": "<p>Increment a counter for each element in the sequence.</p>",
    "description": "Hint for the 'Sequence Cardinality' puzzle"
  },
  "puzzleHintSequence Sum": {
    "defaultMessage": "<p>Store the value to test whether it indicates the end of the sequence.</p>",
    "description": "Hint for the 'Sequence Sum' puzzle"
  },
  "puzzleHintSign Function": {
    "defaultMessage": "<p>Use the \"branch if result is <= 0\" property of subleq to branch between code blocks, then use (negated) constants to write the appropriate output.</p>",
    "description": "Hint for the 'Sign Function' puzzle"
  },
  "puzzleHintSort": {
    "defaultMessage": "<p>Insert items into memory in the correct position.</p>",
    "description": "Hint for the 'Sort' puzzle"
  },
  "puzzleHintStack Memory": {
    "defaultMessage": "<p>This task has already been solved, but carefully watch the memory window to see how items are added to the stack.</p>",
    "description": "Hint for the 'Stack Memory' puzzle"
  },
  "puzzleHintStrings": {
    "defaultMessage": "<p>This task has already been solved, but note that strings are terminated by a zero.</p>",
    "description": "Hint for the 'Strings' puzzle"
  },
  "puzzleHintSubleq Instruction and Output": {
    "defaultMessage": "<p>This task has already been solved. Just click <strong>Run</strong>.</p>",
    "description": "Hint for the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleHintSubtraction": {
    "defaultMessage": "<p>Use two variables.</p>",
    "description": "Hint for the 'Subtraction' puzzle"
  },
  "puzzleHintTokenizer": {
    "defaultMessage": "<p>Strings are terminated by a single zero.</p>",
    "description": "Hint for the 'Tokenizer' puzzle"
  },
  "puzzleHintUppercase": {
    "defaultMessage": "<p>Test to see if the input is between \"a\" and \"z\", and modify the value as needed.</p>",
    "description": "Hint for the 'Uppercase' puzzle"
  },
  "puzzleTitleAddition": {
    "defaultMessage": "Addition",
    "description": "Title of the 'Addition' puzzle"
  },
  "puzzleTitleCalculator": {
    "defaultMessage": "Calculator",
    "description": "Title of the 'Calculator' puzzle"
  },
  "puzzleTitleCharacters": {
    "defaultMessage": "Characters",
    "description": "Title of the 'Characters' puzzle"
  },
  "puzzleTitleData Directive and Looping": {
    "defaultMessage": "Data Directive and Looping",
    "description": "Title of the 'Data Directive and Looping' puzzle"
  },
  "puzzleTitleDecimal Digits": {
    "defaultMessage": "Decimal Digits",
    "description": "Title of the 'Decimal Digits' puzzle"
  },
  "puzzleTitleDivision": {
    "defaultMessage": "Division",
    "description": "Title of the 'Division' puzzle"
  },
  "puzzleTitleFirst Assessment": {
    "defaultMessage": "First Assessment",
    "description": "Title of the 'First Assessment' puzzle"
  },
  "puzzleTitleIndicator Function": {
    "defaultMessage": "Indicator Function",
    "description": "Title of the 'Indicator Function' puzzle"
  },
  "puzzleTitleInterleave": {
    "defaultMessage": "Interleave",
    "description": "Title of the 'Interleave' puzzle"
  },
  "puzzleTitleMode": {
    "defaultMessage": "Mode",
    "description": "Title of the 'Mode' puzzle"
  },
  "puzzleTitleMulti-Line Strings": {
    "defaultMessage": "Multi-Line Strings",
    "description": "Title of the 'Multi-Line Strings' puzzle"
  },
  "puzzleTitleMultiplication": {
    "defaultMessage": "Multiplication",
    "description": "Title of the 'Multiplication' puzzle"
  },
  "puzzleTitleNumber to Sequence": {
    "defaultMessage": "Number to Sequence",
    "description": "Title of the 'Number to Sequence' puzzle"
  },
  "puzzleTitleParse Data Directives": {
    "defaultMessage": "Parse Data Directives",
    "description": "Title of the 'Parse Data Directives' puzzle"
  },
  "puzzleTitleParse Decimal": {
    "defaultMessage": "Parse Decimal",
    "description": "Title of the 'Parse Decimal' puzzle"
  },
  "puzzleTitleParse Subleq Instructions": {
    "defaultMessage": "Parse Subleq Instructions",
    "description": "Title of the 'Parse Subleq Instructions' puzzle"
  },
  "puzzleTitlePrint Decimal": {
    "defaultMessage": "Print Decimal",
    "description": "Title of the 'Print Decimal' puzzle"
  },
  "puzzleTitleReverse Sequence": {
    "defaultMessage": "Reverse Sequence",
    "description": "Title of the 'Reverse Sequence' puzzle"
  },
  "puzzleTitleSelf-Hosting": {
    "defaultMessage": "Self-Hosting",
    "description": "Title of the 'Self-Hosting' puzzle"
  },
  "puzzleTitleSelf-Hosting Part 2": {
    "defaultMessage": "Self-Hosting Part 2",
    "description": "Title of the 'Self-Hosting Part 2' puzzle"
  },
  "puzzleTitleSelf-Modifying Code": {
    "defaultMessage": "Self-Modifying Code",
    "description": "Title of the 'Self-Modifying Code' puzzle"
  },
  "puzzleTitleSequence Cardinality": {
    "defaultMessage": "Sequence Cardinality",
    "description": "Title of the 'Sequence Cardinality' puzzle"
  },
  "puzzleTitleSequence Sum": {
    "defaultMessage": "Sequence Sum",
    "description": "Title of the 'Sequence Sum' puzzle"
  },
  "puzzleTitleSign Function": {
    "defaultMessage": "Sign Function",
    "description": "Title of the 'Sign Function' puzzle"
  },
  "puzzleTitleSort": {
    "defaultMessage": "Sort",
    "description": "Title of the 'Sort' puzzle"
  },
  "puzzleTitleStack Memory": {
    "defaultMessage": "Stack Memory",
    "description": "Title of the 'Stack Memory' puzzle"
  },
  "puzzleTitleStrings": {
    "defaultMessage": "Strings",
    "description": "Title of the 'Strings' puzzle"
  },
  "puzzleTitleSubleq Instruction and Output": {
    "defaultMessage": "Subleq Instruction and Output",
    "description": "Title of the 'Subleq Instruction and Output' puzzle"
  },
  "puzzleTitleSubtraction": {
    "defaultMessage": "Subtraction",
    "description": "Title of the 'Subtraction' puzzle"
  },
  "puzzleTitleTokenizer": {
    "defaultMessage": "Tokenizer",
    "description": "Title of the 'Tokenizer' puzzle"
  },
  "puzzleTitleUppercase": {
    "defaultMessage": "Uppercase",
    "description": "Title of the 'Uppercase' puzzle"
  },
  "rank": {
    "defaultMessage": "Rank: {ranking}",
    "description": "Current ranking of the player"
  },
  "rankOutOf": {
    "defaultMessage": "{rank} out of {total}",
    "description": "Actual ranking value (out of total)"
  },
  "selectColorScheme": {
    "defaultMessage": "Color scheme:",
    "description": "Label for the 'color scheme' dropdown menu"
  },
  "sliderMusicVolume": {
    "defaultMessage": "Music volume:",
    "description": "Label for the 'music volume' slider"
  },
  "sliderSoundVolume": {
    "defaultMessage": "Sound effects volume:",
    "description": "Label for the 'sound effects volume' slider"
  },
  "sliderZoom": {
    "defaultMessage": "Zoom:",
    "description": "Label for the text size slider"
  },
  "solutionButtonCancelDelete": {
    "defaultMessage": "Cancel",
    "description": "Text on the 'cancel' button when trying to delete an item in the solution manager"
  },
  "solutionButtonConfirmDelete": {
    "defaultMessage": "Delete",
    "description": "Text on 'delete' button to confirm deletion in the solution manager"
  },
  "solutionNameDefault": {
    "defaultMessage": "Untitled",
    "description": "Default name for new solution files"
  },
  "solutionStatsSuffix": {
    "defaultMessage": " (cycles: {cycles}, bytes: {bytes})",
    "description": "Formatted statistics that are appended to a solution title, for reference (note the leading space)"
  },
  "stateStatusRunning": {
    "defaultMessage": "Running",
    "description": "Text shown for the simulation 'state' shown in the lower-left, when running"
  },
  "stateStatusStopped": {
    "defaultMessage": "Stopped",
    "description": "Text shown for the simulation 'state' shown in the lower-left, when stopped"
  },
  "taskAchievements": {
    "defaultMessage": "Achievements",
    "description": "Title of the 'achievements' item in the program inventory/task selector window"
  },
  "taskDiversions": {
    "defaultMessage": "Diversions",
    "description": "Title of the 'diversions' group in the program inventory/task selector window"
  },
  "taskNumberedList": {
    "defaultMessage": "{number}. {title}",
    "description": "Format for a numbered group in the program inventory/task selection window"
  },
  "taskProgress": {
    "defaultMessage": "Task Progress",
    "description": "Title of the 'task progress' item in the program inventory/task selector window"
  },
  "taskStatusIncomplete": {
    "defaultMessage": "Incomplete",
    "description": "Status shown for a task that has been viewed, but not yet completed"
  },
  "taskStatusNew": {
    "defaultMessage": "New",
    "description": "Status shown for a task that has not yet been viewed"
  },
  "taskViewerButtonAvoision": {
    "defaultMessage": "Play Avoision",
    "description": "Text on button for playing Avoision"
  },
  "taskViewerButtonContinueEditing": {
    "defaultMessage": "Continue Editing Current Program",
    "description": "Text on button for continuing editing the current program"
  },
  "taskViewerButtonLoad": {
    "defaultMessage": "Load This Program",
    "description": "Text on button for loading the selected program"
  },
  "taskViewerButtonNextIncompleteTask": {
    "defaultMessage": "View Next Incomplete Task",
    "description": "Text on button for viewing the next incomplete task"
  },
  "taskViewerButtonSandbox": {
    "defaultMessage": "Enter Sandbox Mode",
    "description": "Text on button for Sandbox Mode"
  },
  "taskViewerButtonSolutionCopy": {
    "defaultMessage": "Copy",
    "description": "Text on the task viewer button to copy a solution file"
  },
  "taskViewerButtonSolutionDelete": {
    "defaultMessage": "Delete",
    "description": "Text on the task viewer button to attempt to delete a solution file"
  },
  "taskViewerButtonSolutionNew": {
    "defaultMessage": "New",
    "description": "Text on the task viewer button to create a new solution file"
  },
  "taskViewerButtonSolutionRename": {
    "defaultMessage": "Rename",
    "description": "Text on the task viewer button to rename a solution file"
  },
  "taskViewerButtonViewUnread": {
    "defaultMessage": "View Unread Electronic Mail",
    "description": "Text on button for viewing unread mail"
  },
  "taskViewerFilesEmpty": {
    "defaultMessage": "(No files found)",
    "description": "Text shown when there are no solutions saved for a task"
  },
  "taskViewerHeadingAvoision": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Program</cap>: Avoision",
    "description": "Markup for the heading shown for Avoisoin in the task viewer; use {newline} in between lines"
  },
  "taskViewerHeadingFile": {
    "defaultMessage": "File Selection",
    "description": "Heading for the 'file selection' (save management) part of a task"
  },
  "taskViewerHeadingUser": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Title</cap>: {title}",
    "description": "Markup for the heading shown on a user-specific page of the program inventory/task viewer; use {newline} in between lines"
  },
  "taskViewerMotivation": {
    "defaultMessage": "<p>SIC Systems appreciates your continued effort.</p><p>For motivational purposes, here is how the number of tasks you have completed compares to other engineers.</p>",
    "description": "Motivational message from employer introducing task completion statistics"
  },
  "taskViewerStatusCompleted": {
    "defaultMessage": "Completed",
    "description": "Status shown when a task has been completed"
  },
  "taskViewerStatusLine": {
    "defaultMessage": "<cap>Status</cap>: <cap>{status}</cap>",
    "description": "Line for status of the task heading shown in the task viewer"
  },
  "taskViewerTaskHeading": {
    "defaultMessage": "<cap>User</cap>: {name}{newline}<cap>Task</cap>: {title}{newline}{statusLine}{newline}{newline}<cap>Description</cap>: {description}",
    "description": "Heading content markup shown in the program inventory/task viewer for a particular task; use {newline} at the end of each line; note that {statusLine} is empty for Sandbox Mode"
  },
  "taskViewerTextIncomplete": {
    "defaultMessage": "You have not implemented this program yet. Click \"Load This Program\" at the bottom of this window to load the program into the editor.",
    "description": "Text shown in the task selector when a task has not been successfully implemented yet"
  },
  "taskWithStatus": {
    "defaultMessage": "{title} (<cap>{status}</cap>)",
    "description": "Format for showing a task with incomplete or new status"
  },
  "templateSolutionCopy": {
    "defaultMessage": "Copy of {name}",
    "description": "Text template for new names when copying an existing solution"
  },
  "templateSolutionDuplicate": {
    "defaultMessage": "{name} ({number})",
    "description": "Text template for new names when the desired name already exists"
  },
  "textCompilationErrorContext": {
    "defaultMessage": "<p>On line {sourceLineNumber}:</p><p>{sourceLine}</p>",
    "description": "Markup shown for the context of a compilation error, when a source line and line number are available"
  },
  "textConfirmDelete": {
    "defaultMessage": "Delete \"{itemName}\"?",
    "description": "Text asking if the item should be deleted"
  },
  "textCopyFailed": {
    "defaultMessage": "Error: Failed to copy to the clipboard.",
    "description": "Message shown when copying text to the clipboard fails (only used on the web version)"
  },
  "textCopySucceeded": {
    "defaultMessage": "Copied to the clipboard!",
    "description": "Message printed after copying text to the clipboard succeeds (only used on the web version)"
  },
  "textCreditsFooter": {
    "defaultMessage": "To view third party licenses, {link}.",
    "description": "Text at the bottom of the 'credits' message box, with instructions for viewing third party licenses"
  },
  "textHaltUnexpected": {
    "defaultMessage": "All of your assigned tasks require the program to repeat indefinitely, so this is an error that must be corrected.",
    "description": "Clarification that halting is not expected for all assigned tasks"
  },
  "textHint": {
    "defaultMessage": "Hint for {task}:",
    "description": "Text shown as a heading in the 'hint' message box"
  },
  "textLicenses": {
    "defaultMessage": "Third Party Licenses",
    "description": "Text heading for the 'third party licenses' message box, showing copyright notices, etc."
  },
  "textSaveClear": {
    "defaultMessage": "Use the button below to delete your solutions, user name, and achievements:",
    "description": "Text content shown in the initial 'clear save data' message box (only used on the web version)"
  },
  "textSaveClearFailed": {
    "defaultMessage": "Error: Failed to clear save data.",
    "description": "Message shown when clearing save data fails (only used on the web version)"
  },
  "textSaveDataImport": {
    "defaultMessage": "Paste in your previously exported save data string here:",
    "description": "Instructional text shown in the 'import save data' window"
  },
  "textSaveExport": {
    "defaultMessage": "Below is a compressed and encoded copy of your save data. You can later import this data to restore it.",
    "description": "Text shown in the 'export save data' message box (only used in the web version)"
  },
  "textSaveImportFailed": {
    "defaultMessage": "Error: Failed to overwrite save data.",
    "description": "Text shown when importing save data fails (only used on web version)"
  },
  "textTaskStatistics": {
    "defaultMessage": "Here are performance statistics of your program (as compared to others' programs):",
    "description": "Markup introducing task statistic charts for completed tasks"
  },
  "textVariablesEmpty": {
    "defaultMessage": "(empty)",
    "description": "Text shown in the 'variables' table when there are no variables"
  },
  "tooltipCommentBlock": {
    "defaultMessage": "Ctrl+K Ctrl+C",
    "description": "Tooltip for the 'comment block' button, which comments out the selected lines of program text"
  },
  "tooltipIndentBlock": {
    "defaultMessage": "Tab (in Tab Insert Mode only)",
    "description": "Tooltip for the 'indent block' button, which prepends one level of indentation to the selected lines of program text (note: the shortcut key is only supported when Tab Insert Mode is enabled)"
  },
  "tooltipMenu": {
    "defaultMessage": "Esc or F1",
    "description": "Tooltip for the 'menu' button, which opens the main menu"
  },
  "tooltipStep": {
    "defaultMessage": "Ctrl+.",
    "description": "Tooltip for the 'step/compile' button, indicating keyboard shortcut"
  },
  "tooltipStepRate": {
    "defaultMessage": "Ctrl+Enter",
    "description": "Tooltip for the 'run/turbo' button, which adjusts the program execution speed"
  },
  "tooltipStop": {
    "defaultMessage": "Esc or Ctrl+Shift+Enter",
    "description": "Tooltip for the 'pause/stop' button, indicating keyboard shortcut"
  },
  "tooltipTabInsertMode": {
    "defaultMessage": "Ctrl+M",
    "description": "Tooltip for the 'tab insert mode' toggle button, indicating keyboard shortcut"
  },
  "tooltipUncommentBlock": {
    "defaultMessage": "Ctrl+K Ctrl+U",
    "description": "Tooltip for the 'uncomment block' button, which uncomments the selected lines of program text"
  },
  "tooltipUnindentBlock": {
    "defaultMessage": "Shift+Tab (in Tab Insert Mode only)",
    "description": "Tooltip for the 'unindent block' button, which removes one level of indentation from the selected lines of program text (note: the shortcut key is only supported when Tab Insert Mode is enabled)"
  },
  "windowConfigureInput": {
    "defaultMessage": "Configure Input",
    "description": "Window title for configuring input in Sandbox Mode"
  },
  "windowEditProfile": {
    "defaultMessage": "User Profile",
    "description": "Window title for the user profile editing message box (only used on the web version)"
  },
  "windowHelp": {
    "defaultMessage": "Help",
    "description": "Window title for the 'help' menu, which provides access to hints, manuals, etc."
  },
  "windowHint": {
    "defaultMessage": "Hint",
    "description": "Window title for the 'hint' message box"
  },
  "windowIntro": {
    "defaultMessage": "Job Application",
    "description": "Window title for introduction ('job application') message box"
  },
  "windowMail": {
    "defaultMessage": "Electronic Mail",
    "description": "Window title for mail viewer message box"
  },
  "windowMenu": {
    "defaultMessage": "Main Menu",
    "description": "Window title for the main menu"
  },
  "windowOptions": {
    "defaultMessage": "Options",
    "description": "Window title for the general 'options' message box"
  },
  "windowSaveClear": {
    "defaultMessage": "Clear Data",
    "description": "Window title for the 'clear data' initial message box (only used on the web version)"
  },
  "windowSaveClearConfirm": {
    "defaultMessage": "Clear Data?",
    "description": "Window title of the 'clear save data' confirmation message box (only used on the web version)"
  },
  "windowSaveExport": {
    "defaultMessage": "Export Data",
    "description": "Title of the 'export save data' message box (only used on the web version)"
  },
  "windowSaveImport": {
    "defaultMessage": "Import Data",
    "description": "Title of the 'import save data' message box' (only used on the web version)"
  },
  "windowSaveManage": {
    "defaultMessage": "Manage Save Data",
    "description": "Window title for the 'manage save data' message box (only used on the web version)"
  },
  "windowSaveOverwrite": {
    "defaultMessage": "Overwrite Data?",
    "description": "Window title for the 'overwrite data when importing' confirmation message box (only used on web version)"
  },
  "windowTasks": {
    "defaultMessage": "Program Inventory",
    "description": "Window title for the 'program inventory' (shown when resuming and when selecting tasks)"
  },
  "windowTitleAvoision": {
    "defaultMessage": "Avoision",
    "description": "Window title for the Avoision message box"
  },
  "windowTitleConfirmDelete": {
    "defaultMessage": "Confirm Deletion",
    "description": "Title of 'confirm deletion' message box"
  },
  "windowTitleCredits": {
    "defaultMessage": "Credits",
    "description": "Window title for the 'credits' message box"
  },
  "windowTitleHalt": {
    "defaultMessage": "Program Halted",
    "description": "Window title for the message box that appears when a program halts"
  },
  "windowTitleLicenses": {
    "defaultMessage": "Licenses",
    "description": "Window title for the 'third party licenses' message box, showing copyright notices, etc."
  },
  "windowTitleNameExists": {
    "defaultMessage": "Name Already Exists",
    "description": "Title of 'name already exists' error message box"
  },
  "windowTitleNameInvalid": {
    "defaultMessage": "Invalid Name",
    "description": "Title of 'invalid name' error message box"
  },
  "windowTitleNoProgram": {
    "defaultMessage": "No Program",
    "description": "Window title for the message box that appears when attempting to run an empty program"
  },
  "windowTitlePresentationSettings": {
    "defaultMessage": "Presentation",
    "description": "Window title for the 'presentation settings' message box, which allows toggling fullscreen, adjusting volume, etc."
  }
}
