import "oaidl.idl";
import "ocidl.idl";

[uuid(8FD7F596-D7AF-408B-898D-39BFD7026FDC), version(0.1)]
library HostObjectsLibrary
{
    // WebView window helpers
    [uuid(BA3D2AA0-08DC-45B7-9F1A-5CC9F5CD4548), object, local]
    interface IWebViewWindow : IUnknown
    {
        [propget] HRESULT Fullscreen([out, retval] BOOL* fullscreen);
        [propput] HRESULT Fullscreen([in] BOOL fullscreen);

        [propget] HRESULT LocalStorageDataString([out, retval] BSTR* data);
        [propput] HRESULT LocalStorageDataString([in] BSTR data);

        [propget] HRESULT OnClosing([out, retval] IDispatch** callback);
        [propput] HRESULT OnClosing([in] IDispatch* callback);

        [propget] HRESULT IsDebuggerPresent([out, retval] BOOL* debuggerPresent);

        HRESULT GetPresentationSetting([in] BSTR name, [out, retval] VARIANT* data);
        HRESULT SetPresentationSetting([in] BSTR name, [in] VARIANT data);

        HRESULT ResolvePersistLocalStorage([in] VARIANT resolve, [in] VARIANT reject, [in] BSTR data);
        HRESULT ResolvePersistPresentationSettings([in] VARIANT resolve, [in] VARIANT reject);

        HRESULT OpenManual([in] BSTR locale);
    };

    [uuid(5169EE45-D7E6-4817-AB41-688C90CD3F11)]
    coclass WebViewWindow
    {
        [default] interface IWebViewWindow;
        interface IDispatch;
    };

    // Steam API
    [uuid(6BBACD52-138E-4364-B5A2-00EBB6C0EF0C), object, local]
    interface ISteam : IUnknown
    {
        [propget] HRESULT UserName([out, retval] BSTR* stringResult);

        // Leaderboards
        HRESULT ResolveGetLeaderboard([in] VARIANT resolve, [in] VARIANT reject, [in] BSTR leaderboardName);
        HRESULT ResolveSetLeaderboardEntry([in] VARIANT resolve, [in] VARIANT reject, [in] UINT32 jsHandle, [in] INT32 score, [in] VARIANT detailBytes);

        // Returned as a flat array (due to platform limitations): [name1, score1, name2, score2, ...]
        HRESULT ResolveGetFriendLeaderboardEntries([in] VARIANT resolve, [in] VARIANT reject, [in] UINT32 jsHandle);

        // Achievements
        HRESULT GetAchievement([in] BSTR achievementId, [out, retval] BOOL* achieved);
        HRESULT SetAchievement([in] BSTR achievementId, [out, retval] BOOL* newlyAchieved);
        HRESULT ResolveStoreAchievements([in] VARIANT resolve, [in] VARIANT reject);
    };

    [uuid(FA4150CA-D546-4B38-8047-74E53F4B3CD7)]
    coclass Steam
    {
        [default] interface ISteam;
        interface IDispatch;
    };
}